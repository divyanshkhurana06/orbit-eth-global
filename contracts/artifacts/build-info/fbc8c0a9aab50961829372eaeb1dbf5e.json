{"id":"fbc8c0a9aab50961829372eaeb1dbf5e","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/GameEscrow.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"./OrbitWinnerNFT.sol\";\n\n/**\n * @title GameEscrow\n * @dev Escrow contract for 1v1 skill-based games with Yellow Network integration\n * @notice This contract holds wagers and distributes winnings after game completion\n * \n * YELLOW NETWORK INTEGRATION:\n * - Players deposit once into Yellow state channel\n * - Game happens off-chain (instant, no gas)\n * - Winner determined by referee agent\n * - Settlement happens on-chain via this contract\n */\ncontract GameEscrow is ReentrancyGuard, Ownable {\n    \n    // ============ STATE VARIABLES ============\n    \n    struct Game {\n        address player1;\n        address player2;\n        uint256 wagerAmount;\n        address wagerToken; // address(0) for native token\n        GameMode gameMode;\n        GameStatus status;\n        address winner;\n        uint256 createdAt;\n        uint256 completedAt;\n        bytes32 gameDataHash; // Hash of game results for verification\n    }\n    \n    enum GameMode {\n        PUSHUP_BATTLE,\n        ROCK_PAPER_SCISSORS,\n        TABLE_TENNIS\n    }\n    \n    enum GameStatus {\n        WAITING,      // Waiting for player 2\n        ACTIVE,       // Both players joined, game in progress\n        COMPLETED,    // Game finished, winner declared\n        CANCELLED,    // Game cancelled\n        DISPUTED      // Game result disputed\n    }\n    \n    // Game ID counter\n    uint256 public gameIdCounter;\n    \n    // Mapping of game ID to Game struct\n    mapping(uint256 => Game) public games;\n    \n    // Mapping of player address to active game IDs\n    mapping(address => uint256[]) public playerGames;\n    \n    // Authorized referees (AI agents or oracle addresses)\n    mapping(address => bool) public authorizedReferees;\n    \n    // Platform fee (in basis points, e.g., 250 = 2.5%)\n    uint256 public platformFeeBps = 250;\n    \n    // Accumulated platform fees\n    mapping(address => uint256) public accumulatedFees;\n    \n    // Yellow Network integration\n    address public yellowNetworkBridge;\n    \n    // NFT contract for winner certificates\n    OrbitWinnerNFT public winnerNFT;\n    \n    // ============ EVENTS ============\n    \n    event GameCreated(\n        uint256 indexed gameId,\n        address indexed player1,\n        uint256 wagerAmount,\n        address wagerToken,\n        GameMode gameMode\n    );\n    \n    event GameJoined(\n        uint256 indexed gameId,\n        address indexed player2\n    );\n    \n    event GameCompleted(\n        uint256 indexed gameId,\n        address indexed winner,\n        uint256 winnings,\n        uint256 platformFee\n    );\n    \n    event GameCancelled(\n        uint256 indexed gameId,\n        address indexed player\n    );\n    \n    event GameDisputed(\n        uint256 indexed gameId,\n        address indexed disputedBy\n    );\n    \n    event RefereeAuthorized(address indexed referee);\n    event RefereeRevoked(address indexed referee);\n    event YellowBridgeUpdated(address indexed newBridge);\n    \n    // ============ MODIFIERS ============\n    \n    modifier onlyReferee() {\n        require(authorizedReferees[msg.sender], \"Not authorized referee\");\n        _;\n    }\n    \n    modifier gameExists(uint256 gameId) {\n        require(gameId < gameIdCounter, \"Game does not exist\");\n        _;\n    }\n    \n    modifier onlyGamePlayer(uint256 gameId) {\n        require(\n            games[gameId].player1 == msg.sender || \n            games[gameId].player2 == msg.sender,\n            \"Not a game player\"\n        );\n        _;\n    }\n    \n    // ============ CONSTRUCTOR ============\n    \n    constructor() Ownable(msg.sender) {\n        // Owner is automatically authorized as referee\n        authorizedReferees[msg.sender] = true;\n        \n        // Deploy winner NFT contract\n        winnerNFT = new OrbitWinnerNFT();\n    }\n    \n    // ============ CORE FUNCTIONS ============\n    \n    /**\n     * @notice Create a new game with a wager\n     * @param wagerAmount Amount to wager\n     * @param wagerToken Token address (address(0) for native token)\n     * @param gameMode Type of game to play\n     */\n    function createGame(\n        uint256 wagerAmount,\n        address wagerToken,\n        GameMode gameMode\n    ) external payable nonReentrant returns (uint256) {\n        require(wagerAmount > 0, \"Wager must be > 0\");\n        \n        // Handle payment\n        if (wagerToken == address(0)) {\n            require(msg.value == wagerAmount, \"Incorrect ETH amount\");\n        } else {\n            require(msg.value == 0, \"Do not send ETH with token wager\");\n            IERC20(wagerToken).transferFrom(msg.sender, address(this), wagerAmount);\n        }\n        \n        // Create game\n        uint256 gameId = gameIdCounter++;\n        games[gameId] = Game({\n            player1: msg.sender,\n            player2: address(0),\n            wagerAmount: wagerAmount,\n            wagerToken: wagerToken,\n            gameMode: gameMode,\n            status: GameStatus.WAITING,\n            winner: address(0),\n            createdAt: block.timestamp,\n            completedAt: 0,\n            gameDataHash: bytes32(0)\n        });\n        \n        playerGames[msg.sender].push(gameId);\n        \n        emit GameCreated(gameId, msg.sender, wagerAmount, wagerToken, gameMode);\n        \n        return gameId;\n    }\n    \n    /**\n     * @notice Join an existing game\n     * @param gameId ID of the game to join\n     */\n    function joinGame(uint256 gameId) external payable nonReentrant gameExists(gameId) {\n        Game storage game = games[gameId];\n        \n        require(game.status == GameStatus.WAITING, \"Game not available\");\n        require(game.player2 == address(0), \"Game already full\");\n        require(msg.sender != game.player1, \"Cannot play against yourself\");\n        \n        // Handle payment\n        if (game.wagerToken == address(0)) {\n            require(msg.value == game.wagerAmount, \"Incorrect ETH amount\");\n        } else {\n            require(msg.value == 0, \"Do not send ETH with token wager\");\n            IERC20(game.wagerToken).transferFrom(msg.sender, address(this), game.wagerAmount);\n        }\n        \n        // Update game\n        game.player2 = msg.sender;\n        game.status = GameStatus.ACTIVE;\n        \n        playerGames[msg.sender].push(gameId);\n        \n        emit GameJoined(gameId, msg.sender);\n    }\n    \n    /**\n     * @notice Complete a game and declare winner (called by authorized referee)\n     * @param gameId ID of the game\n     * @param winner Address of the winner\n     * @param gameDataHash Hash of game results for verification\n     */\n    function completeGame(\n        uint256 gameId,\n        address winner,\n        bytes32 gameDataHash\n    ) external onlyReferee gameExists(gameId) nonReentrant {\n        Game storage game = games[gameId];\n        \n        require(game.status == GameStatus.ACTIVE, \"Game not active\");\n        require(\n            winner == game.player1 || winner == game.player2,\n            \"Winner must be a player\"\n        );\n        \n        // Update game state\n        game.status = GameStatus.COMPLETED;\n        game.winner = winner;\n        game.completedAt = block.timestamp;\n        game.gameDataHash = gameDataHash;\n        \n        // Calculate winnings and fees\n        uint256 totalPot = game.wagerAmount * 2;\n        uint256 platformFee = (totalPot * platformFeeBps) / 10000;\n        uint256 winnings = totalPot - platformFee;\n        \n        // Accumulate platform fee\n        accumulatedFees[game.wagerToken] += platformFee;\n        \n        // Transfer winnings to winner\n        if (game.wagerToken == address(0)) {\n            (bool success, ) = winner.call{value: winnings}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(game.wagerToken).transfer(winner, winnings);\n        }\n        \n        // Mint winner NFT\n        string memory gameModeStr = _gameModeToString(game.gameMode);\n        winnerNFT.mintWinnerNFT(\n            winner,\n            winner == game.player1 ? game.player2 : game.player1,\n            gameModeStr,\n            game.wagerAmount,\n            string(abi.encodePacked(\"orbit-winner-\", Strings.toString(gameId)))\n        );\n        \n        emit GameCompleted(gameId, winner, winnings, platformFee);\n    }\n    \n    /**\n     * @notice Cancel a game before it starts (only if no player 2)\n     * @param gameId ID of the game to cancel\n     */\n    function cancelGame(uint256 gameId) \n        external \n        gameExists(gameId) \n        onlyGamePlayer(gameId) \n        nonReentrant \n    {\n        Game storage game = games[gameId];\n        \n        require(game.status == GameStatus.WAITING, \"Cannot cancel active game\");\n        require(game.player2 == address(0), \"Player 2 already joined\");\n        \n        game.status = GameStatus.CANCELLED;\n        \n        // Refund player 1\n        if (game.wagerToken == address(0)) {\n            (bool success, ) = game.player1.call{value: game.wagerAmount}(\"\");\n            require(success, \"ETH refund failed\");\n        } else {\n            IERC20(game.wagerToken).transfer(game.player1, game.wagerAmount);\n        }\n        \n        emit GameCancelled(gameId, msg.sender);\n    }\n    \n    /**\n     * @notice Dispute a game result\n     * @param gameId ID of the game to dispute\n     */\n    function disputeGame(uint256 gameId) \n        external \n        gameExists(gameId) \n        onlyGamePlayer(gameId) \n    {\n        Game storage game = games[gameId];\n        \n        require(\n            game.status == GameStatus.ACTIVE || game.status == GameStatus.COMPLETED,\n            \"Cannot dispute this game\"\n        );\n        \n        game.status = GameStatus.DISPUTED;\n        \n        emit GameDisputed(gameId, msg.sender);\n    }\n    \n    /**\n     * @notice Resolve a disputed game (owner only)\n     * @param gameId ID of the game\n     * @param resolution 0 = refund both, 1 = player1 wins, 2 = player2 wins\n     */\n    function resolveDispute(\n        uint256 gameId,\n        uint8 resolution\n    ) external onlyOwner gameExists(gameId) nonReentrant {\n        Game storage game = games[gameId];\n        \n        require(game.status == GameStatus.DISPUTED, \"Game not disputed\");\n        require(resolution <= 2, \"Invalid resolution\");\n        \n        game.status = GameStatus.COMPLETED;\n        game.completedAt = block.timestamp;\n        \n        if (resolution == 0) {\n            // Refund both players\n            if (game.wagerToken == address(0)) {\n                (bool s1, ) = game.player1.call{value: game.wagerAmount}(\"\");\n                (bool s2, ) = game.player2.call{value: game.wagerAmount}(\"\");\n                require(s1 && s2, \"ETH refund failed\");\n            } else {\n                IERC20(game.wagerToken).transfer(game.player1, game.wagerAmount);\n                IERC20(game.wagerToken).transfer(game.player2, game.wagerAmount);\n            }\n        } else {\n            // Award to winner\n            address winner = resolution == 1 ? game.player1 : game.player2;\n            game.winner = winner;\n            \n            uint256 totalPot = game.wagerAmount * 2;\n            uint256 platformFee = (totalPot * platformFeeBps) / 10000;\n            uint256 winnings = totalPot - platformFee;\n            \n            accumulatedFees[game.wagerToken] += platformFee;\n            \n            if (game.wagerToken == address(0)) {\n                (bool success, ) = winner.call{value: winnings}(\"\");\n                require(success, \"ETH transfer failed\");\n            } else {\n                IERC20(game.wagerToken).transfer(winner, winnings);\n            }\n            \n            emit GameCompleted(gameId, winner, winnings, platformFee);\n        }\n    }\n    \n    // ============ YELLOW NETWORK INTEGRATION ============\n    \n    /**\n     * @notice Create game session for Yellow Network off-chain processing\n     * @param gameId ID of the game\n     * @return sessionId Yellow Network session identifier\n     */\n    function createYellowSession(uint256 gameId) \n        external \n        gameExists(gameId) \n        returns (bytes32 sessionId) \n    {\n        Game storage game = games[gameId];\n        require(game.status == GameStatus.ACTIVE, \"Game must be active\");\n        \n        // Generate unique session ID\n        sessionId = keccak256(abi.encodePacked(gameId, block.timestamp, msg.sender));\n        \n        // In production, this would interact with Yellow Network bridge\n        // For now, we emit event that off-chain Yellow nodes can listen to\n        \n        return sessionId;\n    }\n    \n    /**\n     * @notice Set Yellow Network bridge address\n     * @param bridge Address of Yellow Network bridge contract\n     */\n    function setYellowBridge(address bridge) external onlyOwner {\n        yellowNetworkBridge = bridge;\n        emit YellowBridgeUpdated(bridge);\n    }\n    \n    // ============ ADMIN FUNCTIONS ============\n    \n    /**\n     * @notice Authorize a referee address (for AI agents or oracles)\n     * @param referee Address to authorize\n     */\n    function authorizeReferee(address referee) external onlyOwner {\n        authorizedReferees[referee] = true;\n        emit RefereeAuthorized(referee);\n    }\n    \n    /**\n     * @notice Revoke referee authorization\n     * @param referee Address to revoke\n     */\n    function revokeReferee(address referee) external onlyOwner {\n        authorizedReferees[referee] = false;\n        emit RefereeRevoked(referee);\n    }\n    \n    /**\n     * @notice Update platform fee\n     * @param newFeeBps New fee in basis points (max 10%)\n     */\n    function setPlatformFee(uint256 newFeeBps) external onlyOwner {\n        require(newFeeBps <= 1000, \"Fee too high\"); // Max 10%\n        platformFeeBps = newFeeBps;\n    }\n    \n    /**\n     * @notice Withdraw accumulated platform fees\n     * @param token Token address (address(0) for native token)\n     */\n    function withdrawFees(address token) external onlyOwner nonReentrant {\n        uint256 amount = accumulatedFees[token];\n        require(amount > 0, \"No fees to withdraw\");\n        \n        accumulatedFees[token] = 0;\n        \n        if (token == address(0)) {\n            (bool success, ) = owner().call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(token).transfer(owner(), amount);\n        }\n    }\n    \n    // ============ VIEW FUNCTIONS ============\n    \n    /**\n     * @notice Get game details\n     * @param gameId ID of the game\n     */\n    function getGame(uint256 gameId) \n        external \n        view \n        gameExists(gameId) \n        returns (Game memory) \n    {\n        return games[gameId];\n    }\n    \n    /**\n     * @notice Get all games for a player\n     * @param player Address of the player\n     */\n    function getPlayerGames(address player) \n        external \n        view \n        returns (uint256[] memory) \n    {\n        return playerGames[player];\n    }\n    \n    /**\n     * @notice Get active games count\n     */\n    function getActiveGamesCount() external view returns (uint256 count) {\n        for (uint256 i = 0; i < gameIdCounter; i++) {\n            if (games[i].status == GameStatus.ACTIVE) {\n                count++;\n            }\n        }\n    }\n    \n    // ============ HELPER FUNCTIONS ============\n    \n    /**\n     * @notice Convert GameMode enum to string\n     * @param gameMode GameMode enum value\n     * @return String representation\n     */\n    function _gameModeToString(GameMode gameMode) private pure returns (string memory) {\n        if (gameMode == GameMode.PUSHUP_BATTLE) return \"Pushup Battle\";\n        if (gameMode == GameMode.ROCK_PAPER_SCISSORS) return \"Rock Paper Scissors\";\n        if (gameMode == GameMode.TABLE_TENNIS) return \"Table Tennis\";\n        return \"Unknown\";\n    }\n    \n    // ============ RECEIVE FUNCTION ============\n    \n    receive() external payable {}\n}\n\n"},"contracts/OrbitWinnerNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title OrbitWinnerNFT\n * @dev NFT contract for minting winner certificates\n * @notice Mints NFTs to game winners with metadata\n */\ncontract OrbitWinnerNFT is ERC721, Ownable {\n    using Strings for uint256;\n    \n    uint256 private _tokenIdCounter;\n    string private _baseTokenURI;\n    \n    struct WinnerData {\n        address winner;\n        address opponent;\n        string gameMode;\n        uint256 wagerAmount;\n        uint256 timestamp;\n        string gameScreenshot; // IPFS hash or URL\n    }\n    \n    mapping(uint256 => WinnerData) public winnerData;\n    \n    event WinnerNFTMinted(\n        uint256 indexed tokenId,\n        address indexed winner,\n        string gameMode,\n        uint256 wagerAmount\n    );\n    \n    constructor() ERC721(\"Orbit Winner\", \"ORBIT-WIN\") Ownable(msg.sender) {\n        _baseTokenURI = \"https://orbit.app/api/nft/\";\n    }\n    \n    /**\n     * @notice Mint NFT to game winner\n     * @param winner Address of the winner\n     * @param opponent Address of the opponent\n     * @param gameMode Type of game won\n     * @param wagerAmount Amount wagered\n     * @param screenshotHash IPFS hash or URL of winning screenshot\n     */\n    function mintWinnerNFT(\n        address winner,\n        address opponent,\n        string memory gameMode,\n        uint256 wagerAmount,\n        string memory screenshotHash\n    ) external onlyOwner returns (uint256) {\n        uint256 tokenId = _tokenIdCounter++;\n        \n        winnerData[tokenId] = WinnerData({\n            winner: winner,\n            opponent: opponent,\n            gameMode: gameMode,\n            wagerAmount: wagerAmount,\n            timestamp: block.timestamp,\n            gameScreenshot: screenshotHash\n        });\n        \n        _safeMint(winner, tokenId);\n        \n        emit WinnerNFTMinted(tokenId, winner, gameMode, wagerAmount);\n        \n        return tokenId;\n    }\n    \n    /**\n     * @notice Get winner data for a token\n     * @param tokenId Token ID\n     * @return WinnerData struct\n     */\n    function getWinnerData(uint256 tokenId) external view returns (WinnerData memory) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        return winnerData[tokenId];\n    }\n    \n    /**\n     * @notice Get token URI for metadata\n     * @param tokenId Token ID\n     * @return Token metadata URI\n     */\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        WinnerData memory data = winnerData[tokenId];\n        \n        return string(abi.encodePacked(\n            _baseTokenURI,\n            tokenId.toString(),\n            \"?winner=\", _addressToString(data.winner),\n            \"&opponent=\", _addressToString(data.opponent),\n            \"&game=\", data.gameMode,\n            \"&wager=\", data.wagerAmount.toString(),\n            \"&timestamp=\", data.timestamp.toString(),\n            \"&screenshot=\", data.gameScreenshot\n        ));\n    }\n    \n    /**\n     * @notice Set base token URI\n     * @param newBaseURI New base URI\n     */\n    function setBaseURI(string memory newBaseURI) external onlyOwner {\n        _baseTokenURI = newBaseURI;\n    }\n    \n    /**\n     * @notice Convert address to string\n     * @param addr Address to convert\n     * @return String representation\n     */\n    function _addressToString(address addr) private pure returns (string memory) {\n        bytes32 value = bytes32(uint256(uint160(addr)));\n        bytes memory alphabet = \"0123456789abcdef\";\n        bytes memory str = new bytes(42);\n        str[0] = '0';\n        str[1] = 'x';\n        for (uint256 i = 0; i < 20; i++) {\n            str[2 + i * 2] = alphabet[uint8(value[i + 12] >> 4)];\n            str[3 + i * 2] = alphabet[uint8(value[i + 12] & 0x0f)];\n        }\n        return string(str);\n    }\n    \n    /**\n     * @notice Get total supply\n     * @return Total number of NFTs minted\n     */\n    function totalSupply() external view returns (uint256) {\n        return _tokenIdCounter;\n    }\n}\n\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/GameEscrow.sol:375:5:\n    |\n375 |     function createYellowSession(uint256 gameId) \n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":12716,"file":"contracts/GameEscrow.sol","start":12133},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1589],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1590,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1589],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[362]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"133:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":362,"linearizedBaseContracts":[362],"name":"IERC20","nameLocation":"215:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"228:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":296,"name":"Transfer","nameLocation":"397:8:2","nodeType":"EventDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:2","nodeType":"VariableDeclaration","scope":296,"src":"406:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:2","nodeType":"VariableDeclaration","scope":296,"src":"428:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:2","nodeType":"VariableDeclaration","scope":296,"src":"448:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:2"},"src":"391:72:2"},{"anonymous":false,"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"469:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":305,"name":"Approval","nameLocation":"628:8:2","nodeType":"EventDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:2","nodeType":"VariableDeclaration","scope":305,"src":"637:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":305,"src":"660:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:2","nodeType":"VariableDeclaration","scope":305,"src":"685:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:2"},"src":"622:78:2"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"706:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":311,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"796:2:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":311,"src":"822:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:2"},"scope":362,"src":"776:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"837:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":319,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:2","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"account","nameLocation":"940:7:2","nodeType":"VariableDeclaration","scope":319,"src":"932:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:2"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"972:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:2"},"scope":362,"src":"913:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"987:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:2","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"to","nameLocation":"1231:2:2","nodeType":"VariableDeclaration","scope":329,"src":"1223:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"value","nameLocation":"1243:5:2","nodeType":"VariableDeclaration","scope":329,"src":"1235:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:2"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"1268:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:2"},"scope":362,"src":"1205:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1280:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:2","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"owner","nameLocation":"1576:5:2","nodeType":"VariableDeclaration","scope":339,"src":"1568:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"spender","nameLocation":"1591:7:2","nodeType":"VariableDeclaration","scope":339,"src":"1583:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:2"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"1623:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:2"},"scope":362,"src":"1549:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1638:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":349,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:2","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"spender","nameLocation":"2335:7:2","nodeType":"VariableDeclaration","scope":349,"src":"2327:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"value","nameLocation":"2352:5:2","nodeType":"VariableDeclaration","scope":349,"src":"2344:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:2"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":349,"src":"2377:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":346,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:2"},"scope":362,"src":"2310:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"2389:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:2","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"from","nameLocation":"2721:4:2","nodeType":"VariableDeclaration","scope":361,"src":"2713:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"to","nameLocation":"2735:2:2","nodeType":"VariableDeclaration","scope":361,"src":"2727:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"value","nameLocation":"2747:5:2","nodeType":"VariableDeclaration","scope":361,"src":"2739:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:2"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"2772:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":358,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:2"},"scope":362,"src":"2691:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":363,"src":"205:2575:2","usedErrors":[],"usedEvents":[296,305]}],"src":"106:2675:2"},"id":2},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1589],"ERC165":[3136],"ERC721":[1319],"ERC721Utils":[1559],"IERC165":[3148],"IERC721":[1436],"IERC721Errors":[237],"IERC721Metadata":[1482],"Strings":[3112]},"id":1320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":1437,"src":"133:38:3","symbolAliases":[{"foreign":{"id":365,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":1483,"src":"172:65:3","symbolAliases":[{"foreign":{"id":367,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"180:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":1560,"src":"238:52:3","symbolAliases":[{"foreign":{"id":369,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"246:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":1590,"src":"291:48:3","symbolAliases":[{"foreign":{"id":371,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"299:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":3113,"src":"340:48:3","symbolAliases":[{"foreign":{"id":373,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"348:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":3137,"src":"389:69:3","symbolAliases":[{"foreign":{"id":375,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"397:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":376,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"406:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1320,"sourceUnit":285,"src":"459:66:3","symbolAliases":[{"foreign":{"id":378,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":381,"name":"Context","nameLocations":["803:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"803:7:3"},"id":382,"nodeType":"InheritanceSpecifier","src":"803:7:3"},{"baseName":{"id":383,"name":"ERC165","nameLocations":["812:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3136,"src":"812:6:3"},"id":384,"nodeType":"InheritanceSpecifier","src":"812:6:3"},{"baseName":{"id":385,"name":"IERC721","nameLocations":["820:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"820:7:3"},"id":386,"nodeType":"InheritanceSpecifier","src":"820:7:3"},{"baseName":{"id":387,"name":"IERC721Metadata","nameLocations":["829:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1482,"src":"829:15:3"},"id":388,"nodeType":"InheritanceSpecifier","src":"829:15:3"},{"baseName":{"id":389,"name":"IERC721Errors","nameLocations":["846:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:3"},"id":390,"nodeType":"InheritanceSpecifier","src":"846:13:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"527:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1319,"linearizedBaseContracts":[1319,237,1482,1436,3136,3148,1589],"name":"ERC721","nameLocation":"793:6:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":393,"libraryName":{"id":391,"name":"Strings","nameLocations":["872:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"872:7:3"},"nodeType":"UsingForDirective","src":"866:26:3","typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":395,"mutability":"mutable","name":"_name","nameLocation":"931:5:3","nodeType":"VariableDeclaration","scope":1319,"src":"916:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":394,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":397,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:3","nodeType":"VariableDeclaration","scope":1319,"src":"963:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":401,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1319,"src":"992:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":400,"keyName":"tokenId","keyNameLocation":"1008:7:3","keyType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":405,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:3","nodeType":"VariableDeclaration","scope":1319,"src":"1050:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":404,"keyName":"owner","keyNameLocation":"1066:5:3","keyType":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":409,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:3","nodeType":"VariableDeclaration","scope":1319,"src":"1108:59:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":408,"keyName":"tokenId","keyNameLocation":"1124:7:3","keyType":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":415,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:3","nodeType":"VariableDeclaration","scope":1319,"src":"1174:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":414,"keyName":"owner","keyNameLocation":"1190:5:3","keyType":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":413,"keyName":"operator","keyNameLocation":"1215:8:3","keyType":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":431,"nodeType":"Block","src":"1436:57:3","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":423,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"1446:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":424,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1454:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":426,"nodeType":"ExpressionStatement","src":"1446:13:3"},{"expression":{"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":427,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1469:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":428,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":430,"nodeType":"ExpressionStatement","src":"1469:17:3"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"1267:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":432,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"name_","nameLocation":"1406:5:3","nodeType":"VariableDeclaration","scope":432,"src":"1392:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":417,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:3","nodeType":"VariableDeclaration","scope":432,"src":"1413:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":419,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:3"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1436:0:3"},"scope":1319,"src":"1380:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3135,3147],"body":{"id":462,"nodeType":"Block","src":"1635:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":443,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":445,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"1684:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1436_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1436_$","typeString":"type(contract IERC721)"}],"id":444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1436","typeString":"type(contract IERC721)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1720:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":451,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1740:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1482_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1482_$","typeString":"type(contract IERC721Metadata)"}],"id":450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1482","typeString":"type(contract IERC721Metadata)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":458,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1808:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":456,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1319_$","typeString":"type(contract super ERC721)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3135,"src":"1784:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":442,"id":461,"nodeType":"Return","src":"1645:175:3"}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"1499:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:3","nodeType":"FunctionDefinition","overrides":{"id":439,"nodeType":"OverrideSpecifier","overrides":[{"id":437,"name":"ERC165","nameLocations":["1603:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3136,"src":"1603:6:3"},{"id":438,"name":"IERC165","nameLocations":["1611:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3148,"src":"1611:7:3"}],"src":"1594:25:3"},"parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:3","nodeType":"VariableDeclaration","scope":463,"src":"1554:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":434,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:3"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"1629:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:3"},"scope":1319,"src":"1527:300:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1361],"body":{"id":490,"nodeType":"Block","src":"1933:136:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"1947:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:3","typeDescriptions":{}}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":485,"nodeType":"IfStatement","src":"1943:87:3","trueBody":{"id":484,"nodeType":"Block","src":"1968:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":477,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1989:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"RevertStatement","src":"1982:37:3"}]}},{"expression":{"baseExpression":{"id":486,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2046:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":488,"indexExpression":{"id":487,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2056:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":470,"id":489,"nodeType":"Return","src":"2039:23:3"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1833:23:3","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":491,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:3","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"owner","nameLocation":"1888:5:3","nodeType":"VariableDeclaration","scope":491,"src":"1880:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:3"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"1924:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:3"},"scope":1319,"src":"1861:208:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1369],"body":{"id":503,"nodeType":"Block","src":"2175:46:3","statements":[{"expression":{"arguments":[{"id":500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":499,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"2192:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":498,"id":502,"nodeType":"Return","src":"2185:29:3"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2075:23:3","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":504,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:3","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:3","nodeType":"VariableDeclaration","scope":504,"src":"2120:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:3"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"2166:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:3"},"scope":1319,"src":"2103:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1467],"body":{"id":512,"nodeType":"Block","src":"2323:29:3","statements":[{"expression":{"id":510,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":509,"id":511,"nodeType":"Return","src":"2333:12:3"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2227:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":513,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:3","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"2276:2:3"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":513,"src":"2308:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":507,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:3"},"scope":1319,"src":"2263:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1473],"body":{"id":521,"nodeType":"Block","src":"2456:31:3","statements":[{"expression":{"id":519,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2473:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":518,"id":520,"nodeType":"Return","src":"2466:14:3"}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"2358:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"2409:2:3"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"2441:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":516,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:3"},"scope":1319,"src":"2394:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1481],"body":{"id":557,"nodeType":"Block","src":"2608:176:3","statements":[{"expression":{"arguments":[{"id":531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2632:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"2618:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":533,"nodeType":"ExpressionStatement","src":"2618:22:3"},{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:3","nodeType":"VariableDeclaration","scope":557,"src":"2651:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":534,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":538,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2675:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":541,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2708:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":539,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:3","memberName":"length","nodeType":"MemberAccess","src":"2702:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:3","trueExpression":{"arguments":[{"id":549,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2744:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"2753:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:3","typeDescriptions":{}}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":529,"id":556,"nodeType":"Return","src":"2695:82:3"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"2493:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:3","nodeType":"VariableDeclaration","scope":558,"src":"2547:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"2593:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":527,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:3"},"scope":1319,"src":"2529:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"3092:26:3","statements":[{"expression":{"hexValue":"","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":563,"id":565,"nodeType":"Return","src":"3102:9:3"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"2790:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:3","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"3043:2:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"3077:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:3"},"scope":1319,"src":"3026:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1409],"body":{"id":582,"nodeType":"Block","src":"3213:52:3","statements":[{"expression":{"arguments":[{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3232:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":578,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3245:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1186,1252],"referencedDeclaration":1186,"src":"3223:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"3223:35:3"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3124:23:3","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:3","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"3177:2:3","nodeType":"VariableDeclaration","scope":583,"src":"3169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:3","nodeType":"VariableDeclaration","scope":583,"src":"3181:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"3213:0:3"},"scope":1319,"src":"3152:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1425],"body":{"id":599,"nodeType":"Block","src":"3375:78:3","statements":[{"expression":{"arguments":[{"id":592,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3399:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":591,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3385:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":594,"nodeType":"ExpressionStatement","src":"3385:22:3"},{"expression":{"arguments":[{"id":596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3425:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":590,"id":598,"nodeType":"Return","src":"3418:28:3"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"3271:23:3","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":600,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:3","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:3","nodeType":"VariableDeclaration","scope":600,"src":"3320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:3"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"3366:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:3"},"scope":1319,"src":"3299:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":615,"nodeType":"Block","src":"3562:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":609,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3591:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3605:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":612,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3615:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":608,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3572:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"ExpressionStatement","src":"3572:52:3"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3459:23:3","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":616,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:3","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"operator","nameLocation":"3522:8:3","nodeType":"VariableDeclaration","scope":616,"src":"3514:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"approved","nameLocation":"3537:8:3","nodeType":"VariableDeclaration","scope":616,"src":"3532:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":604,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:3"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"3562:0:3"},"scope":1319,"src":"3487:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1435],"body":{"id":632,"nodeType":"Block","src":"3759:59:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":626,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3776:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":628,"indexExpression":{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3795:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":630,"indexExpression":{"id":629,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":625,"id":631,"nodeType":"Return","src":"3769:42:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3637:23:3","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"owner","nameLocation":"3699:5:3","nodeType":"VariableDeclaration","scope":633,"src":"3691:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"operator","nameLocation":"3714:8:3","nodeType":"VariableDeclaration","scope":633,"src":"3706:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:3"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"3753:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:3"},"scope":1319,"src":"3665:153:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1401],"body":{"id":678,"nodeType":"Block","src":"3932:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"3946:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:3","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":657,"nodeType":"IfStatement","src":"3942:87:3","trueBody":{"id":656,"nodeType":"Block","src":"3964:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:3","typeDescriptions":{}}},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":649,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3985:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"RevertStatement","src":"3978:40:3"}]}},{"assignments":[659],"declarations":[{"constant":false,"id":659,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:3","nodeType":"VariableDeclaration","scope":678,"src":"4247:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":666,"initialValue":{"arguments":[{"id":661,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4279:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":663,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4292:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":660,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4271:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4319:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4336:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"IfStatement","src":"4315:109:3","trueBody":{"id":676,"nodeType":"Block","src":"4342:82:3","statements":[{"errorCall":{"arguments":[{"id":671,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":673,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4399:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4363:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"RevertStatement","src":"4356:57:3"}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"3824:23:3","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":679,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:3","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"from","nameLocation":"3882:4:3","nodeType":"VariableDeclaration","scope":679,"src":"3874:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"to","nameLocation":"3896:2:3","nodeType":"VariableDeclaration","scope":679,"src":"3888:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:3","nodeType":"VariableDeclaration","scope":679,"src":"3900:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:3"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"3932:0:3"},"scope":1319,"src":"3852:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":696,"nodeType":"Block","src":"4540:56:3","statements":[{"expression":{"arguments":[{"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4573:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":689,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[697,727],"referencedDeclaration":727,"src":"4550:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"4550:39:3"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"4436:23:3","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":697,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"from","nameLocation":"4498:4:3","nodeType":"VariableDeclaration","scope":697,"src":"4490:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"to","nameLocation":"4512:2:3","nodeType":"VariableDeclaration","scope":697,"src":"4504:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:3","nodeType":"VariableDeclaration","scope":697,"src":"4516:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:3"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"4540:0:3"},"scope":1319,"src":"4464:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":726,"nodeType":"Block","src":"4733:130:3","statements":[{"expression":{"arguments":[{"id":710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"4762:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"4766:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4743:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"ExpressionStatement","src":"4743:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":718,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4832:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"4838:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"4842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":723,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4851:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":715,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"4784:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1559_$","typeString":"type(library ERC721Utils)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1558,"src":"4784:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"4784:72:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"4602:23:3","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":727,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"from","nameLocation":"4664:4:3","nodeType":"VariableDeclaration","scope":727,"src":"4656:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"to","nameLocation":"4678:2:3","nodeType":"VariableDeclaration","scope":727,"src":"4670:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:3","nodeType":"VariableDeclaration","scope":727,"src":"4682:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"data","nameLocation":"4712:4:3","nodeType":"VariableDeclaration","scope":727,"src":"4699:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:3"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"4733:0:3"},"scope":1319,"src":"4630:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":739,"nodeType":"Block","src":"5453:40:3","statements":[{"expression":{"baseExpression":{"id":735,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"5470:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":737,"indexExpression":{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":734,"id":738,"nodeType":"Return","src":"5463:23:3"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"4869:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:3","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:3","nodeType":"VariableDeclaration","scope":740,"src":"5396:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:3"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"5444:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:3"},"scope":1319,"src":"5378:115:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"5688:48:3","statements":[{"expression":{"baseExpression":{"id":748,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5705:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":750,"indexExpression":{"id":749,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":747,"id":751,"nodeType":"Return","src":"5698:31:3"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"5499:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:3","nodeType":"VariableDeclaration","scope":753,"src":"5631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"5679:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:3"},"scope":1319,"src":"5609:127:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"6156:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":765,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"6185:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":771,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6223:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":772,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":775,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6260:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":774,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6243:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6279:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":782,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"6304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":764,"id":787,"nodeType":"Return","src":"6166:146:3"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"5742:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:3","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"owner","nameLocation":"6078:5:3","nodeType":"VariableDeclaration","scope":789,"src":"6070:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"spender","nameLocation":"6093:7:3","nodeType":"VariableDeclaration","scope":789,"src":"6085:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:3","nodeType":"VariableDeclaration","scope":789,"src":"6102:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:3"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"6150:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":762,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:3"},"scope":1319,"src":"6047:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"6848:271:3","statements":[{"condition":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:3","subExpression":{"arguments":[{"id":800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6877:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"6884:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"6893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6863:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"6858:255:3","trueBody":{"id":823,"nodeType":"Block","src":"6903:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6921:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:3","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":821,"nodeType":"Block","src":"7019:84:3","statements":[{"errorCall":{"arguments":[{"id":817,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"7071:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":816,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7044:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"RevertStatement","src":"7037:51:3"}]},"id":822,"nodeType":"IfStatement","src":"6917:186:3","trueBody":{"id":815,"nodeType":"Block","src":"6942:71:3","statements":[{"errorCall":{"arguments":[{"id":812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"6990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6967:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"RevertStatement","src":"6960:38:3"}]}}]}}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"6325:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"owner","nameLocation":"6785:5:3","nodeType":"VariableDeclaration","scope":826,"src":"6777:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"spender","nameLocation":"6800:7:3","nodeType":"VariableDeclaration","scope":826,"src":"6792:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:3","nodeType":"VariableDeclaration","scope":826,"src":"6809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:3"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"6848:0:3"},"scope":1319,"src":"6751:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"7836:78:3","statements":[{"id":840,"nodeType":"UncheckedBlock","src":"7846:62:3","statements":[{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":834,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"7870:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":836,"indexExpression":{"id":835,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7880:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"7892:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"7870:27:3"}]}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"7125:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:3","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"7795:7:3","nodeType":"VariableDeclaration","scope":842,"src":"7787:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"value","nameLocation":"7812:5:3","nodeType":"VariableDeclaration","scope":842,"src":"7804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":830,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"7836:0:3"},"scope":1319,"src":"7761:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"8602:700:3","statements":[{"assignments":[855],"declarations":[{"constant":false,"id":855,"mutability":"mutable","name":"from","nameLocation":"8620:4:3","nodeType":"VariableDeclaration","scope":931,"src":"8612:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":859,"initialValue":{"arguments":[{"id":857,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8627:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:3","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8700:86:3","trueBody":{"id":872,"nodeType":"Block","src":"8724:62:3","statements":[{"expression":{"arguments":[{"id":867,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8761:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8738:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"8738:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8830:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:3","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":901,"nodeType":"IfStatement","src":"8826:256:3","trueBody":{"id":900,"nodeType":"Block","src":"8850:232:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:3","typeDescriptions":{}}},"id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:3","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":880,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1186,1252],"referencedDeclaration":1252,"src":"8946:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"8946:48:3"},{"id":899,"nodeType":"UncheckedBlock","src":"9009:63:3","statements":[{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":893,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"9037:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":895,"indexExpression":{"id":894,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9047:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":898,"nodeType":"ExpressionStatement","src":"9037:20:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9096:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":916,"nodeType":"IfStatement","src":"9092:107:3","trueBody":{"id":915,"nodeType":"Block","src":"9114:85:3","statements":[{"id":914,"nodeType":"UncheckedBlock","src":"9128:61:3","statements":[{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":908,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"9156:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":910,"indexExpression":{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9166:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"9156:18:3"}]}]}},{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":917,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"9209:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":919,"indexExpression":{"id":918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9228:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":922,"nodeType":"ExpressionStatement","src":"9209:21:3"},{"eventCall":{"arguments":[{"id":924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9255:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9261:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9246:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"EmitStatement","src":"9241:32:3"},{"expression":{"id":929,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9291:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":853,"id":930,"nodeType":"Return","src":"9284:11:3"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"7920:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"to","nameLocation":"8532:2:3","nodeType":"VariableDeclaration","scope":932,"src":"8524:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:3","nodeType":"VariableDeclaration","scope":932,"src":"8536:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"auth","nameLocation":"8561:4:3","nodeType":"VariableDeclaration","scope":932,"src":"8553:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"8593:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:3"},"scope":1319,"src":"8507:795:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"9677:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9691:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:3","typeDescriptions":{}}},"id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"9687:87:3","trueBody":{"id":953,"nodeType":"Block","src":"9709:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:3","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":946,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"9730:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"RevertStatement","src":"9723:40:3"}]}},{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:3","nodeType":"VariableDeclaration","scope":981,"src":"9783:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[{"id":958,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9815:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"9819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:3","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9807:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"9853:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:3","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"9849:96:3","trueBody":{"id":979,"nodeType":"Block","src":"9882:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"9903:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"9896:38:3"}]}}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"9308:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:3","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"to","nameLocation":"9647:2:3","nodeType":"VariableDeclaration","scope":982,"src":"9639:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:3","nodeType":"VariableDeclaration","scope":982,"src":"9651:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:3"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"9677:0:3"},"scope":1319,"src":"9624:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":996,"nodeType":"Block","src":"10359:43:3","statements":[{"expression":{"arguments":[{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10379:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"10383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":990,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[997,1027],"referencedDeclaration":1027,"src":"10369:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":995,"nodeType":"ExpressionStatement","src":"10369:26:3"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"9957:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":997,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:3","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"to","nameLocation":"10329:2:3","nodeType":"VariableDeclaration","scope":997,"src":"10321:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:3","nodeType":"VariableDeclaration","scope":997,"src":"10333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:3"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"10359:0:3"},"scope":1319,"src":"10302:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"10707:123:3","statements":[{"expression":{"arguments":[{"id":1008,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"10723:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10717:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"10717:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1015,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"10779:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"10805:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1023,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10818:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1012,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"10745:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1559_$","typeString":"type(library ERC721Utils)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1558,"src":"10745:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"10745:78:3"}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"10408:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:3","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"to","nameLocation":"10650:2:3","nodeType":"VariableDeclaration","scope":1027,"src":"10642:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:3","nodeType":"VariableDeclaration","scope":1027,"src":"10654:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"data","nameLocation":"10684:4:3","nodeType":"VariableDeclaration","scope":1027,"src":"10671:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:3"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"10707:0:3"},"scope":1319,"src":"10623:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"11197:186:3","statements":[{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:3","nodeType":"VariableDeclaration","scope":1059,"src":"11207:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:3","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"11251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:3","typeDescriptions":{}}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1035,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11285:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:3","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"11281:96:3","trueBody":{"id":1057,"nodeType":"Block","src":"11314:63:3","statements":[{"errorCall":{"arguments":[{"id":1054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"11358:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11335:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"RevertStatement","src":"11328:38:3"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"10836:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:3","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:3","nodeType":"VariableDeclaration","scope":1060,"src":"11171:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:3"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"11197:0:3"},"scope":1319,"src":"11156:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"11778:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:3","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"IfStatement","src":"11788:87:3","trueBody":{"id":1083,"nodeType":"Block","src":"11810:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:3","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1076,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"11831:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"RevertStatement","src":"11824:40:3"}]}},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:3","nodeType":"VariableDeclaration","scope":1119,"src":"11884:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1095,"initialValue":{"arguments":[{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11916:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11920:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:3","typeDescriptions":{}}},"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1087,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"11908:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"11954:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:3","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"12056:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1108,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"12073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"IfStatement","src":"12052:109:3","trueBody":{"id":1116,"nodeType":"Block","src":"12079:82:3","statements":[{"errorCall":{"arguments":[{"id":1111,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"12121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12127:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1113,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"12136:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1110,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12100:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"RevertStatement","src":"12093:57:3"}]}},"id":1118,"nodeType":"IfStatement","src":"11950:211:3","trueBody":{"id":1106,"nodeType":"Block","src":"11983:63:3","statements":[{"errorCall":{"arguments":[{"id":1103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12004:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"RevertStatement","src":"11997:38:3"}]}}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"11389:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:3","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"11734:4:3","nodeType":"VariableDeclaration","scope":1120,"src":"11726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"11748:2:3","nodeType":"VariableDeclaration","scope":1120,"src":"11740:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:3","nodeType":"VariableDeclaration","scope":1120,"src":"11752:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:3"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"11778:0:3"},"scope":1319,"src":"11707:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1137,"nodeType":"Block","src":"13176:53:3","statements":[{"expression":{"arguments":[{"id":1131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"13200:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"13206:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"13210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1130,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1138,1168],"referencedDeclaration":1168,"src":"13186:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"13186:36:3"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"12173:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:3","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"from","nameLocation":"13132:4:3","nodeType":"VariableDeclaration","scope":1138,"src":"13124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"13146:2:3","nodeType":"VariableDeclaration","scope":1138,"src":"13138:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:3","nodeType":"VariableDeclaration","scope":1138,"src":"13150:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:3"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"13176:0:3"},"scope":1319,"src":"13101:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"13568:127:3","statements":[{"expression":{"arguments":[{"id":1151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"13588:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13594:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"13578:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"13578:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1159,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"13650:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"13664:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13670:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13674:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13683:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1156,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"13616:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1559_$","typeString":"type(library ERC721Utils)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1558,"src":"13616:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"13616:72:3"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"13235:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:3","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"from","nameLocation":"13497:4:3","nodeType":"VariableDeclaration","scope":1168,"src":"13489:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"13511:2:3","nodeType":"VariableDeclaration","scope":1168,"src":"13503:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:3","nodeType":"VariableDeclaration","scope":1168,"src":"13515:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"data","nameLocation":"13545:4:3","nodeType":"VariableDeclaration","scope":1168,"src":"13532:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:3"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"13568:0:3"},"scope":1319,"src":"13466:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1185,"nodeType":"Block","src":"14208:50:3","statements":[{"expression":{"arguments":[{"id":1179,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"14227:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"14231:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1181,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"14240:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1178,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1186,1252],"referencedDeclaration":1252,"src":"14218:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"14218:33:3"}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"13701:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:3","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"14164:2:3","nodeType":"VariableDeclaration","scope":1186,"src":"14156:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:3","nodeType":"VariableDeclaration","scope":1186,"src":"14168:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"auth","nameLocation":"14193:4:3","nodeType":"VariableDeclaration","scope":1186,"src":"14185:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:3"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"14208:0:3"},"scope":1319,"src":"14138:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"14534:568:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"14600:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14613:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:3","typeDescriptions":{}}},"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"14596:460:3","trueBody":{"id":1243,"nodeType":"Block","src":"14633:423:3","statements":[{"assignments":[1207],"declarations":[{"constant":false,"id":1207,"mutability":"mutable","name":"owner","nameLocation":"14655:5:3","nodeType":"VariableDeclaration","scope":1243,"src":"14647:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"id":1209,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"14677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1208,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"14663:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14813:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:3","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"14835:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1219,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:3","subExpression":{"arguments":[{"id":1223,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"14870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14877:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"14853:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1233,"nodeType":"IfStatement","src":"14809:142:3","trueBody":{"id":1232,"nodeType":"Block","src":"14884:67:3","statements":[{"errorCall":{"arguments":[{"id":1229,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14931:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1228,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"14909:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"RevertStatement","src":"14902:34:3"}]}},{"condition":{"id":1234,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"14969:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1242,"nodeType":"IfStatement","src":"14965:81:3","trueBody":{"id":1241,"nodeType":"Block","src":"14980:66:3","statements":[{"eventCall":{"arguments":[{"id":1236,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15012:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"15019:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"15023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1235,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"15003:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"EmitStatement","src":"14998:33:3"}]}}]}},{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1245,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"15066:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1247,"indexExpression":{"id":1246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"15082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"15093:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1250,"nodeType":"ExpressionStatement","src":"15066:29:3"}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"14264:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:3","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"to","nameLocation":"14466:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"14458:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:3","nodeType":"VariableDeclaration","scope":1252,"src":"14470:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"auth","nameLocation":"14495:4:3","nodeType":"VariableDeclaration","scope":1252,"src":"14487:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:3","nodeType":"VariableDeclaration","scope":1252,"src":"14501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1194,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:3"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"14534:0:3"},"scope":1319,"src":"14440:662:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"15404:219:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"15418:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:3","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"15414:91:3","trueBody":{"id":1272,"nodeType":"Block","src":"15442:63:3","statements":[{"errorCall":{"arguments":[{"id":1269,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"15485:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1268,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15463:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"RevertStatement","src":"15456:38:3"}]}},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1274,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"15514:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1277,"indexExpression":{"id":1275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15533:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1278,"indexExpression":{"id":1276,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"15540:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1279,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"15552:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"ExpressionStatement","src":"15514:46:3"},{"eventCall":{"arguments":[{"id":1283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"15597:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1285,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"15607:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1282,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"15575:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"EmitStatement","src":"15570:46:3"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"15108:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:3","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"owner","nameLocation":"15347:5:3","nodeType":"VariableDeclaration","scope":1289,"src":"15339:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"operator","nameLocation":"15362:8:3","nodeType":"VariableDeclaration","scope":1289,"src":"15354:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"approved","nameLocation":"15377:8:3","nodeType":"VariableDeclaration","scope":1289,"src":"15372:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"15404:0:3"},"scope":1319,"src":"15311:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"15930:169:3","statements":[{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"owner","nameLocation":"15948:5:3","nodeType":"VariableDeclaration","scope":1317,"src":"15940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1302,"initialValue":{"arguments":[{"id":1300,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"15965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"15956:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"15987:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:3","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"15983:88:3","trueBody":{"id":1313,"nodeType":"Block","src":"16008:63:3","statements":[{"errorCall":{"arguments":[{"id":1310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16029:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"RevertStatement","src":"16022:38:3"}]}},{"expression":{"id":1315,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"16087:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1296,"id":1316,"nodeType":"Return","src":"16080:12:3"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"15629:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:3","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:3","nodeType":"VariableDeclaration","scope":1318,"src":"15881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:3"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"15921:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:3"},"scope":1319,"src":"15858:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1320,"src":"775:15326:3","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1335,1344,1353]}],"src":"107:15995:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3148],"IERC721":[1436]},"id":1437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1321,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1437,"sourceUnit":3149,"src":"134:62:4","symbolAliases":[{"foreign":{"id":1322,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1325,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3148,"src":"288:7:4"},"id":1326,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1436,"linearizedBaseContracts":[1436,3148],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1335,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":1335,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":1335,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":1335,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1344,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":1344,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":1344,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":1344,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1353,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":1353,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":1353,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":1353,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1361,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":1361,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1361,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":1436,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1369,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":1369,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":1369,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":1436,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":1381,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":1381,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":1381,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":1381,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1377,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":1436,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1391,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":1391,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":1391,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":1436,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1401,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":1401,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":1401,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":1401,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":1436,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":1409,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":1409,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":1436,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":1417,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":1417,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":1436,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1425,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":1425,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":1425,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":1436,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1435,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":1435,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":1435,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1432,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":1436,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1437,"src":"267:4661:4","usedErrors":[],"usedEvents":[1335,1344,1353]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1454]},"id":1455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1438,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"142:154:5","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1454,"linearizedBaseContracts":[1454],"name":"IERC721Receiver","nameLocation":"307:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"329:500:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1453,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:5","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"operator","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1453,"src":"869:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"903:4:5","nodeType":"VariableDeclaration","scope":1453,"src":"895:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:5","nodeType":"VariableDeclaration","scope":1453,"src":"917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"data","nameLocation":"957:4:5","nodeType":"VariableDeclaration","scope":1453,"src":"942:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:5"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"986:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1450,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:5"},"scope":1454,"src":"834:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1455,"src":"297:699:5","usedErrors":[],"usedEvents":[]}],"src":"116:881:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1436],"IERC721Metadata":[1482]},"id":1483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1456,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1483,"sourceUnit":1437,"src":"153:39:6","symbolAliases":[{"foreign":{"id":1457,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"161:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1460,"name":"IERC721","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"357:7:6"},"id":1461,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"194:133:6","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1482,"linearizedBaseContracts":[1482,1436,3148],"name":"IERC721Metadata","nameLocation":"338:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"371:58:6","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1467,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:6","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"447:2:6"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"473:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1464,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:6"},"scope":1482,"src":"434:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"494:60:6","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1473,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:6","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"574:2:6"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"600:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:6"},"scope":1482,"src":"559:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"621:90:6","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1481,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:6","nodeType":"VariableDeclaration","scope":1481,"src":"734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:6"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"774:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:6"},"scope":1482,"src":"716:73:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1483,"src":"328:463:6","usedErrors":[],"usedEvents":[1335,1344,1353]}],"src":"127:665:6"},"id":6},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1559],"IERC721Errors":[237],"IERC721Receiver":[1454]},"id":1560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":1455,"src":"144:55:7","symbolAliases":[{"foreign":{"id":1485,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"152:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1560,"sourceUnit":285,"src":"200:69:7","symbolAliases":[{"foreign":{"id":1487,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"271:159:7","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1559,"linearizedBaseContracts":[1559],"name":"ERC721Utils","nameLocation":"439:11:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1557,"nodeType":"Block","src":"1159:760:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1173:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:7","memberName":"code","nodeType":"MemberAccess","src":"1173:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:7","memberName":"length","nodeType":"MemberAccess","src":"1173:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1556,"nodeType":"IfStatement","src":"1169:744:7","trueBody":{"id":1555,"nodeType":"Block","src":"1193:720:7","statements":[{"clauses":[{"block":{"id":1533,"nodeType":"Block","src":"1303:214:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1325:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1521,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1335:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1454_$","typeString":"type(contract IERC721Receiver)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"1335:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"1321:182:7","trueBody":{"id":1531,"nodeType":"Block","src":"1378:125:7","statements":[{"errorCall":{"arguments":[{"id":1528,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1481:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1525,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"RevertStatement","src":"1438:46:7"}]}}]},"errorName":"","id":1534,"nodeType":"TryCatchClause","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"retval","nameLocation":"1295:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"1288:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1517,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:7"},"src":"1279:238:7"},{"block":{"id":1552,"nodeType":"Block","src":"1546:357:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1538,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1568:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:7","memberName":"length","nodeType":"MemberAccess","src":"1568:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1550,"nodeType":"Block","src":"1736:153:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:7"},"nodeType":"YulFunctionCall","src":"1816:17:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:7"},"nodeType":"YulFunctionCall","src":"1835:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:7"},"nodeType":"YulFunctionCall","src":"1809:40:7"},"nodeType":"YulExpressionStatement","src":"1809:40:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1536,"isOffset":false,"isSlot":false,"src":"1820:6:7","valueSize":1},{"declaration":1536,"isOffset":false,"isSlot":false,"src":"1841:6:7","valueSize":1}],"flags":["memory-safe"],"id":1549,"nodeType":"InlineAssembly","src":"1758:113:7"}]},"id":1551,"nodeType":"IfStatement","src":"1564:325:7","trueBody":{"id":1548,"nodeType":"Block","src":"1588:142:7","statements":[{"errorCall":{"arguments":[{"id":1545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1708:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1542,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"RevertStatement","src":"1665:46:7"}]}}]},"errorName":"","id":1553,"nodeType":"TryCatchClause","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"reason","nameLocation":"1538:6:7","nodeType":"VariableDeclaration","scope":1553,"src":"1525:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:7"},"src":"1518:385:7"}],"externalCall":{"arguments":[{"id":1512,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1248:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1258:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1264:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1515,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1273:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1508,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1211:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1454_$","typeString":"type(contract IERC721Receiver)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1454","typeString":"contract IERC721Receiver"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"1211:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1554,"nodeType":"TryStatement","src":"1207:696:7"}]}}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"457:531:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1558,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:7","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"operator","nameLocation":"1041:8:7","nodeType":"VariableDeclaration","scope":1558,"src":"1033:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"from","nameLocation":"1067:4:7","nodeType":"VariableDeclaration","scope":1558,"src":"1059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"to","nameLocation":"1089:2:7","nodeType":"VariableDeclaration","scope":1558,"src":"1081:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:7","nodeType":"VariableDeclaration","scope":1558,"src":"1101:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"data","nameLocation":"1139:4:7","nodeType":"VariableDeclaration","scope":1558,"src":"1126:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1499,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:7"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"1159:0:7"},"scope":1559,"src":"993:926:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1560,"src":"431:1490:7","usedErrors":[],"usedEvents":[]}],"src":"118:1804:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1589]},"id":1590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1561,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1589,"linearizedBaseContracts":[1589],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1570,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1566,"id":1569,"nodeType":"Return","src":"728:17:8"}]},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1589,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1576,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1575,"id":1578,"nodeType":"Return","src":"835:15:8"}]},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1573,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1589,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1584,"id":1586,"nodeType":"Return","src":"945:8:8"}]},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1589,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1590,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1641]},"id":1642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1591,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1641,"linearizedBaseContracts":[1641],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1596,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1641,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1600,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1641,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1604,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1641,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1608,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1641,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1612,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1641,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1616,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1641,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1620,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1641,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1624,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1641,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1628,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1641,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1632,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1641,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:9"},"nodeType":"YulFunctionCall","src":"1868:24:9"},"nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:9"},"nodeType":"YulFunctionCall","src":"1905:18:9"},"nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:9"},"nodeType":"YulFunctionCall","src":"1936:18:9"},"nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1635,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1638,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1640,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1641,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1642,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1710]},"id":1711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1643,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"135:894:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1710,"linearizedBaseContracts":[1710],"name":"ReentrancyGuard","nameLocation":"1048:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1647,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:10","nodeType":"VariableDeclaration","scope":1710,"src":"1818:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1650,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:10","nodeType":"VariableDeclaration","scope":1710,"src":"1864:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1652,"mutability":"mutable","name":"_status","nameLocation":"1923:7:10","nodeType":"VariableDeclaration","scope":1710,"src":"1907:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"1937:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1655,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:10","nodeType":"ErrorDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"2028:2:10"},"src":"1994:37:10"},{"body":{"id":1662,"nodeType":"Block","src":"2051:38:10","statements":[{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1658,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1659,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2071:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1661,"nodeType":"ExpressionStatement","src":"2061:21:10"}]},"id":1663,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"2048:2:10"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"2051:0:10"},"scope":1710,"src":"2037:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"2490:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1666,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2500:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"2500:21:10"},{"id":1669,"nodeType":"PlaceholderStatement","src":"2531:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1670,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2542:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"ExpressionStatement","src":"2542:20:10"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"2095:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1674,"name":"nonReentrant","nameLocation":"2475:12:10","nodeType":"ModifierDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"2487:2:10"},"src":"2466:103:10","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"2614:268:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1678,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1684,"nodeType":"IfStatement","src":"2698:86:10","trueBody":{"id":1683,"nodeType":"Block","src":"2722:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1680,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2743:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"RevertStatement","src":"2736:37:10"}]}},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1685,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1686,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"2858:17:10"}]},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:10","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[],"src":"2603:2:10"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"2614:0:10"},"scope":1710,"src":"2575:307:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1697,"nodeType":"Block","src":"2926:170:10","statements":[{"expression":{"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1694,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"3078:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ExpressionStatement","src":"3068:21:10"}]},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:10","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[],"src":"2915:2:10"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"2926:0:10"},"scope":1710,"src":"2888:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1708,"nodeType":"Block","src":"3339:42:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1704,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1705,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"3367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1707,"nodeType":"Return","src":"3349:25:10"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"3102:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:10","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"3307:2:10"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"3333:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:10"},"scope":1710,"src":"3275:106:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1711,"src":"1030:2353:10","usedErrors":[1655],"usedEvents":[]}],"src":"109:3275:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4769],"SafeCast":[6534],"SignedMath":[6678],"Strings":[3112]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1712,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":4770,"src":"127:37:11","symbolAliases":[{"foreign":{"id":1713,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6535,"src":"165:45:11","symbolAliases":[{"foreign":{"id":1715,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"173:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6679,"src":"211:49:11","symbolAliases":[{"foreign":{"id":1717,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"219:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"262:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112],"name":"Strings","nameLocation":"305:7:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1721,"libraryName":{"id":1720,"name":"SafeCast","nameLocations":["325:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":6534,"src":"325:8:11"},"nodeType":"UsingForDirective","src":"319:21:11"},{"constant":true,"id":1724,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:11","nodeType":"VariableDeclaration","scope":3112,"src":"346:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1722,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1727,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:11","nodeType":"VariableDeclaration","scope":3112,"src":"408:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1725,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1763,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:11","nodeType":"VariableDeclaration","scope":3112,"src":"456:302:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:11","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:11","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:11","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:11","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:11","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:11","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:11","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:11","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:11","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:11","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:11","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:11","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:11","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:11","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:11","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:11","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:11","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"778:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1770,"name":"StringsInsufficientHexLength","nameLocation":"870:28:11","nodeType":"ErrorDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"value","nameLocation":"907:5:11","nodeType":"VariableDeclaration","scope":1770,"src":"899:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"length","nameLocation":"922:6:11","nodeType":"VariableDeclaration","scope":1770,"src":"914:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:11"},"src":"864:66:11"},{"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"936:108:11","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1773,"name":"StringsInvalidChar","nameLocation":"1055:18:11","nodeType":"ErrorDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"1073:2:11"},"src":"1049:27:11"},{"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"1082:84:11","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1776,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:11","nodeType":"ErrorDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[],"src":"1204:2:11"},"src":"1171:36:11"},{"body":{"id":1823,"nodeType":"Block","src":"1379:563:11","statements":[{"id":1822,"nodeType":"UncheckedBlock","src":"1389:547:11","statements":[{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"length","nameLocation":"1421:6:11","nodeType":"VariableDeclaration","scope":1822,"src":"1413:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1441:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1786,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"1430:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4769_$","typeString":"type(library Math)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4601,"src":"1430:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:11"},{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:11","nodeType":"VariableDeclaration","scope":1822,"src":"1465:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1793,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1799,"initialValue":{"arguments":[{"id":1797,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1499:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1795,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:11"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:11","nodeType":"VariableDeclaration","scope":1822,"src":"1520:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1802,"nodeType":"VariableDeclarationStatement","src":"1520:11:11"},{"AST":{"nodeType":"YulBlock","src":"1570:69:11","statements":[{"nodeType":"YulAssignment","src":"1588:37:11","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:11"},"nodeType":"YulFunctionCall","src":"1599:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:11"},"nodeType":"YulFunctionCall","src":"1595:30:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1794,"isOffset":false,"isSlot":false,"src":"1603:6:11","valueSize":1},{"declaration":1785,"isOffset":false,"isSlot":false,"src":"1618:6:11","valueSize":1},{"declaration":1801,"isOffset":false,"isSlot":false,"src":"1588:3:11","valueSize":1}],"flags":["memory-safe"],"id":1803,"nodeType":"InlineAssembly","src":"1545:94:11"},{"body":{"id":1818,"nodeType":"Block","src":"1665:234:11","statements":[{"expression":{"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:11","subExpression":{"id":1805,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1683:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1807,"nodeType":"ExpressionStatement","src":"1683:5:11"},{"AST":{"nodeType":"YulBlock","src":"1731:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:11"},"nodeType":"YulFunctionCall","src":"1771:14:11"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:11"},"nodeType":"YulFunctionCall","src":"1766:32:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:11"},"nodeType":"YulFunctionCall","src":"1753:46:11"},"nodeType":"YulExpressionStatement","src":"1753:46:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1724,"isOffset":false,"isSlot":false,"src":"1787:10:11","valueSize":1},{"declaration":1801,"isOffset":false,"isSlot":false,"src":"1761:3:11","valueSize":1},{"declaration":1779,"isOffset":false,"isSlot":false,"src":"1775:5:11","valueSize":1}],"flags":["memory-safe"],"id":1808,"nodeType":"InlineAssembly","src":"1706:111:11"},{"expression":{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1812,"nodeType":"ExpressionStatement","src":"1834:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1867:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"1863:21:11","trueBody":{"id":1816,"nodeType":"Break","src":"1879:5:11"}}]},"condition":{"hexValue":"74727565","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1819,"nodeType":"WhileStatement","src":"1652:247:11"},{"expression":{"id":1820,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"1919:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1783,"id":1821,"nodeType":"Return","src":"1912:13:11"}]}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"1213:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:11","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"1334:5:11","nodeType":"VariableDeclaration","scope":1824,"src":"1326:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:11"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"1364:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:11"},"scope":3112,"src":"1308:634:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1849,"nodeType":"Block","src":"2118:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"2149:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:11","trueExpression":{"hexValue":"2d","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"2195:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1842,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"2180:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6678_$","typeString":"type(library SignedMath)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6677,"src":"2180:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2171:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1832,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:11","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1831,"id":1848,"nodeType":"Return","src":"2128:75:11"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"1948:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:11","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"value","nameLocation":"2073:5:11","nodeType":"VariableDeclaration","scope":1850,"src":"2066:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1826,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:11"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"2103:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:11"},"scope":3112,"src":"2042:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"2389:100:11","statements":[{"id":1868,"nodeType":"UncheckedBlock","src":"2399:84:11","statements":[{"expression":{"arguments":[{"id":1859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2442:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2461:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1860,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"2449:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4769_$","typeString":"type(library Math)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"2449:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1870,1953,1973],"referencedDeclaration":1953,"src":"2430:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1857,"id":1867,"nodeType":"Return","src":"2423:49:11"}]}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"2216:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:11","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"value","nameLocation":"2344:5:11","nodeType":"VariableDeclaration","scope":1870,"src":"2336:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:11"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"2374:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:11"},"scope":3112,"src":"2315:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"2702:435:11","statements":[{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:11","nodeType":"VariableDeclaration","scope":1952,"src":"2712:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1883,"initialValue":{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2733:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:11"},{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:11","nodeType":"VariableDeclaration","scope":1952,"src":"2748:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1884,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1894,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1889,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2784:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:11"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1895,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2805:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1897,"indexExpression":{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1900,"nodeType":"ExpressionStatement","src":"2805:15:11"},{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1901,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2830:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1903,"indexExpression":{"hexValue":"31","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1906,"nodeType":"ExpressionStatement","src":"2830:15:11"},{"body":{"id":1935,"nodeType":"Block","src":"2900:95:11","statements":[{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1921,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"2914:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1923,"indexExpression":{"id":1922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2921:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1924,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2926:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1928,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2937:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1930,"nodeType":"ExpressionStatement","src":"2914:40:11"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2968:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"2968:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2888:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1936,"initializationExpression":{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"i","nameLocation":"2868:1:11","nodeType":"VariableDeclaration","scope":1936,"src":"2860:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1914,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1910,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2876:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:11"},"loopExpression":{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:11","subExpression":{"id":1918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2897:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"2895:3:11"},"nodeType":"ForStatement","src":"2855:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3008:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1946,"nodeType":"IfStatement","src":"3004:96:11","trueBody":{"id":1945,"nodeType":"Block","src":"3025:75:11","statements":[{"errorCall":{"arguments":[{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3075:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1942,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3082:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3046:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"RevertStatement","src":"3039:50:11"}]}},{"expression":{"arguments":[{"id":1949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3123:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:11","typeDescriptions":{}}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1879,"id":1951,"nodeType":"Return","src":"3109:21:11"}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"2495:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:11","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"value","nameLocation":"2641:5:11","nodeType":"VariableDeclaration","scope":1953,"src":"2633:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"length","nameLocation":"2656:6:11","nodeType":"VariableDeclaration","scope":1953,"src":"2648:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:11"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"2687:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:11"},"scope":3112,"src":"2612:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"3369:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1966,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"3414:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1964,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:11","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:11","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1969,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3422:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1961,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1870,1953,1973],"referencedDeclaration":1953,"src":"3386:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1960,"id":1971,"nodeType":"Return","src":"3379:58:11"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"3143:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:11","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"addr","nameLocation":"3325:4:11","nodeType":"VariableDeclaration","scope":1973,"src":"3317:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:11"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"3354:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1958,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:11"},"scope":3112,"src":"3296:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"3701:642:11","statements":[{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:11","nodeType":"VariableDeclaration","scope":2037,"src":"3711:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[{"arguments":[{"id":1986,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3751:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1985,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1870,1953,1973],"referencedDeclaration":1973,"src":"3739:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1983,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:11","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:11"},{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:11","nodeType":"VariableDeclaration","scope":2037,"src":"3842:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1992,"nodeType":"VariableDeclarationStatement","src":"3842:17:11"},{"AST":{"nodeType":"YulBlock","src":"3894:78:11","statements":[{"nodeType":"YulAssignment","src":"3908:54:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:11","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:11"},"nodeType":"YulFunctionCall","src":"3939:17:11"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:11","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:11"},"nodeType":"YulFunctionCall","src":"3929:32:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:11"},"nodeType":"YulFunctionCall","src":"3921:41:11"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1982,"isOffset":false,"isSlot":false,"src":"3943:6:11","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"3908:9:11","valueSize":1}],"flags":["memory-safe"],"id":1993,"nodeType":"InlineAssembly","src":"3869:103:11"},{"body":{"id":2030,"nodeType":"Block","src":"4015:291:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4121:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"4150:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2013,"indexExpression":{"id":2012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4157:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2009,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:11","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"4117:150:11","trueBody":{"id":2024,"nodeType":"Block","src":"4167:100:11","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2018,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"4235:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2020,"indexExpression":{"id":2019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4242:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2023,"nodeType":"ExpressionStatement","src":"4235:17:11"}]}},{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2026,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4280:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"4280:15:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4003:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2031,"initializationExpression":{"assignments":[1995],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"i","nameLocation":"3995:1:11","nodeType":"VariableDeclaration","scope":2031,"src":"3987:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1997,"initialValue":{"hexValue":"3431","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:11","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:11"},"loopExpression":{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:11","subExpression":{"id":2001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4012:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"4010:3:11"},"nodeType":"ForStatement","src":"3982:324:11"},{"expression":{"arguments":[{"id":2034,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"4329:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:11","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1980,"id":2036,"nodeType":"Return","src":"4315:21:11"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"3450:165:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:11","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"addr","nameLocation":"3657:4:11","nodeType":"VariableDeclaration","scope":2038,"src":"3649:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:11"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"3686:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1978,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:11"},"scope":3112,"src":"3620:723:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"4498:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4521:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2048,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:11","typeDescriptions":{}}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:11","memberName":"length","nodeType":"MemberAccess","src":"4515:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"4540:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:11","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:11","memberName":"length","nodeType":"MemberAccess","src":"4534:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4569:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:11","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2059,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"4592:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:11","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2065,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2047,"id":2073,"nodeType":"Return","src":"4508:87:11"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"4349:66:11","text":" @dev Returns true if the two strings are equal."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:11","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"a","nameLocation":"4449:1:11","nodeType":"VariableDeclaration","scope":2075,"src":"4435:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"b","nameLocation":"4466:1:11","nodeType":"VariableDeclaration","scope":2075,"src":"4452:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2042,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:11"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"4492:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:11"},"scope":3112,"src":"4420:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2093,"nodeType":"Block","src":"4899:64:11","statements":[{"expression":{"arguments":[{"id":2084,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4926:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2088,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4942:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:11","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:11","memberName":"length","nodeType":"MemberAccess","src":"4936:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2094,2125],"referencedDeclaration":2125,"src":"4916:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2082,"id":2092,"nodeType":"Return","src":"4909:47:11"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"4608:214:11","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:11","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"input","nameLocation":"4860:5:11","nodeType":"VariableDeclaration","scope":2094,"src":"4846:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2077,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:11"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"4890:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:11"},"scope":3112,"src":"4827:136:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"5368:153:11","statements":[{"assignments":[2107,2109],"declarations":[{"constant":false,"id":2107,"mutability":"mutable","name":"success","nameLocation":"5384:7:11","nodeType":"VariableDeclaration","scope":2124,"src":"5379:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2106,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"value","nameLocation":"5401:5:11","nodeType":"VariableDeclaration","scope":2124,"src":"5393:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2115,"initialValue":{"arguments":[{"id":2111,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5423:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2112,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"5430:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2113,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5437:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2110,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2146,2183],"referencedDeclaration":2183,"src":"5410:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:11"},{"condition":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:11","subExpression":{"id":2116,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5456:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2121,"nodeType":"IfStatement","src":"5451:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2118,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"5472:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2120,"nodeType":"RevertStatement","src":"5465:27:11"}},{"expression":{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5509:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2105,"id":2123,"nodeType":"Return","src":"5502:12:11"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"4969:294:11","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:11","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"input","nameLocation":"5301:5:11","nodeType":"VariableDeclaration","scope":2125,"src":"5287:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2096,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"begin","nameLocation":"5316:5:11","nodeType":"VariableDeclaration","scope":2125,"src":"5308:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"end","nameLocation":"5331:3:11","nodeType":"VariableDeclaration","scope":2125,"src":"5323:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:11"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"5359:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:11"},"scope":3112,"src":"5268:253:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"5842:83:11","statements":[{"expression":{"arguments":[{"id":2136,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5888:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2140,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5904:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2138,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:11","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:11","memberName":"length","nodeType":"MemberAccess","src":"5898:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2135,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"5859:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2134,"id":2144,"nodeType":"Return","src":"5852:66:11"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"5527:215:11","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:11","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"input","nameLocation":"5783:5:11","nodeType":"VariableDeclaration","scope":2146,"src":"5769:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:11"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"success","nameLocation":"5818:7:11","nodeType":"VariableDeclaration","scope":2146,"src":"5813:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2130,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"value","nameLocation":"5835:5:11","nodeType":"VariableDeclaration","scope":2146,"src":"5827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:11"},"scope":3112,"src":"5747:178:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"6327:144:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6341:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2163,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6353:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2161,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:11","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:11","memberName":"length","nodeType":"MemberAccess","src":"6347:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"6370:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2168,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6378:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"6337:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2159,"id":2174,"nodeType":"Return","src":"6383:17:11"}},{"expression":{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6446:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2178,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"6453:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2179,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6460:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"6417:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2159,"id":2181,"nodeType":"Return","src":"6410:54:11"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"5931:238:11","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:11","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"input","nameLocation":"6219:5:11","nodeType":"VariableDeclaration","scope":2183,"src":"6205:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2148,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"begin","nameLocation":"6242:5:11","nodeType":"VariableDeclaration","scope":2183,"src":"6234:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"end","nameLocation":"6265:3:11","nodeType":"VariableDeclaration","scope":2183,"src":"6257:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:11"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"success","nameLocation":"6303:7:11","nodeType":"VariableDeclaration","scope":2183,"src":"6298:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2155,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"value","nameLocation":"6320:5:11","nodeType":"VariableDeclaration","scope":2183,"src":"6312:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:11"},"scope":3112,"src":"6174:297:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2252,"nodeType":"Block","src":"6874:347:11","statements":[{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:11","nodeType":"VariableDeclaration","scope":2252,"src":"6884:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2197,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2203,"initialValue":{"arguments":[{"id":2201,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"6912:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:11","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:11"},{"assignments":[2205],"declarations":[{"constant":false,"id":2205,"mutability":"mutable","name":"result","nameLocation":"6937:6:11","nodeType":"VariableDeclaration","scope":2252,"src":"6929:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2207,"initialValue":{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:11"},{"body":{"id":2246,"nodeType":"Block","src":"6995:189:11","statements":[{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"chr","nameLocation":"7015:3:11","nodeType":"VariableDeclaration","scope":2246,"src":"7009:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2218,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2224,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"7064:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"7072:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7041:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2221,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:11","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2220,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"7021:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"7094:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"7090:30:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2196,"id":2236,"nodeType":"Return","src":"7103:17:11"}},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7134:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"7134:12:11"},{"expression":{"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7160:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2243,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"7170:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2245,"nodeType":"ExpressionStatement","src":"7160:13:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6981:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2213,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"6985:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2247,"initializationExpression":{"assignments":[2209],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"i","nameLocation":"6970:1:11","nodeType":"VariableDeclaration","scope":2247,"src":"6962:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2211,"initialValue":{"id":2210,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"6974:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:11"},"loopExpression":{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:11","subExpression":{"id":2215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6992:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2217,"nodeType":"ExpressionStatement","src":"6990:3:11"},"nodeType":"ForStatement","src":"6957:227:11"},{"expression":{"components":[{"hexValue":"74727565","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7207:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2196,"id":2251,"nodeType":"Return","src":"7193:21:11"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"6477:224:11","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:11","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"input","nameLocation":"6767:5:11","nodeType":"VariableDeclaration","scope":2253,"src":"6753:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"begin","nameLocation":"6790:5:11","nodeType":"VariableDeclaration","scope":2253,"src":"6782:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"end","nameLocation":"6813:3:11","nodeType":"VariableDeclaration","scope":2253,"src":"6805:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:11"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"success","nameLocation":"6850:7:11","nodeType":"VariableDeclaration","scope":2253,"src":"6845:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"value","nameLocation":"6867:5:11","nodeType":"VariableDeclaration","scope":2253,"src":"6859:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:11"},"scope":3112,"src":"6706:515:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2271,"nodeType":"Block","src":"7518:63:11","statements":[{"expression":{"arguments":[{"id":2262,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"7544:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2266,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"7560:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2264,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:11","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:11","memberName":"length","nodeType":"MemberAccess","src":"7554:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2272,2303],"referencedDeclaration":2303,"src":"7535:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2260,"id":2270,"nodeType":"Return","src":"7528:46:11"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"7227:216:11","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:11","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"input","nameLocation":"7480:5:11","nodeType":"VariableDeclaration","scope":2272,"src":"7466:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:11"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"7510:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2258,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:11"},"scope":3112,"src":"7448:133:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"7986:151:11","statements":[{"assignments":[2285,2287],"declarations":[{"constant":false,"id":2285,"mutability":"mutable","name":"success","nameLocation":"8002:7:11","nodeType":"VariableDeclaration","scope":2302,"src":"7997:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2284,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"8018:5:11","nodeType":"VariableDeclaration","scope":2302,"src":"8011:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2286,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2293,"initialValue":{"arguments":[{"id":2289,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8039:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2290,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8046:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2291,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"8053:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2288,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2324,2366],"referencedDeclaration":2366,"src":"8027:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:11"},{"condition":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:11","subExpression":{"id":2294,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"8072:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"8067:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2296,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"8088:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"RevertStatement","src":"8081:27:11"}},{"expression":{"id":2300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"8125:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2283,"id":2301,"nodeType":"Return","src":"8118:12:11"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"7587:296:11","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:11","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"input","nameLocation":"7920:5:11","nodeType":"VariableDeclaration","scope":2303,"src":"7906:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2274,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"begin","nameLocation":"7935:5:11","nodeType":"VariableDeclaration","scope":2303,"src":"7927:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"end","nameLocation":"7950:3:11","nodeType":"VariableDeclaration","scope":2303,"src":"7942:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:11"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"7978:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2281,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:11"},"scope":3112,"src":"7888:249:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"8528:82:11","statements":[{"expression":{"arguments":[{"id":2314,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"8573:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2318,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"8589:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2316,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:11","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:11","memberName":"length","nodeType":"MemberAccess","src":"8583:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"8545:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2312,"id":2322,"nodeType":"Return","src":"8538:65:11"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"8143:287:11","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:11","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"input","nameLocation":"8470:5:11","nodeType":"VariableDeclaration","scope":2324,"src":"8456:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2305,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:11"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"success","nameLocation":"8505:7:11","nodeType":"VariableDeclaration","scope":2324,"src":"8500:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2308,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"value","nameLocation":"8521:5:11","nodeType":"VariableDeclaration","scope":2324,"src":"8514:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2310,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:11"},"scope":3112,"src":"8435:175:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2329,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:11","nodeType":"VariableDeclaration","scope":3112,"src":"8616:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2365,"nodeType":"Block","src":"9132:143:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"9146:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2346,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"9158:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2344,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:11","typeDescriptions":{}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:11","memberName":"length","nodeType":"MemberAccess","src":"9152:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"9175:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2351,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"9183:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"9142:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2342,"id":2357,"nodeType":"Return","src":"9188:17:11"}},{"expression":{"arguments":[{"id":2360,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"9250:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2361,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"9257:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2362,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"9264:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2359,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9222:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2342,"id":2364,"nodeType":"Return","src":"9215:53:11"}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"8673:303:11","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:11","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"input","nameLocation":"9025:5:11","nodeType":"VariableDeclaration","scope":2366,"src":"9011:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2331,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"begin","nameLocation":"9048:5:11","nodeType":"VariableDeclaration","scope":2366,"src":"9040:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"end","nameLocation":"9071:3:11","nodeType":"VariableDeclaration","scope":2366,"src":"9063:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:11"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"success","nameLocation":"9109:7:11","nodeType":"VariableDeclaration","scope":2366,"src":"9104:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"value","nameLocation":"9125:5:11","nodeType":"VariableDeclaration","scope":2366,"src":"9118:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2340,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:11"},"scope":3112,"src":"8981:294:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2486,"nodeType":"Block","src":"9675:812:11","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:11","nodeType":"VariableDeclaration","scope":2486,"src":"9685:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2386,"initialValue":{"arguments":[{"id":2384,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"9713:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2382,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:11","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:11"},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"sign","nameLocation":"9783:4:11","nodeType":"VariableDeclaration","scope":2486,"src":"9776:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2387,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2404,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"9790:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2390,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"9799:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2399,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"9847:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2400,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"9855:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2398,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9824:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2396,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:11","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:11","trueExpression":{"arguments":[{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2392,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:11","typeDescriptions":{}}},"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:11"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:11","nodeType":"VariableDeclaration","scope":2486,"src":"9943:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2413,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"9963:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2408,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:11","typeDescriptions":{}}},"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:11"},{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:11","nodeType":"VariableDeclaration","scope":2486,"src":"9992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2414,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2422,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10012:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2417,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:11","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:11"},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"offset","nameLocation":"10049:6:11","nodeType":"VariableDeclaration","scope":2486,"src":"10041:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10059:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2426,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"10075:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"10058:37:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:11"},{"assignments":[2433,2435],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:11","nodeType":"VariableDeclaration","scope":2486,"src":"10109:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:11","nodeType":"VariableDeclaration","scope":2486,"src":"10126:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2443,"initialValue":{"arguments":[{"id":2437,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"10159:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"10166:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2439,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"10174:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2441,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"10182:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2436,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2146,2183],"referencedDeclaration":2183,"src":"10146:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"10201:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10215:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2446,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"10226:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2464,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"10343:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2465,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"10357:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10373:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2468,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"10385:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2379,"id":2483,"nodeType":"Return","src":"10463:17:11"},"id":2484,"nodeType":"IfStatement","src":"10339:141:11","trueBody":{"id":2479,"nodeType":"Block","src":"10401:56:11","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2473,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:11","memberName":"min","nodeType":"MemberAccess","src":"10429:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2379,"id":2478,"nodeType":"Return","src":"10415:31:11"}]}},"id":2485,"nodeType":"IfStatement","src":"10197:283:11","trueBody":{"id":2463,"nodeType":"Block","src":"10242:91:11","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2450,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"10270:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2458,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10312:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2456,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:11","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:11","trueExpression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:11","subExpression":{"arguments":[{"id":2453,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10293:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2451,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:11","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2379,"id":2462,"nodeType":"Return","src":"10256:66:11"}]}}]},"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"9281:223:11","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2487,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:11","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"input","nameLocation":"9569:5:11","nodeType":"VariableDeclaration","scope":2487,"src":"9555:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2368,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"begin","nameLocation":"9592:5:11","nodeType":"VariableDeclaration","scope":2487,"src":"9584:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"end","nameLocation":"9615:3:11","nodeType":"VariableDeclaration","scope":2487,"src":"9607:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:11"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"success","nameLocation":"9652:7:11","nodeType":"VariableDeclaration","scope":2487,"src":"9647:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2375,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"value","nameLocation":"9668:5:11","nodeType":"VariableDeclaration","scope":2487,"src":"9661:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2377,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:11"},"scope":3112,"src":"9509:978:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2505,"nodeType":"Block","src":"10832:67:11","statements":[{"expression":{"arguments":[{"id":2496,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10862:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2500,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10878:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2498,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:11","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:11","memberName":"length","nodeType":"MemberAccess","src":"10872:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2495,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2506,2537],"referencedDeclaration":2537,"src":"10849:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2494,"id":2504,"nodeType":"Return","src":"10842:50:11"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"10493:259:11","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:11","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"input","nameLocation":"10793:5:11","nodeType":"VariableDeclaration","scope":2506,"src":"10779:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2489,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:11"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"10823:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:11"},"scope":3112,"src":"10757:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"11320:156:11","statements":[{"assignments":[2519,2521],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"success","nameLocation":"11336:7:11","nodeType":"VariableDeclaration","scope":2536,"src":"11331:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2518,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"value","nameLocation":"11353:5:11","nodeType":"VariableDeclaration","scope":2536,"src":"11345:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2527,"initialValue":{"arguments":[{"id":2523,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11378:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2524,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11385:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2525,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"11392:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2522,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2558,2595],"referencedDeclaration":2595,"src":"11362:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:11"},{"condition":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:11","subExpression":{"id":2528,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11411:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2533,"nodeType":"IfStatement","src":"11406:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2530,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"11427:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2532,"nodeType":"RevertStatement","src":"11420:27:11"}},{"expression":{"id":2534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"11464:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2517,"id":2535,"nodeType":"Return","src":"11457:12:11"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"10905:307:11","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:11","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"input","nameLocation":"11253:5:11","nodeType":"VariableDeclaration","scope":2537,"src":"11239:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2508,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"begin","nameLocation":"11268:5:11","nodeType":"VariableDeclaration","scope":2537,"src":"11260:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"end","nameLocation":"11283:3:11","nodeType":"VariableDeclaration","scope":2537,"src":"11275:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:11"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"11311:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:11"},"scope":3112,"src":"11217:259:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2557,"nodeType":"Block","src":"11803:86:11","statements":[{"expression":{"arguments":[{"id":2548,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11852:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2552,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11868:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2550,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:11","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:11","memberName":"length","nodeType":"MemberAccess","src":"11862:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2547,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"11820:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2546,"id":2556,"nodeType":"Return","src":"11813:69:11"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"11482:218:11","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:11","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"input","nameLocation":"11744:5:11","nodeType":"VariableDeclaration","scope":2558,"src":"11730:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2539,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:11"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"success","nameLocation":"11779:7:11","nodeType":"VariableDeclaration","scope":2558,"src":"11774:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2542,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"value","nameLocation":"11796:5:11","nodeType":"VariableDeclaration","scope":2558,"src":"11788:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:11"},"scope":3112,"src":"11705:184:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"12297:147:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"12311:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2575,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"12323:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2573,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:11","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:11","memberName":"length","nodeType":"MemberAccess","src":"12317:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"12340:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2580,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"12348:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"12307:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2571,"id":2586,"nodeType":"Return","src":"12353:17:11"}},{"expression":{"arguments":[{"id":2589,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"12419:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2590,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"12426:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2591,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"12433:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2588,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"12387:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2571,"id":2593,"nodeType":"Return","src":"12380:57:11"}]},"documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"11895:241:11","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:11","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"input","nameLocation":"12189:5:11","nodeType":"VariableDeclaration","scope":2595,"src":"12175:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2560,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"begin","nameLocation":"12212:5:11","nodeType":"VariableDeclaration","scope":2595,"src":"12204:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"end","nameLocation":"12235:3:11","nodeType":"VariableDeclaration","scope":2595,"src":"12227:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:11"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"success","nameLocation":"12273:7:11","nodeType":"VariableDeclaration","scope":2595,"src":"12268:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"12290:5:11","nodeType":"VariableDeclaration","scope":2595,"src":"12282:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:11"},"scope":3112,"src":"12141:303:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"12853:881:11","statements":[{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:11","nodeType":"VariableDeclaration","scope":2697,"src":"12863:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2615,"initialValue":{"arguments":[{"id":2613,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"12891:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2611,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:11","typeDescriptions":{}}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:11"},{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:11","nodeType":"VariableDeclaration","scope":2697,"src":"12945:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2637,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"12963:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12969:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2627,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13013:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2628,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"13021:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"12990:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2624,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:11","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2631,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:11","typeDescriptions":{}}},"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:11"},{"assignments":[2639],"declarations":[{"constant":false,"id":2639,"mutability":"mutable","name":"offset","nameLocation":"13133:6:11","nodeType":"VariableDeclaration","scope":2697,"src":"13125:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2640,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"13142:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"13142:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:11"},{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"result","nameLocation":"13183:6:11","nodeType":"VariableDeclaration","scope":2697,"src":"13175:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2649,"initialValue":{"hexValue":"30","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:11"},{"body":{"id":2691,"nodeType":"Block","src":"13250:447:11","statements":[{"assignments":[2663],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"chr","nameLocation":"13270:3:11","nodeType":"VariableDeclaration","scope":2691,"src":"13264:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2662,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2673,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"13319:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13327:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13296:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2665,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:11","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2664,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"13276:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"13349:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"13345:31:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2608,"id":2680,"nodeType":"Return","src":"13359:17:11"}},{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"13390:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ExpressionStatement","src":"13390:12:11"},{"id":2690,"nodeType":"UncheckedBlock","src":"13416:271:11","statements":[{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"13659:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2687,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"13669:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"13659:13:11"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13236:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"13240:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"initializationExpression":{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"i","nameLocation":"13216:1:11","nodeType":"VariableDeclaration","scope":2692,"src":"13208:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"13220:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2653,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"13228:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:11"},"loopExpression":{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:11","subExpression":{"id":2659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13247:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"13245:3:11"},"nodeType":"ForStatement","src":"13203:494:11"},{"expression":{"components":[{"hexValue":"74727565","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"13720:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2608,"id":2696,"nodeType":"Return","src":"13706:21:11"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"12450:227:11","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"input","nameLocation":"12746:5:11","nodeType":"VariableDeclaration","scope":2698,"src":"12732:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2597,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"begin","nameLocation":"12769:5:11","nodeType":"VariableDeclaration","scope":2698,"src":"12761:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"end","nameLocation":"12792:3:11","nodeType":"VariableDeclaration","scope":2698,"src":"12784:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:11"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"success","nameLocation":"12829:7:11","nodeType":"VariableDeclaration","scope":2698,"src":"12824:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"value","nameLocation":"12846:5:11","nodeType":"VariableDeclaration","scope":2698,"src":"12838:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:11"},"scope":3112,"src":"12682:1052:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2716,"nodeType":"Block","src":"14032:67:11","statements":[{"expression":{"arguments":[{"id":2707,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"14062:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2711,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"14078:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2709,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:11","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:11","memberName":"length","nodeType":"MemberAccess","src":"14072:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2706,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2717,2748],"referencedDeclaration":2748,"src":"14049:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2705,"id":2715,"nodeType":"Return","src":"14042:50:11"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"13740:212:11","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:11","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"input","nameLocation":"13993:5:11","nodeType":"VariableDeclaration","scope":2717,"src":"13979:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2700,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:11"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"14023:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:11"},"scope":3112,"src":"13957:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"14472:165:11","statements":[{"assignments":[2730,2732],"declarations":[{"constant":false,"id":2730,"mutability":"mutable","name":"success","nameLocation":"14488:7:11","nodeType":"VariableDeclaration","scope":2747,"src":"14483:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2729,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"value","nameLocation":"14505:5:11","nodeType":"VariableDeclaration","scope":2747,"src":"14497:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2731,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"id":2734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"14530:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2735,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"14537:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2736,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"14544:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2769,2873],"referencedDeclaration":2873,"src":"14514:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:11"},{"condition":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:11","subExpression":{"id":2739,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"14563:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2744,"nodeType":"IfStatement","src":"14558:50:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2741,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"14579:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2743,"nodeType":"RevertStatement","src":"14572:36:11"}},{"expression":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14625:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2728,"id":2746,"nodeType":"Return","src":"14618:12:11"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"14105:259:11","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:11","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"input","nameLocation":"14405:5:11","nodeType":"VariableDeclaration","scope":2748,"src":"14391:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"begin","nameLocation":"14420:5:11","nodeType":"VariableDeclaration","scope":2748,"src":"14412:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"end","nameLocation":"14435:3:11","nodeType":"VariableDeclaration","scope":2748,"src":"14427:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:11"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2748,"src":"14463:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:11"},"scope":3112,"src":"14369:268:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"14944:70:11","statements":[{"expression":{"arguments":[{"id":2759,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"14977:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2763,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"14993:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2761,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:11","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:11","memberName":"length","nodeType":"MemberAccess","src":"14987:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2758,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2769,2873],"referencedDeclaration":2873,"src":"14961:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2757,"id":2767,"nodeType":"Return","src":"14954:53:11"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"14643:198:11","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:11","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"input","nameLocation":"14885:5:11","nodeType":"VariableDeclaration","scope":2769,"src":"14871:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2750,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:11"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"success","nameLocation":"14920:7:11","nodeType":"VariableDeclaration","scope":2769,"src":"14915:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2753,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"value","nameLocation":"14937:5:11","nodeType":"VariableDeclaration","scope":2769,"src":"14929:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:11"},"scope":3112,"src":"14846:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"15407:733:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"15421:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2786,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"15433:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2784,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:11","typeDescriptions":{}}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:11","memberName":"length","nodeType":"MemberAccess","src":"15427:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"15450:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2791,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"15458:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"nodeType":"IfStatement","src":"15417:72:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:11","typeDescriptions":{}}},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2782,"id":2800,"nodeType":"Return","src":"15463:26:11"}},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:11","nodeType":"VariableDeclaration","scope":2872,"src":"15500:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2802,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2826,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"15518:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"15524:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"15574:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2813,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:11","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2817,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"15582:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2812,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"15545:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2810,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:11","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2820,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:11","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:11"},{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:11","nodeType":"VariableDeclaration","scope":2872,"src":"15686:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2836,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2830,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"15716:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"15716:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"15803:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2838,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"15809:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2840,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"15818:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2870,"nodeType":"Block","src":"16083:51:11","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:11","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2782,"id":2869,"nodeType":"Return","src":"16097:26:11"}]},"id":2871,"nodeType":"IfStatement","src":"15799:335:11","trueBody":{"id":2862,"nodeType":"Block","src":"15834:243:11","statements":[{"assignments":[2843,2845],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"s","nameLocation":"15955:1:11","nodeType":"VariableDeclaration","scope":2862,"src":"15950:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2842,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"v","nameLocation":"15966:1:11","nodeType":"VariableDeclaration","scope":2862,"src":"15958:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2851,"initialValue":{"arguments":[{"id":2847,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"16003:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2848,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"16010:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2849,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"16017:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"15971:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:11"},{"expression":{"components":[{"id":2852,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"16043:1:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2857,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"16062:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2855,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:11","typeDescriptions":{}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:11","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2782,"id":2861,"nodeType":"Return","src":"16035:31:11"}]}}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"15020:226:11","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:11","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"input","nameLocation":"15299:5:11","nodeType":"VariableDeclaration","scope":2873,"src":"15285:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2771,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"begin","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":2873,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"end","nameLocation":"15345:3:11","nodeType":"VariableDeclaration","scope":2873,"src":"15337:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:11"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"success","nameLocation":"15383:7:11","nodeType":"VariableDeclaration","scope":2873,"src":"15378:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2778,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"value","nameLocation":"15400:5:11","nodeType":"VariableDeclaration","scope":2873,"src":"15392:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2780,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:11"},"scope":3112,"src":"15251:889:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"16209:461:11","statements":[{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"value","nameLocation":"16225:5:11","nodeType":"VariableDeclaration","scope":2932,"src":"16219:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2880,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2886,"initialValue":{"arguments":[{"id":2884,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"16239:3:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2882,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:11","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:11"},{"id":2929,"nodeType":"UncheckedBlock","src":"16403:238:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16431:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:11","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16445:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:11","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16491:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16505:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:11","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16552:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16566:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:11","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2921,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:11","memberName":"max","nodeType":"MemberAccess","src":"16615:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2879,"id":2925,"nodeType":"Return","src":"16608:22:11"},"id":2926,"nodeType":"IfStatement","src":"16548:82:11","trueBody":{"expression":{"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16578:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:11","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2919,"nodeType":"ExpressionStatement","src":"16578:11:11"}},"id":2927,"nodeType":"IfStatement","src":"16487:143:11","trueBody":{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16518:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:11","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2908,"nodeType":"ExpressionStatement","src":"16518:11:11"}},"id":2928,"nodeType":"IfStatement","src":"16427:203:11","trueBody":{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16457:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2897,"nodeType":"ExpressionStatement","src":"16457:11:11"}}]},{"expression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"16658:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2879,"id":2931,"nodeType":"Return","src":"16651:12:11"}]},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:11","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"chr","nameLocation":"16175:3:11","nodeType":"VariableDeclaration","scope":2933,"src":"16168:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2874,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:11"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"16202:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2877,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:11"},"scope":3112,"src":"16146:524:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3098,"nodeType":"Block","src":"17336:1331:11","statements":[{"assignments":[2942],"declarations":[{"constant":false,"id":2942,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:11","nodeType":"VariableDeclaration","scope":3098,"src":"17346:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2941,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2947,"initialValue":{"arguments":[{"id":2945,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"17374:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2943,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:11","typeDescriptions":{}}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:11"},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"output","nameLocation":"17403:6:11","nodeType":"VariableDeclaration","scope":3098,"src":"17390:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2948,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2957,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2953,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"17426:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:11","memberName":"length","nodeType":"MemberAccess","src":"17426:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2950,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:11"},{"assignments":[2959],"declarations":[{"constant":false,"id":2959,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:11","nodeType":"VariableDeclaration","scope":3098,"src":"17473:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2961,"initialValue":{"hexValue":"30","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:11"},{"body":{"id":3090,"nodeType":"Block","src":"17548:854:11","statements":[{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"char","nameLocation":"17569:4:11","nodeType":"VariableDeclaration","scope":3090,"src":"17562:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2972,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2981,"initialValue":{"arguments":[{"arguments":[{"id":2977,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"17606:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"17614:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"17583:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2974,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:11","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:11"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"17637:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2986,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"17672:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2984,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:11","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3088,"nodeType":"Block","src":"18330:62:11","statements":[{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3081,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"18348:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3084,"indexExpression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:11","subExpression":{"id":3082,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"18355:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3085,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"18373:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3087,"nodeType":"ExpressionStatement","src":"18348:29:11"}]},"id":3089,"nodeType":"IfStatement","src":"17631:761:11","trueBody":{"id":3080,"nodeType":"Block","src":"17687:637:11","statements":[{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2995,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2998,"indexExpression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:11","subExpression":{"id":2996,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17712:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3001,"nodeType":"ExpressionStatement","src":"17705:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"17756:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"17825:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"17894:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"17963:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:11","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"18032:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:11","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"18101:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:11","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"18171:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3073,"nodeType":"IfStatement","src":"18167:143:11","trueBody":{"id":3072,"nodeType":"Block","src":"18185:125:11","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3065,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"18263:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3068,"indexExpression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:11","subExpression":{"id":3066,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"18270:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3071,"nodeType":"ExpressionStatement","src":"18263:28:11"}]}},"id":3074,"nodeType":"IfStatement","src":"18097:213:11","trueBody":{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3055,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"18115:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3058,"indexExpression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:11","subExpression":{"id":3056,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"18122:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3061,"nodeType":"ExpressionStatement","src":"18115:29:11"}},"id":3075,"nodeType":"IfStatement","src":"18028:282:11","trueBody":{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3045,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"18046:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3048,"indexExpression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:11","subExpression":{"id":3046,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"18053:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3051,"nodeType":"ExpressionStatement","src":"18046:28:11"}},"id":3076,"nodeType":"IfStatement","src":"17959:351:11","trueBody":{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3035,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17977:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3038,"indexExpression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:11","subExpression":{"id":3036,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17984:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3041,"nodeType":"ExpressionStatement","src":"17977:28:11"}},"id":3077,"nodeType":"IfStatement","src":"17890:420:11","trueBody":{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3025,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17908:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3028,"indexExpression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:11","subExpression":{"id":3026,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17915:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3031,"nodeType":"ExpressionStatement","src":"17908:28:11"}},"id":3078,"nodeType":"IfStatement","src":"17821:489:11","trueBody":{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3015,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17839:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3018,"indexExpression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:11","subExpression":{"id":3016,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17846:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3021,"nodeType":"ExpressionStatement","src":"17839:28:11"}},"id":3079,"nodeType":"IfStatement","src":"17752:558:11","trueBody":{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3005,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17770:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3008,"indexExpression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:11","subExpression":{"id":3006,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17777:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3011,"nodeType":"ExpressionStatement","src":"17770:28:11"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"17524:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2966,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"17528:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:11","memberName":"length","nodeType":"MemberAccess","src":"17528:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"initializationExpression":{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"i","nameLocation":"17521:1:11","nodeType":"VariableDeclaration","scope":3091,"src":"17513:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2964,"nodeType":"VariableDeclarationStatement","src":"17513:9:11"},"loopExpression":{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:11","subExpression":{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"17545:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"17543:3:11"},"nodeType":"ForStatement","src":"17508:894:11"},{"AST":{"nodeType":"YulBlock","src":"18500:129:11","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:11"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:11"},"nodeType":"YulFunctionCall","src":"18514:28:11"},"nodeType":"YulExpressionStatement","src":"18514:28:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:11","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:11","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:11","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:11"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:11","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:11"},"nodeType":"YulFunctionCall","src":"18594:21:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:11"},"nodeType":"YulFunctionCall","src":"18587:29:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:11"},"nodeType":"YulFunctionCall","src":"18580:37:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:11"},"nodeType":"YulFunctionCall","src":"18568:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:11"},"nodeType":"YulFunctionCall","src":"18555:64:11"},"nodeType":"YulExpressionStatement","src":"18555:64:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2949,"isOffset":false,"isSlot":false,"src":"18521:6:11","valueSize":1},{"declaration":2949,"isOffset":false,"isSlot":false,"src":"18572:6:11","valueSize":1},{"declaration":2959,"isOffset":false,"isSlot":false,"src":"18529:12:11","valueSize":1},{"declaration":2959,"isOffset":false,"isSlot":false,"src":"18598:12:11","valueSize":1}],"flags":["memory-safe"],"id":3092,"nodeType":"InlineAssembly","src":"18475:154:11"},{"expression":{"arguments":[{"id":3095,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"18653:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3093,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:11","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2940,"id":3097,"nodeType":"Return","src":"18639:21:11"}]},"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"16676:576:11","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:11","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"input","nameLocation":"17291:5:11","nodeType":"VariableDeclaration","scope":3099,"src":"17277:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2935,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:11"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"17321:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2938,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:11"},"scope":3112,"src":"17257:1410:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"19052:225:11","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:11","statements":[{"nodeType":"YulAssignment","src":"19215:46:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:11"},"nodeType":"YulFunctionCall","src":"19234:17:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:11"},"nodeType":"YulFunctionCall","src":"19230:30:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:11"},"nodeType":"YulFunctionCall","src":"19224:37:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3102,"isOffset":false,"isSlot":false,"src":"19238:6:11","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"19253:6:11","valueSize":1},{"declaration":3107,"isOffset":false,"isSlot":false,"src":"19215:5:11","valueSize":1}],"flags":["memory-safe"],"id":3109,"nodeType":"InlineAssembly","src":"19176:95:11"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"18673:268:11","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:11","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:11","nodeType":"VariableDeclaration","scope":3111,"src":"18978:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3101,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"offset","nameLocation":"19007:6:11","nodeType":"VariableDeclaration","scope":3111,"src":"18999:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:11"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"value","nameLocation":"19045:5:11","nodeType":"VariableDeclaration","scope":3111,"src":"19037:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:11"},"scope":3112,"src":"18946:331:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3113,"src":"297:18982:11","usedErrors":[1770,1773,1776],"usedEvents":[]}],"src":"101:19179:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3136],"IERC165":[3148]},"id":3137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":3149,"src":"140:38:12","symbolAliases":[{"foreign":{"id":3115,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3118,"name":"IERC165","nameLocations":["688:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3148,"src":"688:7:12"},"id":3119,"nodeType":"InheritanceSpecifier","src":"688:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"180:479:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3136,"linearizedBaseContracts":[3136,3148],"name":"ERC165","nameLocation":"678:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3147],"body":{"id":3134,"nodeType":"Block","src":"812:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"829:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3129,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"849:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3148_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3148_$","typeString":"type(contract IERC165)"}],"id":3128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3148","typeString":"type(contract IERC165)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3126,"id":3133,"nodeType":"Return","src":"822:47:12"}]},"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"702:23:12","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:12","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:12","nodeType":"VariableDeclaration","scope":3135,"src":"757:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:12"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"806:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3124,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:12"},"scope":3136,"src":"730:146:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3137,"src":"660:218:12","usedErrors":[],"usedEvents":[]}],"src":"114:765:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3148]},"id":3149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3138,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"142:280:13","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3148,"linearizedBaseContracts":[3148],"name":"IERC165","nameLocation":"433:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"447:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3147,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:13","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:13","nodeType":"VariableDeclaration","scope":3147,"src":"819:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3141,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:13"},"returnParameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3147,"src":"862:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3144,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:13"},"scope":3148,"src":"792:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3149,"src":"423:447:13","usedErrors":[],"usedEvents":[]}],"src":"115:756:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4769],"Panic":[1641],"SafeCast":[6534]},"id":4770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4770,"sourceUnit":1642,"src":"129:35:14","symbolAliases":[{"foreign":{"id":3151,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"137:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4770,"sourceUnit":6535,"src":"165:40:14","symbolAliases":[{"foreign":{"id":3153,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"207:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4769,"linearizedBaseContracts":[4769],"name":"Math","nameLocation":"289:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3160,"members":[{"id":3156,"name":"Floor","nameLocation":"324:5:14","nodeType":"EnumValue","src":"324:5:14"},{"id":3157,"name":"Ceil","nameLocation":"367:4:14","nodeType":"EnumValue","src":"367:4:14"},{"id":3158,"name":"Trunc","nameLocation":"409:5:14","nodeType":"EnumValue","src":"409:5:14"},{"id":3159,"name":"Expand","nameLocation":"439:6:14","nodeType":"EnumValue","src":"439:6:14"}],"name":"Rounding","nameLocation":"305:8:14","nodeType":"EnumDefinition","src":"300:169:14"},{"body":{"id":3173,"nodeType":"Block","src":"731:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:14","statements":[{"nodeType":"YulAssignment","src":"780:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:14"}]},{"nodeType":"YulAssignment","src":"809:18:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:14"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:14"},"nodeType":"YulFunctionCall","src":"817:10:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3163,"isOffset":false,"isSlot":false,"src":"791:1:14","valueSize":1},{"declaration":3163,"isOffset":false,"isSlot":false,"src":"825:1:14","valueSize":1},{"declaration":3165,"isOffset":false,"isSlot":false,"src":"794:1:14","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"809:4:14","valueSize":1},{"declaration":3170,"isOffset":false,"isSlot":false,"src":"780:3:14","valueSize":1},{"declaration":3170,"isOffset":false,"isSlot":false,"src":"820:3:14","valueSize":1}],"flags":["memory-safe"],"id":3172,"nodeType":"InlineAssembly","src":"741:96:14"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"475:163:14","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:14","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"a","nameLocation":"667:1:14","nodeType":"VariableDeclaration","scope":3174,"src":"659:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"b","nameLocation":"678:1:14","nodeType":"VariableDeclaration","scope":3174,"src":"670:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:14"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"high","nameLocation":"712:4:14","nodeType":"VariableDeclaration","scope":3174,"src":"704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"low","nameLocation":"726:3:14","nodeType":"VariableDeclaration","scope":3174,"src":"718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:14"},"scope":4769,"src":"643:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"1115:462:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:14"},"nodeType":"YulFunctionCall","src":"1474:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:14"},"nodeType":"YulFunctionCall","src":"1461:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:14","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:14"},"nodeType":"YulFunctionCall","src":"1501:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:14"}]},{"nodeType":"YulAssignment","src":"1523:38:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:14"},"nodeType":"YulFunctionCall","src":"1535:12:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:14"},"nodeType":"YulFunctionCall","src":"1549:11:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:14"},"nodeType":"YulFunctionCall","src":"1531:30:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3177,"isOffset":false,"isSlot":false,"src":"1468:1:14","valueSize":1},{"declaration":3177,"isOffset":false,"isSlot":false,"src":"1505:1:14","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"1471:1:14","valueSize":1},{"declaration":3179,"isOffset":false,"isSlot":false,"src":"1508:1:14","valueSize":1},{"declaration":3182,"isOffset":false,"isSlot":false,"src":"1523:4:14","valueSize":1},{"declaration":3184,"isOffset":false,"isSlot":false,"src":"1494:3:14","valueSize":1},{"declaration":3184,"isOffset":false,"isSlot":false,"src":"1543:3:14","valueSize":1},{"declaration":3184,"isOffset":false,"isSlot":false,"src":"1556:3:14","valueSize":1}],"flags":["memory-safe"],"id":3186,"nodeType":"InlineAssembly","src":"1412:159:14"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"849:173:14","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:14","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"a","nameLocation":"1051:1:14","nodeType":"VariableDeclaration","scope":3188,"src":"1043:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"b","nameLocation":"1062:1:14","nodeType":"VariableDeclaration","scope":3188,"src":"1054:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:14"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"high","nameLocation":"1096:4:14","nodeType":"VariableDeclaration","scope":3188,"src":"1088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"low","nameLocation":"1110:3:14","nodeType":"VariableDeclaration","scope":3188,"src":"1102:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:14"},"scope":4769,"src":"1027:550:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3222,"nodeType":"Block","src":"1784:149:14","statements":[{"id":3221,"nodeType":"UncheckedBlock","src":"1794:133:14","statements":[{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"c","nameLocation":"1826:1:14","nodeType":"VariableDeclaration","scope":3221,"src":"1818:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"1830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:14"},{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"1849:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"1859:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"1864:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"nodeType":"ExpressionStatement","src":"1849:16:14"},{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"1879:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3214,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"1892:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"1892:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"1879:37:14"}]}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"1583:105:14","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:14","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"a","nameLocation":"1717:1:14","nodeType":"VariableDeclaration","scope":3223,"src":"1709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"b","nameLocation":"1728:1:14","nodeType":"VariableDeclaration","scope":3223,"src":"1720:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:14"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"success","nameLocation":"1759:7:14","nodeType":"VariableDeclaration","scope":3223,"src":"1754:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"result","nameLocation":"1776:6:14","nodeType":"VariableDeclaration","scope":3223,"src":"1768:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:14"},"scope":4769,"src":"1693:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"2143:149:14","statements":[{"id":3256,"nodeType":"UncheckedBlock","src":"2153:133:14","statements":[{"assignments":[3236],"declarations":[{"constant":false,"id":3236,"mutability":"mutable","name":"c","nameLocation":"2185:1:14","nodeType":"VariableDeclaration","scope":3256,"src":"2177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"2189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2193:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:14"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"2218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"2223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"nodeType":"ExpressionStatement","src":"2208:16:14"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2238:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"2247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3251,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"2267:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3249,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"2251:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"2251:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"2238:37:14"}]}]},"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"1939:108:14","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:14","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"a","nameLocation":"2076:1:14","nodeType":"VariableDeclaration","scope":3258,"src":"2068:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"b","nameLocation":"2087:1:14","nodeType":"VariableDeclaration","scope":3258,"src":"2079:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:14"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"success","nameLocation":"2118:7:14","nodeType":"VariableDeclaration","scope":3258,"src":"2113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3230,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"result","nameLocation":"2135:6:14","nodeType":"VariableDeclaration","scope":3258,"src":"2127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:14"},"scope":4769,"src":"2052:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"2505:391:14","statements":[{"id":3286,"nodeType":"UncheckedBlock","src":"2515:375:14","statements":[{"assignments":[3271],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"c","nameLocation":"2547:1:14","nodeType":"VariableDeclaration","scope":3286,"src":"2539:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2555:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:14"},{"AST":{"nodeType":"YulBlock","src":"2595:188:14","statements":[{"nodeType":"YulAssignment","src":"2727:42:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:14"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:14"},"nodeType":"YulFunctionCall","src":"2744:9:14"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:14"},"nodeType":"YulFunctionCall","src":"2741:16:14"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:14"},"nodeType":"YulFunctionCall","src":"2759:9:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:14"},"nodeType":"YulFunctionCall","src":"2738:31:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2751:1:14","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2766:1:14","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"2755:1:14","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"2748:1:14","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"2727:7:14","valueSize":1}],"flags":["memory-safe"],"id":3276,"nodeType":"InlineAssembly","src":"2570:213:14"},{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2842:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"2851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3281,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3279,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"2855:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"2842:37:14"}]}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"2298:111:14","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"a","nameLocation":"2438:1:14","nodeType":"VariableDeclaration","scope":3288,"src":"2430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"b","nameLocation":"2449:1:14","nodeType":"VariableDeclaration","scope":3288,"src":"2441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:14"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"success","nameLocation":"2480:7:14","nodeType":"VariableDeclaration","scope":3288,"src":"2475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3265,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"result","nameLocation":"2497:6:14","nodeType":"VariableDeclaration","scope":3288,"src":"2489:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:14"},"scope":4769,"src":"2414:482:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"3111:231:14","statements":[{"id":3307,"nodeType":"UncheckedBlock","src":"3121:215:14","statements":[{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3145:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"3155:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"nodeType":"ExpressionStatement","src":"3145:15:14"},{"AST":{"nodeType":"YulBlock","src":"3199:127:14","statements":[{"nodeType":"YulAssignment","src":"3293:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:14"},"nodeType":"YulFunctionCall","src":"3303:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3291,"isOffset":false,"isSlot":false,"src":"3307:1:14","valueSize":1},{"declaration":3293,"isOffset":false,"isSlot":false,"src":"3310:1:14","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"3293:6:14","valueSize":1}],"flags":["memory-safe"],"id":3306,"nodeType":"InlineAssembly","src":"3174:152:14"}]}]},"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"2902:113:14","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:14","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"a","nameLocation":"3044:1:14","nodeType":"VariableDeclaration","scope":3309,"src":"3036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"b","nameLocation":"3055:1:14","nodeType":"VariableDeclaration","scope":3309,"src":"3047:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:14"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"success","nameLocation":"3086:7:14","nodeType":"VariableDeclaration","scope":3309,"src":"3081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3295,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"result","nameLocation":"3103:6:14","nodeType":"VariableDeclaration","scope":3309,"src":"3095:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:14"},"scope":4769,"src":"3020:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3329,"nodeType":"Block","src":"3567:231:14","statements":[{"id":3328,"nodeType":"UncheckedBlock","src":"3577:215:14","statements":[{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3321,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"3611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3326,"nodeType":"ExpressionStatement","src":"3601:15:14"},{"AST":{"nodeType":"YulBlock","src":"3655:127:14","statements":[{"nodeType":"YulAssignment","src":"3749:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:14"},"nodeType":"YulFunctionCall","src":"3759:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3312,"isOffset":false,"isSlot":false,"src":"3763:1:14","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"3766:1:14","valueSize":1},{"declaration":3319,"isOffset":false,"isSlot":false,"src":"3749:6:14","valueSize":1}],"flags":["memory-safe"],"id":3327,"nodeType":"InlineAssembly","src":"3630:152:14"}]}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"3348:123:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:14","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"a","nameLocation":"3500:1:14","nodeType":"VariableDeclaration","scope":3330,"src":"3492:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"b","nameLocation":"3511:1:14","nodeType":"VariableDeclaration","scope":3330,"src":"3503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:14"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"success","nameLocation":"3542:7:14","nodeType":"VariableDeclaration","scope":3330,"src":"3537:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3316,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"result","nameLocation":"3559:6:14","nodeType":"VariableDeclaration","scope":3330,"src":"3551:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:14"},"scope":4769,"src":"3476:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3359,"nodeType":"Block","src":"3989:122:14","statements":[{"assignments":[3341,3343],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"success","nameLocation":"4005:7:14","nodeType":"VariableDeclaration","scope":3359,"src":"4000:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3340,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"result","nameLocation":"4022:6:14","nodeType":"VariableDeclaration","scope":3359,"src":"4014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3348,"initialValue":{"arguments":[{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4039:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"4042:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4032:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:14"},{"expression":{"arguments":[{"id":3350,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:14","memberName":"max","nodeType":"MemberAccess","src":"4086:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3339,"id":3358,"nodeType":"Return","src":"4054:50:14"}]},"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"3804:103:14","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3360,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:14","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"a","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":3360,"src":"3935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"b","nameLocation":"3954:1:14","nodeType":"VariableDeclaration","scope":3360,"src":"3946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:14"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3360,"src":"3980:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:14"},"scope":4769,"src":"3912:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3379,"nodeType":"Block","src":"4294:73:14","statements":[{"assignments":[null,3371],"declarations":[null,{"constant":false,"id":3371,"mutability":"mutable","name":"result","nameLocation":"4315:6:14","nodeType":"VariableDeclaration","scope":3379,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3376,"initialValue":{"arguments":[{"id":3373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"4332:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3372,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:14"},{"expression":{"id":3377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"4354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3369,"id":3378,"nodeType":"Return","src":"4347:13:14"}]},"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"4117:95:14","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3380,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:14","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"a","nameLocation":"4248:1:14","nodeType":"VariableDeclaration","scope":3380,"src":"4240:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"b","nameLocation":"4259:1:14","nodeType":"VariableDeclaration","scope":3380,"src":"4251:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:14"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3380,"src":"4285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:14"},"scope":4769,"src":"4217:150:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"4564:122:14","statements":[{"assignments":[3391,3393],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"success","nameLocation":"4580:7:14","nodeType":"VariableDeclaration","scope":3409,"src":"4575:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3390,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"result","nameLocation":"4597:6:14","nodeType":"VariableDeclaration","scope":3409,"src":"4589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3398,"initialValue":{"arguments":[{"id":3395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"4617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3394,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"4607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:14"},{"expression":{"arguments":[{"id":3400,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"4653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:14","memberName":"max","nodeType":"MemberAccess","src":"4661:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3399,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"4636:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3389,"id":3408,"nodeType":"Return","src":"4629:50:14"}]},"documentation":{"id":3381,"nodeType":"StructuredDocumentation","src":"4373:109:14","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:14","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"a","nameLocation":"4518:1:14","nodeType":"VariableDeclaration","scope":3410,"src":"4510:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"b","nameLocation":"4529:1:14","nodeType":"VariableDeclaration","scope":3410,"src":"4521:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:14"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"4555:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:14"},"scope":4769,"src":"4487:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"5158:207:14","statements":[{"id":3435,"nodeType":"UncheckedBlock","src":"5168:191:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"5312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3429,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5337:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3427,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"5321:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"5321:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3421,"id":3434,"nodeType":"Return","src":"5299:49:14"}]}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"4692:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:14","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"condition","nameLocation":"5093:9:14","nodeType":"VariableDeclaration","scope":3437,"src":"5088:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3412,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"a","nameLocation":"5112:1:14","nodeType":"VariableDeclaration","scope":3437,"src":"5104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"b","nameLocation":"5123:1:14","nodeType":"VariableDeclaration","scope":3437,"src":"5115:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:14"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"5149:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:14"},"scope":4769,"src":"5071:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3455,"nodeType":"Block","src":"5502:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"5527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5531:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"5537:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3447,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3446,"id":3454,"nodeType":"Return","src":"5512:27:14"}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"5371:59:14","text":" @dev Returns the largest of two numbers."},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:14","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"a","nameLocation":"5456:1:14","nodeType":"VariableDeclaration","scope":3456,"src":"5448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"b","nameLocation":"5467:1:14","nodeType":"VariableDeclaration","scope":3456,"src":"5459:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:14"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3456,"src":"5493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:14"},"scope":4769,"src":"5435:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"5684:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5709:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"5713:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"5719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3465,"id":3473,"nodeType":"Return","src":"5694:27:14"}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"5552:60:14","text":" @dev Returns the smallest of two numbers."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:14","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"a","nameLocation":"5638:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"5630:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"b","nameLocation":"5649:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"5641:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:14"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"5675:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:14"},"scope":4769,"src":"5617:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"5912:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5967:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3484,"id":3496,"nodeType":"Return","src":"5959:28:14"}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"5734:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:14","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"a","nameLocation":"5866:1:14","nodeType":"VariableDeclaration","scope":3498,"src":"5858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"b","nameLocation":"5877:1:14","nodeType":"VariableDeclaration","scope":3498,"src":"5869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:14"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"5903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:14"},"scope":4769,"src":"5841:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3538,"nodeType":"Block","src":"6286:633:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"6300:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3519,"nodeType":"IfStatement","src":"6296:150:14","trueBody":{"id":3518,"nodeType":"Block","src":"6308:138:14","statements":[{"expression":{"arguments":[{"expression":{"id":3514,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"6412:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"6412:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3511,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"6400:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"6400:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3517,"nodeType":"ExpressionStatement","src":"6400:35:14"}]}},{"id":3537,"nodeType":"UncheckedBlock","src":"6829:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"6876:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3520,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"6860:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"6860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"6887:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3507,"id":3536,"nodeType":"Return","src":"6853:49:14"}]}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"6000:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:14","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"a","nameLocation":"6240:1:14","nodeType":"VariableDeclaration","scope":3539,"src":"6232:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"b","nameLocation":"6251:1:14","nodeType":"VariableDeclaration","scope":3539,"src":"6243:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:14"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"6277:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:14"},"scope":4769,"src":"6215:704:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"7340:3585:14","statements":[{"id":3673,"nodeType":"UncheckedBlock","src":"7350:3569:14","statements":[{"assignments":[3552,3554],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"high","nameLocation":"7383:4:14","nodeType":"VariableDeclaration","scope":3673,"src":"7375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"low","nameLocation":"7397:3:14","nodeType":"VariableDeclaration","scope":3673,"src":"7389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3559,"initialValue":{"arguments":[{"id":3556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"7411:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3557,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"7414:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3555,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"7404:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"7498:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3568,"nodeType":"IfStatement","src":"7494:365:14","trueBody":{"id":3567,"nodeType":"Block","src":"7509:350:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"7827:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3564,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"7833:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3550,"id":3566,"nodeType":"Return","src":"7820:24:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"7969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3570,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"7984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3587,"nodeType":"IfStatement","src":"7965:142:14","trueBody":{"id":3586,"nodeType":"Block","src":"7990:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3579,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"8046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3581,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8070:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"8070:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3575,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"8020:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3572,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"8008:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"8008:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3585,"nodeType":"ExpressionStatement","src":"8008:84:14"}]}},{"assignments":[3589],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:14","nodeType":"VariableDeclaration","scope":3673,"src":"8359:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3590,"nodeType":"VariableDeclarationStatement","src":"8359:17:14"},{"AST":{"nodeType":"YulBlock","src":"8415:283:14","statements":[{"nodeType":"YulAssignment","src":"8484:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:14"},"nodeType":"YulFunctionCall","src":"8497:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:14"}]},{"nodeType":"YulAssignment","src":"8604:37:14","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:14"},"nodeType":"YulFunctionCall","src":"8622:18:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:14"},"nodeType":"YulFunctionCall","src":"8612:29:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:14"}]},{"nodeType":"YulAssignment","src":"8658:26:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:14"},"nodeType":"YulFunctionCall","src":"8665:19:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3546,"isOffset":false,"isSlot":false,"src":"8510:11:14","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"8604:4:14","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"8616:4:14","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"8636:3:14","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"8658:3:14","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"8669:3:14","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"8484:9:14","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"8625:9:14","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"8674:9:14","valueSize":1},{"declaration":3542,"isOffset":false,"isSlot":false,"src":"8504:1:14","valueSize":1},{"declaration":3544,"isOffset":false,"isSlot":false,"src":"8507:1:14","valueSize":1}],"flags":["memory-safe"],"id":3591,"nodeType":"InlineAssembly","src":"8390:308:14"},{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"twos","nameLocation":"8910:4:14","nodeType":"VariableDeclaration","scope":3673,"src":"8902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3600,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3596,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"8936:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:14"},{"AST":{"nodeType":"YulBlock","src":"8987:359:14","statements":[{"nodeType":"YulAssignment","src":"9052:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:14"},"nodeType":"YulFunctionCall","src":"9067:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:14"}]},{"nodeType":"YulAssignment","src":"9153:21:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:14"},"nodeType":"YulFunctionCall","src":"9160:14:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:14"}]},{"nodeType":"YulAssignment","src":"9293:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:14"},"nodeType":"YulFunctionCall","src":"9309:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:14"},"nodeType":"YulFunctionCall","src":"9305:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:14"},"nodeType":"YulFunctionCall","src":"9301:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3546,"isOffset":false,"isSlot":false,"src":"9052:11:14","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"9071:11:14","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"9153:3:14","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"9164:3:14","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"9084:4:14","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"9169:4:14","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"9293:4:14","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"9316:4:14","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"9323:4:14","valueSize":1}],"flags":["memory-safe"],"id":3601,"nodeType":"InlineAssembly","src":"8962:384:14"},{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3602,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"9409:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9416:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3604,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3607,"nodeType":"ExpressionStatement","src":"9409:18:14"},{"assignments":[3609],"declarations":[{"constant":false,"id":3609,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:14","nodeType":"VariableDeclaration","scope":3673,"src":"9762:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3616,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3611,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"9785:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:14"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3617,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10033:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3620,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ExpressionStatement","src":"10018:36:14"},{"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3625,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10103:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3628,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"nodeType":"ExpressionStatement","src":"10088:36:14"},{"expression":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3633,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10175:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ExpressionStatement","src":"10160:36:14"},{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3641,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10246:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"10231:36:14"},{"expression":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3649,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10319:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ExpressionStatement","src":"10304:36:14"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3657,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3659,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"10393:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"10378:36:14"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"10859:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"10868:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3667,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"10859:22:14"},{"expression":{"id":3671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"10902:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3550,"id":3672,"nodeType":"Return","src":"10895:13:14"}]}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"6925:312:14","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:14","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"x","nameLocation":"7266:1:14","nodeType":"VariableDeclaration","scope":3675,"src":"7258:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"y","nameLocation":"7277:1:14","nodeType":"VariableDeclaration","scope":3675,"src":"7269:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:14","nodeType":"VariableDeclaration","scope":3675,"src":"7280:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:14"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"result","nameLocation":"7332:6:14","nodeType":"VariableDeclaration","scope":3675,"src":"7324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:14"},"scope":4769,"src":"7242:3683:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"11164:128:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3691,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"11188:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3692,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"11191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3693,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"11194:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3675,3712],"referencedDeclaration":3675,"src":"11181:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3698,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11242:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":3697,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"11225:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3701,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"11262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3702,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3703,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"11268:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3700,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3695,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"11209:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"11209:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3689,"id":3710,"nodeType":"Return","src":"11174:111:14"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"10931:118:14","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:14","nodeType":"FunctionDefinition","parameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"x","nameLocation":"11078:1:14","nodeType":"VariableDeclaration","scope":3712,"src":"11070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"y","nameLocation":"11089:1:14","nodeType":"VariableDeclaration","scope":3712,"src":"11081:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:14","nodeType":"VariableDeclaration","scope":3712,"src":"11092:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:14","nodeType":"VariableDeclaration","scope":3712,"src":"11113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":3684,"nodeType":"UserDefinedTypeName","pathNode":{"id":3683,"name":"Rounding","nameLocations":["11113:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"11113:8:14"},"referencedDeclaration":3160,"src":"11113:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:14"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"11155:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:14"},"scope":4769,"src":"11054:238:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"11500:245:14","statements":[{"id":3760,"nodeType":"UncheckedBlock","src":"11510:229:14","statements":[{"assignments":[3725,3727],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"high","nameLocation":"11543:4:14","nodeType":"VariableDeclaration","scope":3760,"src":"11535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"low","nameLocation":"11557:3:14","nodeType":"VariableDeclaration","scope":3760,"src":"11549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3732,"initialValue":{"arguments":[{"id":3729,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"11571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3730,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"11564:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"11594:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3735,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11607:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"11590:86:14","trueBody":{"id":3745,"nodeType":"Block","src":"11610:66:14","statements":[{"expression":{"arguments":[{"expression":{"id":3741,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"11640:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"11640:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3738,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"11628:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"11628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3744,"nodeType":"ExpressionStatement","src":"11628:33:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"11697:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3749,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11712:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"11719:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3755,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11726:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3723,"id":3759,"nodeType":"Return","src":"11689:39:14"}]}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"11298:111:14","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"x","nameLocation":"11438:1:14","nodeType":"VariableDeclaration","scope":3762,"src":"11430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"y","nameLocation":"11449:1:14","nodeType":"VariableDeclaration","scope":3762,"src":"11441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"n","nameLocation":"11458:1:14","nodeType":"VariableDeclaration","scope":3762,"src":"11452:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3718,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:14"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"result","nameLocation":"11492:6:14","nodeType":"VariableDeclaration","scope":3762,"src":"11484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:14"},"scope":4769,"src":"11414:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"11963:113:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"11987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3779,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"11990:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3780,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"11993:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3777,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3762,3801],"referencedDeclaration":3762,"src":"11980:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"12031:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":3784,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"12014:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"12051:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3789,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"12054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3791,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"12062:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3782,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"11998:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"11998:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3776,"id":3799,"nodeType":"Return","src":"11973:96:14"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"11751:109:14","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3801,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:14","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"x","nameLocation":"11889:1:14","nodeType":"VariableDeclaration","scope":3801,"src":"11881:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"y","nameLocation":"11900:1:14","nodeType":"VariableDeclaration","scope":3801,"src":"11892:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"n","nameLocation":"11909:1:14","nodeType":"VariableDeclaration","scope":3801,"src":"11903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3768,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:14","nodeType":"VariableDeclaration","scope":3801,"src":"11912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":3771,"nodeType":"UserDefinedTypeName","pathNode":{"id":3770,"name":"Rounding","nameLocations":["11912:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"11912:8:14"},"referencedDeclaration":3160,"src":"11912:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:14"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3801,"src":"11954:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:14"},"scope":4769,"src":"11865:211:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"12710:1849:14","statements":[{"id":3896,"nodeType":"UncheckedBlock","src":"12720:1833:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"12748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"nodeType":"IfStatement","src":"12744:20:14","trueBody":{"expression":{"hexValue":"30","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3810,"id":3815,"nodeType":"Return","src":"12756:8:14"}},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:14","nodeType":"VariableDeclaration","scope":3896,"src":"13235:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"13255:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3820,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"13259:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:14"},{"assignments":[3824],"declarations":[{"constant":false,"id":3824,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:14","nodeType":"VariableDeclaration","scope":3896,"src":"13274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3826,"initialValue":{"id":3825,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"13288:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:14"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"x","nameLocation":"13432:1:14","nodeType":"VariableDeclaration","scope":3896,"src":"13425:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3827,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3830,"initialValue":{"hexValue":"30","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:14"},{"assignments":[3832],"declarations":[{"constant":false,"id":3832,"mutability":"mutable","name":"y","nameLocation":"13458:1:14","nodeType":"VariableDeclaration","scope":3896,"src":"13451:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3831,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3834,"initialValue":{"hexValue":"31","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:14"},{"body":{"id":3871,"nodeType":"Block","src":"13501:882:14","statements":[{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:14","nodeType":"VariableDeclaration","scope":3871,"src":"13519:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"13538:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3841,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"13544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:14"},{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3844,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"13573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3845,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"13578:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3847,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"13678:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"13923:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"13929:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3850,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"13941:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3855,"nodeType":"ExpressionStatement","src":"13572:395:14"},{"expression":{"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3856,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"13987:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3857,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"13990:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3859,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"14072:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"14326:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"14330:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3864,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"14341:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3862,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:14","typeDescriptions":{}}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3870,"nodeType":"ExpressionStatement","src":"13986:382:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"13485:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3872,"nodeType":"WhileStatement","src":"13478:905:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"14401:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3878,"nodeType":"IfStatement","src":"14397:22:14","trueBody":{"expression":{"hexValue":"30","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3810,"id":3877,"nodeType":"Return","src":"14411:8:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"14470:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"14477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:14","subExpression":{"id":3886,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"14490:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:14","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3892,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"14502:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:14","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3879,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"14462:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3810,"id":3895,"nodeType":"Return","src":"14455:50:14"}]}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"12082:553:14","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:14","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"a","nameLocation":"12664:1:14","nodeType":"VariableDeclaration","scope":3898,"src":"12656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"n","nameLocation":"12675:1:14","nodeType":"VariableDeclaration","scope":3898,"src":"12667:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:14"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"12701:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:14"},"scope":4769,"src":"12640:1919:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"15159:82:14","statements":[{"id":3917,"nodeType":"UncheckedBlock","src":"15169:66:14","statements":[{"expression":{"arguments":[{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"15212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"15215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3914,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"15222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3908,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"15200:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4769_$","typeString":"type(library Math)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:14","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"15200:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3907,"id":3916,"nodeType":"Return","src":"15193:31:14"}]}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"14565:514:14","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:14","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"a","nameLocation":"15113:1:14","nodeType":"VariableDeclaration","scope":3919,"src":"15105:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"p","nameLocation":"15124:1:14","nodeType":"VariableDeclaration","scope":3919,"src":"15116:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:14"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"15150:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:14"},"scope":4769,"src":"15084:157:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"16011:174:14","statements":[{"assignments":[3932,3934],"declarations":[{"constant":false,"id":3932,"mutability":"mutable","name":"success","nameLocation":"16027:7:14","nodeType":"VariableDeclaration","scope":3954,"src":"16022:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"result","nameLocation":"16044:6:14","nodeType":"VariableDeclaration","scope":3954,"src":"16036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"initialValue":{"arguments":[{"id":3936,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"16064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3937,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"16067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3938,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"16070:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3979,4061],"referencedDeclaration":3979,"src":"16054:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:14"},{"condition":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:14","subExpression":{"id":3941,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"16087:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3951,"nodeType":"IfStatement","src":"16082:74:14","trueBody":{"id":3950,"nodeType":"Block","src":"16096:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":3946,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"16122:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3943,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"16110:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"16110:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3949,"nodeType":"ExpressionStatement","src":"16110:35:14"}]}},{"expression":{"id":3952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"16172:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3930,"id":3953,"nodeType":"Return","src":"16165:13:14"}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"15247:678:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:14","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"b","nameLocation":"15954:1:14","nodeType":"VariableDeclaration","scope":3955,"src":"15946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"e","nameLocation":"15965:1:14","nodeType":"VariableDeclaration","scope":3955,"src":"15957:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"m","nameLocation":"15976:1:14","nodeType":"VariableDeclaration","scope":3955,"src":"15968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:14"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"16002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:14"},"scope":4769,"src":"15930:255:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"17039:1493:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"17053:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"IfStatement","src":"17049:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3968,"id":3975,"nodeType":"Return","src":"17061:17:14"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:14"},"nodeType":"YulFunctionCall","src":"17138:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:14"},"nodeType":"YulFunctionCall","src":"18050:17:14"},"nodeType":"YulExpressionStatement","src":"18050:17:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:14"},"nodeType":"YulFunctionCall","src":"18087:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:14"},"nodeType":"YulFunctionCall","src":"18080:28:14"},"nodeType":"YulExpressionStatement","src":"18080:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:14"},"nodeType":"YulFunctionCall","src":"18128:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:14"},"nodeType":"YulFunctionCall","src":"18121:28:14"},"nodeType":"YulExpressionStatement","src":"18121:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:14"},"nodeType":"YulFunctionCall","src":"18169:14:14"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:14"},"nodeType":"YulFunctionCall","src":"18162:25:14"},"nodeType":"YulExpressionStatement","src":"18162:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:14"},"nodeType":"YulFunctionCall","src":"18207:14:14"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:14"},"nodeType":"YulFunctionCall","src":"18200:25:14"},"nodeType":"YulExpressionStatement","src":"18200:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:14"},"nodeType":"YulFunctionCall","src":"18245:14:14"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:14"},"nodeType":"YulFunctionCall","src":"18238:25:14"},"nodeType":"YulExpressionStatement","src":"18238:25:14"},{"nodeType":"YulAssignment","src":"18425:57:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:14"},"nodeType":"YulFunctionCall","src":"18447:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:14","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:14","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:14","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:14"},"nodeType":"YulFunctionCall","src":"18436:46:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:14"}]},{"nodeType":"YulAssignment","src":"18495:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:14","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:14"},"nodeType":"YulFunctionCall","src":"18505:11:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3958,"isOffset":false,"isSlot":false,"src":"18185:1:14","valueSize":1},{"declaration":3960,"isOffset":false,"isSlot":false,"src":"18223:1:14","valueSize":1},{"declaration":3962,"isOffset":false,"isSlot":false,"src":"18261:1:14","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"18495:6:14","valueSize":1},{"declaration":3965,"isOffset":false,"isSlot":false,"src":"18425:7:14","valueSize":1}],"flags":["memory-safe"],"id":3977,"nodeType":"InlineAssembly","src":"17088:1438:14"}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"16191:738:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:14","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"b","nameLocation":"16961:1:14","nodeType":"VariableDeclaration","scope":3979,"src":"16953:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"e","nameLocation":"16972:1:14","nodeType":"VariableDeclaration","scope":3979,"src":"16964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"m","nameLocation":"16983:1:14","nodeType":"VariableDeclaration","scope":3979,"src":"16975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:14"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"success","nameLocation":"17014:7:14","nodeType":"VariableDeclaration","scope":3979,"src":"17009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3964,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"result","nameLocation":"17031:6:14","nodeType":"VariableDeclaration","scope":3979,"src":"17023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:14"},"scope":4769,"src":"16934:1598:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4014,"nodeType":"Block","src":"18729:179:14","statements":[{"assignments":[3992,3994],"declarations":[{"constant":false,"id":3992,"mutability":"mutable","name":"success","nameLocation":"18745:7:14","nodeType":"VariableDeclaration","scope":4014,"src":"18740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3991,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"result","nameLocation":"18767:6:14","nodeType":"VariableDeclaration","scope":4014,"src":"18754:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3993,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4000,"initialValue":{"arguments":[{"id":3996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"18787:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3997,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"18790:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3998,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"18793:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3995,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3979,4061],"referencedDeclaration":4061,"src":"18777:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:14"},{"condition":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:14","subExpression":{"id":4001,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"18810:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4011,"nodeType":"IfStatement","src":"18805:74:14","trueBody":{"id":4010,"nodeType":"Block","src":"18819:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4006,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"18845:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"18845:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4003,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"18833:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1641_$","typeString":"type(library Panic)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"18833:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4009,"nodeType":"ExpressionStatement","src":"18833:35:14"}]}},{"expression":{"id":4012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"18895:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3990,"id":4013,"nodeType":"Return","src":"18888:13:14"}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"18538:85:14","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4015,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:14","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"b","nameLocation":"18657:1:14","nodeType":"VariableDeclaration","scope":4015,"src":"18644:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3981,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"e","nameLocation":"18673:1:14","nodeType":"VariableDeclaration","scope":4015,"src":"18660:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3983,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"m","nameLocation":"18689:1:14","nodeType":"VariableDeclaration","scope":4015,"src":"18676:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3985,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:14"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4015,"src":"18715:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3988,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:14"},"scope":4769,"src":"18628:280:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4060,"nodeType":"Block","src":"19162:771:14","statements":[{"condition":{"arguments":[{"id":4030,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"19187:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4029,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"19176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4039,"nodeType":"IfStatement","src":"19172:47:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4033,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4028,"id":4038,"nodeType":"Return","src":"19191:28:14"}},{"assignments":[4041],"declarations":[{"constant":false,"id":4041,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:14","nodeType":"VariableDeclaration","scope":4060,"src":"19230:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4044,"initialValue":{"expression":{"id":4042,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"19245:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:14","memberName":"length","nodeType":"MemberAccess","src":"19245:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:14"},{"expression":{"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"19335:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"19361:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:14","memberName":"length","nodeType":"MemberAccess","src":"19361:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4050,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19371:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:14","memberName":"length","nodeType":"MemberAccess","src":"19371:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4052,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"19381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"19387:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4054,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19390:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4055,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"19393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4046,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4058,"nodeType":"ExpressionStatement","src":"19335:60:14"},{"AST":{"nodeType":"YulBlock","src":"19431:496:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:14","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:14"},"nodeType":"YulFunctionCall","src":"19460:17:14"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:14","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:14"},"nodeType":"YulFunctionCall","src":"19589:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:14","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:14"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:14"},"nodeType":"YulFunctionCall","src":"19611:13:14"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:14"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:14"},"nodeType":"YulFunctionCall","src":"19578:62:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:14"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:14"},"nodeType":"YulFunctionCall","src":"19789:20:14"},"nodeType":"YulExpressionStatement","src":"19789:20:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:14","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:14"},"nodeType":"YulFunctionCall","src":"19898:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:14"},"nodeType":"YulFunctionCall","src":"19885:32:14"},"nodeType":"YulExpressionStatement","src":"19885:32:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":4041,"isOffset":false,"isSlot":false,"src":"19635:4:14","valueSize":1},{"declaration":4041,"isOffset":false,"isSlot":false,"src":"19804:4:14","valueSize":1},{"declaration":4041,"isOffset":false,"isSlot":false,"src":"19911:4:14","valueSize":1},{"declaration":4027,"isOffset":false,"isSlot":false,"src":"19464:6:14","valueSize":1},{"declaration":4027,"isOffset":false,"isSlot":false,"src":"19617:6:14","valueSize":1},{"declaration":4027,"isOffset":false,"isSlot":false,"src":"19796:6:14","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"19567:7:14","valueSize":1}],"flags":["memory-safe"],"id":4059,"nodeType":"InlineAssembly","src":"19406:521:14"}]},"documentation":{"id":4016,"nodeType":"StructuredDocumentation","src":"18914:88:14","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4061,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:14","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"b","nameLocation":"19048:1:14","nodeType":"VariableDeclaration","scope":4061,"src":"19035:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4017,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4020,"mutability":"mutable","name":"e","nameLocation":"19072:1:14","nodeType":"VariableDeclaration","scope":4061,"src":"19059:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4019,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"m","nameLocation":"19096:1:14","nodeType":"VariableDeclaration","scope":4061,"src":"19083:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4021,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:14"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"success","nameLocation":"19132:7:14","nodeType":"VariableDeclaration","scope":4061,"src":"19127:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4024,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"result","nameLocation":"19154:6:14","nodeType":"VariableDeclaration","scope":4061,"src":"19141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4026,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:14"},"scope":4769,"src":"19007:926:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4093,"nodeType":"Block","src":"20088:176:14","statements":[{"body":{"id":4089,"nodeType":"Block","src":"20145:92:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4080,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"20163:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4082,"indexExpression":{"id":4081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"20173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4088,"nodeType":"IfStatement","src":"20159:68:14","trueBody":{"id":4087,"nodeType":"Block","src":"20182:45:14","statements":[{"expression":{"hexValue":"66616c7365","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4068,"id":4086,"nodeType":"Return","src":"20200:12:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"20118:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4074,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"20122:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:14","memberName":"length","nodeType":"MemberAccess","src":"20122:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4090,"initializationExpression":{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"i","nameLocation":"20111:1:14","nodeType":"VariableDeclaration","scope":4090,"src":"20103:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:14"},"loopExpression":{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:14","subExpression":{"id":4077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"20142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4079,"nodeType":"ExpressionStatement","src":"20140:3:14"},"nodeType":"ForStatement","src":"20098:139:14"},{"expression":{"hexValue":"74727565","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4068,"id":4092,"nodeType":"Return","src":"20246:11:14"}]},"documentation":{"id":4062,"nodeType":"StructuredDocumentation","src":"19939:72:14","text":" @dev Returns whether the provided byte array is zero."},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:14","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:14","nodeType":"VariableDeclaration","scope":4094,"src":"20036:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:14"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4094,"src":"20082:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4066,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:14"},"scope":4769,"src":"20016:248:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4312,"nodeType":"Block","src":"20624:5124:14","statements":[{"id":4311,"nodeType":"UncheckedBlock","src":"20634:5108:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"20728:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4108,"nodeType":"IfStatement","src":"20724:53:14","trueBody":{"id":4107,"nodeType":"Block","src":"20736:41:14","statements":[{"expression":{"id":4105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"20761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4101,"id":4106,"nodeType":"Return","src":"20754:8:14"}]}},{"assignments":[4110],"declarations":[{"constant":false,"id":4110,"mutability":"mutable","name":"aa","nameLocation":"21712:2:14","nodeType":"VariableDeclaration","scope":4311,"src":"21704:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4112,"initialValue":{"id":4111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"21717:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:14"},{"assignments":[4114],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"xn","nameLocation":"21740:2:14","nodeType":"VariableDeclaration","scope":4311,"src":"21732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4116,"initialValue":{"hexValue":"31","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"21765:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"21761:92:14","trueBody":{"id":4131,"nodeType":"Block","src":"21783:70:14","statements":[{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"21801:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"21801:10:14"},{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"21829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"21829:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"21870:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"IfStatement","src":"21866:90:14","trueBody":{"id":4147,"nodeType":"Block","src":"21887:69:14","statements":[{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"21905:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4142,"nodeType":"ExpressionStatement","src":"21905:9:14"},{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"21932:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"21932:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"21973:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"21969:90:14","trueBody":{"id":4163,"nodeType":"Block","src":"21990:69:14","statements":[{"expression":{"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4155,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22008:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4158,"nodeType":"ExpressionStatement","src":"22008:9:14"},{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4159,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22035:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"22035:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4165,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22076:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"22072:89:14","trueBody":{"id":4179,"nodeType":"Block","src":"22093:68:14","statements":[{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22111:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"22111:9:14"},{"expression":{"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22138:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4178,"nodeType":"ExpressionStatement","src":"22138:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22178:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4196,"nodeType":"IfStatement","src":"22174:87:14","trueBody":{"id":4195,"nodeType":"Block","src":"22194:67:14","statements":[{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4187,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22212:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"22212:8:14"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22238:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"22238:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22278:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4212,"nodeType":"IfStatement","src":"22274:87:14","trueBody":{"id":4211,"nodeType":"Block","src":"22294:67:14","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4203,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22312:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"22312:8:14"},{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22338:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ExpressionStatement","src":"22338:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4213,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"22378:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"nodeType":"IfStatement","src":"22374:61:14","trueBody":{"id":4223,"nodeType":"Block","src":"22394:41:14","statements":[{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22412:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ExpressionStatement","src":"22412:8:14"}]}},{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22855:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4227,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22865:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"22855:18:14"},{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24760:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24766:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"24771:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4237,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24775:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4244,"nodeType":"ExpressionStatement","src":"24760:23:14"},{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24869:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24875:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"24880:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4248,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24884:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4255,"nodeType":"ExpressionStatement","src":"24869:23:14"},{"expression":{"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24980:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24986:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"24991:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4259,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24995:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"nodeType":"ExpressionStatement","src":"24980:23:14"},{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25089:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25095:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"25100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25104:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4277,"nodeType":"ExpressionStatement","src":"25089:23:14"},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25199:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25205:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"25210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4281,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25214:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"25199:23:14"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25309:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25315:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"25320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4292,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25324:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"25309:23:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25698:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25719:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"25724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4305,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25728:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4301,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"25703:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"25703:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4101,"id":4310,"nodeType":"Return","src":"25691:40:14"}]}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"20270:292:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4313,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:14","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"a","nameLocation":"20589:1:14","nodeType":"VariableDeclaration","scope":4313,"src":"20581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:14"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4313,"src":"20615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:14"},"scope":4769,"src":"20567:5181:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4346,"nodeType":"Block","src":"25921:171:14","statements":[{"id":4345,"nodeType":"UncheckedBlock","src":"25931:155:14","statements":[{"assignments":[4325],"declarations":[{"constant":false,"id":4325,"mutability":"mutable","name":"result","nameLocation":"25963:6:14","nodeType":"VariableDeclaration","scope":4345,"src":"25955:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4329,"initialValue":{"arguments":[{"id":4327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"25977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4326,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4313,4347],"referencedDeclaration":4313,"src":"25972:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"26000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4334,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"26042:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":4333,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"26025:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"26055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"26064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"26073:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4331,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26009:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26009:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4323,"id":4344,"nodeType":"Return","src":"25993:82:14"}]}]},"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"25754:86:14","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4347,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:14","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"a","nameLocation":"25867:1:14","nodeType":"VariableDeclaration","scope":4347,"src":"25859:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:14","nodeType":"VariableDeclaration","scope":4347,"src":"25870:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"Rounding","nameLocations":["25870:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"25870:8:14"},"referencedDeclaration":3160,"src":"25870:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:14"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4347,"src":"25912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:14"},"scope":4769,"src":"25845:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"26281:2334:14","statements":[{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26363:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"26383:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4356,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26367:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26367:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4365,"nodeType":"ExpressionStatement","src":"26363:64:14"},{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4369,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"26525:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4370,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26530:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4367,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26508:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26508:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"26503:56:14"},{"expression":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"26656:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4384,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26661:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26639:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26639:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4393,"nodeType":"ExpressionStatement","src":"26634:48:14"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4394,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"26779:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4398,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26784:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26762:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26762:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"26757:44:14"},{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26874:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"26896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4412,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4409,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26879:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26879:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"nodeType":"ExpressionStatement","src":"26874:42:14"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4422,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"26988:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"27010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4426,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"27015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4423,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26993:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"26993:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"26988:41:14"},{"AST":{"nodeType":"YulBlock","src":"28490:119:14","statements":[{"nodeType":"YulAssignment","src":"28504:95:14","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:14"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:14"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:14"},"nodeType":"YulFunctionCall","src":"28520:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:14","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:14"},"nodeType":"YulFunctionCall","src":"28515:83:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:14"},"nodeType":"YulFunctionCall","src":"28509:90:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4353,"isOffset":false,"isSlot":false,"src":"28504:1:14","valueSize":1},{"declaration":4353,"isOffset":false,"isSlot":false,"src":"28512:1:14","valueSize":1},{"declaration":4353,"isOffset":false,"isSlot":false,"src":"28524:1:14","valueSize":1},{"declaration":4350,"isOffset":false,"isSlot":false,"src":"28527:1:14","valueSize":1}],"flags":["memory-safe"],"id":4436,"nodeType":"InlineAssembly","src":"28465:144:14"}]},"documentation":{"id":4348,"nodeType":"StructuredDocumentation","src":"26098:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:14","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"x","nameLocation":"26244:1:14","nodeType":"VariableDeclaration","scope":4438,"src":"26236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:14"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"r","nameLocation":"26278:1:14","nodeType":"VariableDeclaration","scope":4438,"src":"26270:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:14"},"scope":4769,"src":"26222:2393:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4471,"nodeType":"Block","src":"28848:175:14","statements":[{"id":4470,"nodeType":"UncheckedBlock","src":"28858:159:14","statements":[{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"result","nameLocation":"28890:6:14","nodeType":"VariableDeclaration","scope":4470,"src":"28882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4454,"initialValue":{"arguments":[{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"28904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4451,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4438,4472],"referencedDeclaration":4438,"src":"28899:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"28931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4459,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"28973:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":4458,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"28956:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"28991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"29000:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"28940:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"28940:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4448,"id":4469,"nodeType":"Return","src":"28924:82:14"}]}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"28621:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:14","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"28790:5:14","nodeType":"VariableDeclaration","scope":4472,"src":"28782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:14","nodeType":"VariableDeclaration","scope":4472,"src":"28797:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":4443,"nodeType":"UserDefinedTypeName","pathNode":{"id":4442,"name":"Rounding","nameLocations":["28797:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"28797:8:14"},"referencedDeclaration":3160,"src":"28797:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:14"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4472,"src":"28839:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:14"},"scope":4769,"src":"28768:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"29216:854:14","statements":[{"assignments":[4481],"declarations":[{"constant":false,"id":4481,"mutability":"mutable","name":"result","nameLocation":"29234:6:14","nodeType":"VariableDeclaration","scope":4600,"src":"29226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4483,"initialValue":{"hexValue":"30","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:14"},{"id":4597,"nodeType":"UncheckedBlock","src":"29254:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29282:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"IfStatement","src":"29278:103:14","trueBody":{"id":4499,"nodeType":"Block","src":"29301:80:14","statements":[{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29319:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"29319:17:14"},{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4498,"nodeType":"ExpressionStatement","src":"29354:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"29394:103:14","trueBody":{"id":4516,"nodeType":"Block","src":"29417:80:14","statements":[{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29435:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"29435:17:14"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29470:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"29470:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4534,"nodeType":"IfStatement","src":"29510:103:14","trueBody":{"id":4533,"nodeType":"Block","src":"29533:80:14","statements":[{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"29551:17:14"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"29586:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29630:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4551,"nodeType":"IfStatement","src":"29626:100:14","trueBody":{"id":4550,"nodeType":"Block","src":"29648:78:14","statements":[{"expression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4545,"nodeType":"ExpressionStatement","src":"29666:16:14"},{"expression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29700:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"nodeType":"ExpressionStatement","src":"29700:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"29739:100:14","trueBody":{"id":4567,"nodeType":"Block","src":"29761:78:14","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29779:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"29779:16:14"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29813:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"29813:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29856:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4585,"nodeType":"IfStatement","src":"29852:100:14","trueBody":{"id":4584,"nodeType":"Block","src":"29874:78:14","statements":[{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29892:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"29892:16:14"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"29926:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"29926:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"29969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4596,"nodeType":"IfStatement","src":"29965:66:14","trueBody":{"id":4595,"nodeType":"Block","src":"29987:44:14","statements":[{"expression":{"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"30005:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4594,"nodeType":"ExpressionStatement","src":"30005:11:14"}]}}]},{"expression":{"id":4598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"30057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4479,"id":4599,"nodeType":"Return","src":"30050:13:14"}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"29029:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:14","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"value","nameLocation":"29177:5:14","nodeType":"VariableDeclaration","scope":4601,"src":"29169:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:14"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4601,"src":"29207:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:14"},"scope":4769,"src":"29154:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4634,"nodeType":"Block","src":"30305:177:14","statements":[{"id":4633,"nodeType":"UncheckedBlock","src":"30315:161:14","statements":[{"assignments":[4613],"declarations":[{"constant":false,"id":4613,"mutability":"mutable","name":"result","nameLocation":"30347:6:14","nodeType":"VariableDeclaration","scope":4633,"src":"30339:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4617,"initialValue":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4601,4635],"referencedDeclaration":4601,"src":"30356:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"30389:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4622,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"30431:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":4621,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"30414:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"30450:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"30459:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4619,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"30398:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"30398:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4611,"id":4632,"nodeType":"Return","src":"30382:83:14"}]}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"30076:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4635,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:14","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"value","nameLocation":"30247:5:14","nodeType":"VariableDeclaration","scope":4635,"src":"30239:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:14","nodeType":"VariableDeclaration","scope":4635,"src":"30254:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":4606,"nodeType":"UserDefinedTypeName","pathNode":{"id":4605,"name":"Rounding","nameLocations":["30254:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"30254:8:14"},"referencedDeclaration":3160,"src":"30254:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:14"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4635,"src":"30296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:14"},"scope":4769,"src":"30224:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"30800:675:14","statements":[{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"30882:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"30902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4644,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"30886:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"30886:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"30882:64:14"},{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"31044:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4658,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31049:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4655,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"31027:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"31027:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ExpressionStatement","src":"31022:56:14"},{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"31175:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4672,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31180:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4669,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"31158:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"31158:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"31153:48:14"},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4682,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31276:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"31298:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4686,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4683,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"31281:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"31281:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"31276:44:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31426:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"31453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4703,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"31458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4700,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"31436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"31436:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4642,"id":4710,"nodeType":"Return","src":"31418:50:14"}]},"documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"30488:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:14","nodeType":"FunctionDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"x","nameLocation":"30763:1:14","nodeType":"VariableDeclaration","scope":4712,"src":"30755:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:14"},"returnParameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"r","nameLocation":"30797:1:14","nodeType":"VariableDeclaration","scope":4712,"src":"30789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:14"},"scope":4769,"src":"30739:736:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4748,"nodeType":"Block","src":"31712:184:14","statements":[{"id":4747,"nodeType":"UncheckedBlock","src":"31722:168:14","statements":[{"assignments":[4724],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"result","nameLocation":"31754:6:14","nodeType":"VariableDeclaration","scope":4747,"src":"31746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4728,"initialValue":{"arguments":[{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"31770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4725,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4712,4749],"referencedDeclaration":4712,"src":"31763:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"31797:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4733,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"31839:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":4732,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"31822:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3160_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"31873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4730,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"31806:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"31806:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4722,"id":4746,"nodeType":"Return","src":"31790:89:14"}]}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"31481:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4749,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:14","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"31654:5:14","nodeType":"VariableDeclaration","scope":4749,"src":"31646:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:14","nodeType":"VariableDeclaration","scope":4749,"src":"31661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":4717,"nodeType":"UserDefinedTypeName","pathNode":{"id":4716,"name":"Rounding","nameLocations":["31661:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"31661:8:14"},"referencedDeclaration":3160,"src":"31661:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:14"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4749,"src":"31703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:14"},"scope":4769,"src":"31630:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"32094:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4760,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"32117:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}],"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4758,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:14","typeDescriptions":{}}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4757,"id":4766,"nodeType":"Return","src":"32104:31:14"}]},"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"31902:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:14","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:14","nodeType":"VariableDeclaration","scope":4768,"src":"32046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"},"typeName":{"id":4752,"nodeType":"UserDefinedTypeName","pathNode":{"id":4751,"name":"Rounding","nameLocations":["32046:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"32046:8:14"},"referencedDeclaration":3160,"src":"32046:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3160","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:14"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"32088:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4755,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:14"},"scope":4769,"src":"32020:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4770,"src":"281:31863:14","usedErrors":[],"usedEvents":[]}],"src":"103:32042:14"},"id":14},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6534]},"id":6535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4771,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"218:550:15","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6534,"linearizedBaseContracts":[6534],"name":"SafeCast","nameLocation":"777:8:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"792:68:15","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4779,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:15","nodeType":"ErrorDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"bits","nameLocation":"908:4:15","nodeType":"VariableDeclaration","scope":4779,"src":"902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4774,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"922:5:15","nodeType":"VariableDeclaration","scope":4779,"src":"914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:15"},"src":"865:64:15"},{"documentation":{"id":4780,"nodeType":"StructuredDocumentation","src":"935:75:15","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4784,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:15","nodeType":"ErrorDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"value","nameLocation":"1056:5:15","nodeType":"VariableDeclaration","scope":4784,"src":"1049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4781,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:15"},"src":"1015:48:15"},{"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"1069:67:15","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4791,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:15","nodeType":"ErrorDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"bits","nameLocation":"1183:4:15","nodeType":"VariableDeclaration","scope":4791,"src":"1177:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4786,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4789,"mutability":"mutable","name":"value","nameLocation":"1196:5:15","nodeType":"VariableDeclaration","scope":4791,"src":"1189:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4788,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:15"},"src":"1141:62:15"},{"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"1209:75:15","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4796,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:15","nodeType":"ErrorDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"value","nameLocation":"1331:5:15","nodeType":"VariableDeclaration","scope":4796,"src":"1323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:15"},"src":"1289:49:15"},{"body":{"id":4823,"nodeType":"Block","src":"1695:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"1709:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4806,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:15","memberName":"max","nodeType":"MemberAccess","src":"1717:17:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"1705:105:15","trueBody":{"id":4816,"nodeType":"Block","src":"1736:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"1793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4811,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"1757:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"RevertStatement","src":"1750:49:15"}]}},{"expression":{"arguments":[{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4818,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:15","typeDescriptions":{}}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4803,"id":4822,"nodeType":"Return","src":"1819:21:15"}]},"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"1344:280:15","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:15","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"value","nameLocation":"1656:5:15","nodeType":"VariableDeclaration","scope":4824,"src":"1648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:15"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"1686:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4801,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:15"},"scope":6534,"src":"1629:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"2204:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"2218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4834,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4833,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:15","memberName":"max","nodeType":"MemberAccess","src":"2226:17:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4845,"nodeType":"IfStatement","src":"2214:105:15","trueBody":{"id":4844,"nodeType":"Block","src":"2245:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"2302:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2266:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"RevertStatement","src":"2259:49:15"}]}},{"expression":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4846,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4831,"id":4850,"nodeType":"Return","src":"2328:21:15"}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"1853:280:15","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:15","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"value","nameLocation":"2165:5:15","nodeType":"VariableDeclaration","scope":4852,"src":"2157:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:15"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"2195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4829,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:15"},"scope":6534,"src":"2138:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"2713:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"2727:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4862,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4861,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:15","memberName":"max","nodeType":"MemberAccess","src":"2735:17:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4873,"nodeType":"IfStatement","src":"2723:105:15","trueBody":{"id":4872,"nodeType":"Block","src":"2754:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"2811:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2775:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"RevertStatement","src":"2768:49:15"}]}},{"expression":{"arguments":[{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"2852:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4874,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:15","typeDescriptions":{}}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4859,"id":4878,"nodeType":"Return","src":"2837:21:15"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"2362:280:15","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"2674:5:15","nodeType":"VariableDeclaration","scope":4880,"src":"2666:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:15"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4880,"src":"2704:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4857,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:15"},"scope":6534,"src":"2647:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"3222:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3236:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4890,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4889,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:15","memberName":"max","nodeType":"MemberAccess","src":"3244:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4901,"nodeType":"IfStatement","src":"3232:105:15","trueBody":{"id":4900,"nodeType":"Block","src":"3263:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3320:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"3284:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4899,"nodeType":"RevertStatement","src":"3277:49:15"}]}},{"expression":{"arguments":[{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3361:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4902,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{}}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4887,"id":4906,"nodeType":"Return","src":"3346:21:15"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"2871:280:15","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:15","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"value","nameLocation":"3183:5:15","nodeType":"VariableDeclaration","scope":4908,"src":"3175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:15"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"3213:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4885,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:15"},"scope":6534,"src":"3156:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"3731:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4918,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:15","memberName":"max","nodeType":"MemberAccess","src":"3753:17:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4929,"nodeType":"IfStatement","src":"3741:105:15","trueBody":{"id":4928,"nodeType":"Block","src":"3772:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"3829:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4923,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"3793:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4927,"nodeType":"RevertStatement","src":"3786:49:15"}]}},{"expression":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4930,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:15","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4915,"id":4934,"nodeType":"Return","src":"3855:21:15"}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"3380:280:15","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:15","nodeType":"FunctionDefinition","parameters":{"id":4912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"value","nameLocation":"3692:5:15","nodeType":"VariableDeclaration","scope":4936,"src":"3684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:15"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"3722:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4913,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:15"},"scope":6534,"src":"3665:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"4240:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4254:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4946,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:15","memberName":"max","nodeType":"MemberAccess","src":"4262:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4957,"nodeType":"IfStatement","src":"4250:105:15","trueBody":{"id":4956,"nodeType":"Block","src":"4281:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4951,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4302:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4955,"nodeType":"RevertStatement","src":"4295:49:15"}]}},{"expression":{"arguments":[{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4958,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:15","typeDescriptions":{}}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4943,"id":4962,"nodeType":"Return","src":"4364:21:15"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"3889:280:15","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:15","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"4201:5:15","nodeType":"VariableDeclaration","scope":4964,"src":"4193:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:15"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4964,"src":"4231:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4941,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:15"},"scope":6534,"src":"4174:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4991,"nodeType":"Block","src":"4749:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"4763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4974,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4973,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:15","memberName":"max","nodeType":"MemberAccess","src":"4771:17:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"4759:105:15","trueBody":{"id":4984,"nodeType":"Block","src":"4790:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"4847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4811:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4983,"nodeType":"RevertStatement","src":"4804:49:15"}]}},{"expression":{"arguments":[{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"4888:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4986,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4971,"id":4990,"nodeType":"Return","src":"4873:21:15"}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"4398:280:15","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:15","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"value","nameLocation":"4710:5:15","nodeType":"VariableDeclaration","scope":4992,"src":"4702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:15"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4992,"src":"4740:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4969,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:15"},"scope":6534,"src":"4683:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"5258:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5002,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5001,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:15","memberName":"max","nodeType":"MemberAccess","src":"5280:17:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"5268:105:15","trueBody":{"id":5012,"nodeType":"Block","src":"5299:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"5356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5320:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5011,"nodeType":"RevertStatement","src":"5313:49:15"}]}},{"expression":{"arguments":[{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5014,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4999,"id":5018,"nodeType":"Return","src":"5382:21:15"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"4907:280:15","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:15","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"value","nameLocation":"5219:5:15","nodeType":"VariableDeclaration","scope":5020,"src":"5211:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:15"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5020,"src":"5249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4997,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:15"},"scope":6534,"src":"5192:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5047,"nodeType":"Block","src":"5767:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5030,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5029,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:15","memberName":"max","nodeType":"MemberAccess","src":"5789:17:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"nodeType":"IfStatement","src":"5777:105:15","trueBody":{"id":5040,"nodeType":"Block","src":"5808:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5039,"nodeType":"RevertStatement","src":"5822:49:15"}]}},{"expression":{"arguments":[{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"5906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5042,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:15","typeDescriptions":{}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5027,"id":5046,"nodeType":"Return","src":"5891:21:15"}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"5416:280:15","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5048,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:15","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"5728:5:15","nodeType":"VariableDeclaration","scope":5048,"src":"5720:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:15"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5048,"src":"5758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5025,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:15"},"scope":6534,"src":"5701:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"6276:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6290:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5058,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:15","memberName":"max","nodeType":"MemberAccess","src":"6298:17:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"6286:105:15","trueBody":{"id":5068,"nodeType":"Block","src":"6317:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6338:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"RevertStatement","src":"6331:49:15"}]}},{"expression":{"arguments":[{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6415:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5070,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:15","typeDescriptions":{}}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5055,"id":5074,"nodeType":"Return","src":"6400:21:15"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"5925:280:15","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:15","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"value","nameLocation":"6237:5:15","nodeType":"VariableDeclaration","scope":5076,"src":"6229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:15"},"returnParameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"6267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5053,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:15"},"scope":6534,"src":"6210:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"6785:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"6799:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5086,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5085,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:15","memberName":"max","nodeType":"MemberAccess","src":"6807:17:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"6795:105:15","trueBody":{"id":5096,"nodeType":"Block","src":"6826:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"6883:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6847:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"RevertStatement","src":"6840:49:15"}]}},{"expression":{"arguments":[{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"6924:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5098,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:15","typeDescriptions":{}}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5083,"id":5102,"nodeType":"Return","src":"6909:21:15"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"6434:280:15","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:15","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"value","nameLocation":"6746:5:15","nodeType":"VariableDeclaration","scope":5104,"src":"6738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:15"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5104,"src":"6776:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5081,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:15"},"scope":6534,"src":"6719:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"7294:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7308:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5114,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:15","memberName":"max","nodeType":"MemberAccess","src":"7316:17:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"7304:105:15","trueBody":{"id":5124,"nodeType":"Block","src":"7335:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7392:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5119,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"7356:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5123,"nodeType":"RevertStatement","src":"7349:49:15"}]}},{"expression":{"arguments":[{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"7433:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5126,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:15","typeDescriptions":{}}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5111,"id":5130,"nodeType":"Return","src":"7418:21:15"}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"6943:280:15","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:15","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"value","nameLocation":"7255:5:15","nodeType":"VariableDeclaration","scope":5132,"src":"7247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:15"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5132,"src":"7285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5109,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:15"},"scope":6534,"src":"7228:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"7803:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"7817:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5142,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:15","memberName":"max","nodeType":"MemberAccess","src":"7825:17:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5153,"nodeType":"IfStatement","src":"7813:105:15","trueBody":{"id":5152,"nodeType":"Block","src":"7844:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"7901:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"7865:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"RevertStatement","src":"7858:49:15"}]}},{"expression":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"7942:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5154,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:15","typeDescriptions":{}}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5139,"id":5158,"nodeType":"Return","src":"7927:21:15"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"7452:280:15","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:15","nodeType":"FunctionDefinition","parameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"value","nameLocation":"7764:5:15","nodeType":"VariableDeclaration","scope":5160,"src":"7756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:15"},"returnParameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5160,"src":"7794:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5137,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:15"},"scope":6534,"src":"7737:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5187,"nodeType":"Block","src":"8312:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5170,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:15","memberName":"max","nodeType":"MemberAccess","src":"8334:17:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5181,"nodeType":"IfStatement","src":"8322:105:15","trueBody":{"id":5180,"nodeType":"Block","src":"8353:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"8410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"8374:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5179,"nodeType":"RevertStatement","src":"8367:49:15"}]}},{"expression":{"arguments":[{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"8451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5182,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:15","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5167,"id":5186,"nodeType":"Return","src":"8436:21:15"}]},"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"7961:280:15","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5188,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:15","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"value","nameLocation":"8273:5:15","nodeType":"VariableDeclaration","scope":5188,"src":"8265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:15"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5188,"src":"8303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5165,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:15"},"scope":6534,"src":"8246:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5215,"nodeType":"Block","src":"8821:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5198,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5197,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:15","memberName":"max","nodeType":"MemberAccess","src":"8843:17:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5209,"nodeType":"IfStatement","src":"8831:105:15","trueBody":{"id":5208,"nodeType":"Block","src":"8862:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"8919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"8883:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5207,"nodeType":"RevertStatement","src":"8876:49:15"}]}},{"expression":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"8960:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5210,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:15","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5195,"id":5214,"nodeType":"Return","src":"8945:21:15"}]},"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"8470:280:15","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:15","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"value","nameLocation":"8782:5:15","nodeType":"VariableDeclaration","scope":5216,"src":"8774:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:15"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5216,"src":"8812:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5193,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:15"},"scope":6534,"src":"8755:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"9330:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9344:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5226,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5225,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:15","memberName":"max","nodeType":"MemberAccess","src":"9352:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"9340:105:15","trueBody":{"id":5236,"nodeType":"Block","src":"9371:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"9392:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"RevertStatement","src":"9385:49:15"}]}},{"expression":{"arguments":[{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9469:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5238,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:15","typeDescriptions":{}}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5223,"id":5242,"nodeType":"Return","src":"9454:21:15"}]},"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"8979:280:15","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:15","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"value","nameLocation":"9291:5:15","nodeType":"VariableDeclaration","scope":5244,"src":"9283:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:15"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"9321:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5221,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:15"},"scope":6534,"src":"9264:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"9839:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5254,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:15","memberName":"max","nodeType":"MemberAccess","src":"9861:17:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"9849:105:15","trueBody":{"id":5264,"nodeType":"Block","src":"9880:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"9937:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"9901:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"RevertStatement","src":"9894:49:15"}]}},{"expression":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"9978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5266,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:15","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5251,"id":5270,"nodeType":"Return","src":"9963:21:15"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"9488:280:15","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:15","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"9800:5:15","nodeType":"VariableDeclaration","scope":5272,"src":"9792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:15"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"9830:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5249,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:15"},"scope":6534,"src":"9773:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5299,"nodeType":"Block","src":"10348:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5282,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5281,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:15","memberName":"max","nodeType":"MemberAccess","src":"10370:17:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"nodeType":"IfStatement","src":"10358:105:15","trueBody":{"id":5292,"nodeType":"Block","src":"10389:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"10446:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5287,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"10410:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"RevertStatement","src":"10403:49:15"}]}},{"expression":{"arguments":[{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"10487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5294,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:15","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5279,"id":5298,"nodeType":"Return","src":"10472:21:15"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"9997:280:15","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5300,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:15","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"value","nameLocation":"10309:5:15","nodeType":"VariableDeclaration","scope":5300,"src":"10301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:15"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5300,"src":"10339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5277,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:15"},"scope":6534,"src":"10282:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"10857:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"10871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5310,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5309,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:15","memberName":"max","nodeType":"MemberAccess","src":"10879:17:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5321,"nodeType":"IfStatement","src":"10867:105:15","trueBody":{"id":5320,"nodeType":"Block","src":"10898:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"10955:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5315,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"10919:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5319,"nodeType":"RevertStatement","src":"10912:49:15"}]}},{"expression":{"arguments":[{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"10996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5322,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{}}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5307,"id":5326,"nodeType":"Return","src":"10981:21:15"}]},"documentation":{"id":5301,"nodeType":"StructuredDocumentation","src":"10506:280:15","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:15","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"value","nameLocation":"10818:5:15","nodeType":"VariableDeclaration","scope":5328,"src":"10810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:15"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5328,"src":"10848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5305,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:15"},"scope":6534,"src":"10791:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"11360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5338,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5337,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:15","memberName":"max","nodeType":"MemberAccess","src":"11382:16:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"11370:103:15","trueBody":{"id":5348,"nodeType":"Block","src":"11400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5343,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"RevertStatement","src":"11414:48:15"}]}},{"expression":{"arguments":[{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5350,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:15","typeDescriptions":{}}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5335,"id":5354,"nodeType":"Return","src":"11482:20:15"}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"11015:276:15","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"value","nameLocation":"11322:5:15","nodeType":"VariableDeclaration","scope":5356,"src":"11314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:15"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5356,"src":"11352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5333,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:15"},"scope":6534,"src":"11296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5383,"nodeType":"Block","src":"11860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"11874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5366,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5365,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:15","memberName":"max","nodeType":"MemberAccess","src":"11882:16:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5377,"nodeType":"IfStatement","src":"11870:103:15","trueBody":{"id":5376,"nodeType":"Block","src":"11900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"11956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5375,"nodeType":"RevertStatement","src":"11914:48:15"}]}},{"expression":{"arguments":[{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"11996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5378,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:15","typeDescriptions":{}}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5363,"id":5382,"nodeType":"Return","src":"11982:20:15"}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"11515:276:15","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5384,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"value","nameLocation":"11822:5:15","nodeType":"VariableDeclaration","scope":5384,"src":"11814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:15"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5384,"src":"11852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5361,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:15"},"scope":6534,"src":"11796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5411,"nodeType":"Block","src":"12360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"12374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5394,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5393,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:15","memberName":"max","nodeType":"MemberAccess","src":"12382:16:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5405,"nodeType":"IfStatement","src":"12370:103:15","trueBody":{"id":5404,"nodeType":"Block","src":"12400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"12456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5399,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"12421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5403,"nodeType":"RevertStatement","src":"12414:48:15"}]}},{"expression":{"arguments":[{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"12496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5406,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:15","typeDescriptions":{}}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5391,"id":5410,"nodeType":"Return","src":"12482:20:15"}]},"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"12015:276:15","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5412,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"value","nameLocation":"12322:5:15","nodeType":"VariableDeclaration","scope":5412,"src":"12314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:15"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5412,"src":"12352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5389,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:15"},"scope":6534,"src":"12296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5439,"nodeType":"Block","src":"12860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"12874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5422,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5421,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:15","memberName":"max","nodeType":"MemberAccess","src":"12882:16:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"12870:103:15","trueBody":{"id":5432,"nodeType":"Block","src":"12900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"12956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5427,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"12921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"RevertStatement","src":"12914:48:15"}]}},{"expression":{"arguments":[{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"12996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5434,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:15","typeDescriptions":{}}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5419,"id":5438,"nodeType":"Return","src":"12982:20:15"}]},"documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"12515:276:15","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5440,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"value","nameLocation":"12822:5:15","nodeType":"VariableDeclaration","scope":5440,"src":"12814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:15"},"returnParameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5440,"src":"12852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5417,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:15"},"scope":6534,"src":"12796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5467,"nodeType":"Block","src":"13360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5450,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:15","memberName":"max","nodeType":"MemberAccess","src":"13382:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5461,"nodeType":"IfStatement","src":"13370:103:15","trueBody":{"id":5460,"nodeType":"Block","src":"13400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5455,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"13421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5459,"nodeType":"RevertStatement","src":"13414:48:15"}]}},{"expression":{"arguments":[{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5462,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:15","typeDescriptions":{}}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5447,"id":5466,"nodeType":"Return","src":"13482:20:15"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"13015:276:15","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5468,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"value","nameLocation":"13322:5:15","nodeType":"VariableDeclaration","scope":5468,"src":"13314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:15"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5468,"src":"13352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5445,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:15"},"scope":6534,"src":"13296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"13860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"13874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5478,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:15","memberName":"max","nodeType":"MemberAccess","src":"13882:16:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"13870:103:15","trueBody":{"id":5488,"nodeType":"Block","src":"13900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"13956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5483,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"13921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5487,"nodeType":"RevertStatement","src":"13914:48:15"}]}},{"expression":{"arguments":[{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"13996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5490,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:15","typeDescriptions":{}}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5475,"id":5494,"nodeType":"Return","src":"13982:20:15"}]},"documentation":{"id":5469,"nodeType":"StructuredDocumentation","src":"13515:276:15","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"value","nameLocation":"13822:5:15","nodeType":"VariableDeclaration","scope":5496,"src":"13814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:15"},"returnParameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5496,"src":"13852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5473,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:15"},"scope":6534,"src":"13796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"14360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"14374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5506,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5505,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:15","memberName":"max","nodeType":"MemberAccess","src":"14382:16:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"14370:103:15","trueBody":{"id":5516,"nodeType":"Block","src":"14400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"14456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5511,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"14421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5515,"nodeType":"RevertStatement","src":"14414:48:15"}]}},{"expression":{"arguments":[{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"14496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5518,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:15","typeDescriptions":{}}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5503,"id":5522,"nodeType":"Return","src":"14482:20:15"}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"14015:276:15","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"value","nameLocation":"14322:5:15","nodeType":"VariableDeclaration","scope":5524,"src":"14314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:15"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5524,"src":"14352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5501,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:15"},"scope":6534,"src":"14296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5551,"nodeType":"Block","src":"14860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5534,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5533,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:15","memberName":"max","nodeType":"MemberAccess","src":"14882:16:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5545,"nodeType":"IfStatement","src":"14870:103:15","trueBody":{"id":5544,"nodeType":"Block","src":"14900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5539,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"14921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5543,"nodeType":"RevertStatement","src":"14914:48:15"}]}},{"expression":{"arguments":[{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5546,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:15","typeDescriptions":{}}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5531,"id":5550,"nodeType":"Return","src":"14982:20:15"}]},"documentation":{"id":5525,"nodeType":"StructuredDocumentation","src":"14515:276:15","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5552,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"value","nameLocation":"14822:5:15","nodeType":"VariableDeclaration","scope":5552,"src":"14814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:15"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5552,"src":"14852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5529,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:15"},"scope":6534,"src":"14796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5579,"nodeType":"Block","src":"15360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"15374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5562,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5561,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:15","memberName":"max","nodeType":"MemberAccess","src":"15382:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5573,"nodeType":"IfStatement","src":"15370:103:15","trueBody":{"id":5572,"nodeType":"Block","src":"15400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"15456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5567,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"15421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5571,"nodeType":"RevertStatement","src":"15414:48:15"}]}},{"expression":{"arguments":[{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"15496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5574,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:15","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5559,"id":5578,"nodeType":"Return","src":"15482:20:15"}]},"documentation":{"id":5553,"nodeType":"StructuredDocumentation","src":"15015:276:15","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5580,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"value","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":5580,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5554,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:15"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5580,"src":"15352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5557,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:15"},"scope":6534,"src":"15296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5607,"nodeType":"Block","src":"15860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"15874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5590,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:15","memberName":"max","nodeType":"MemberAccess","src":"15882:16:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5601,"nodeType":"IfStatement","src":"15870:103:15","trueBody":{"id":5600,"nodeType":"Block","src":"15900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"15956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5595,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"15921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5599,"nodeType":"RevertStatement","src":"15914:48:15"}]}},{"expression":{"arguments":[{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"15996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5602,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:15","typeDescriptions":{}}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5587,"id":5606,"nodeType":"Return","src":"15982:20:15"}]},"documentation":{"id":5581,"nodeType":"StructuredDocumentation","src":"15515:276:15","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5608,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"value","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":5608,"src":"15814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:15"},"returnParameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5608,"src":"15852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5585,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:15"},"scope":6534,"src":"15796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5635,"nodeType":"Block","src":"16360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"16374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5618,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5617,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:15","memberName":"max","nodeType":"MemberAccess","src":"16382:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"16370:103:15","trueBody":{"id":5628,"nodeType":"Block","src":"16400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"16456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5623,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"16421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5627,"nodeType":"RevertStatement","src":"16414:48:15"}]}},{"expression":{"arguments":[{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"16496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5630,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{}}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5615,"id":5634,"nodeType":"Return","src":"16482:20:15"}]},"documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"16015:276:15","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5636,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"value","nameLocation":"16322:5:15","nodeType":"VariableDeclaration","scope":5636,"src":"16314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:15"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5636,"src":"16352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5613,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:15"},"scope":6534,"src":"16296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5663,"nodeType":"Block","src":"16854:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16868:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5646,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5645,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:15","memberName":"max","nodeType":"MemberAccess","src":"16876:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5657,"nodeType":"IfStatement","src":"16864:101:15","trueBody":{"id":5656,"nodeType":"Block","src":"16893:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5651,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"16914:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5655,"nodeType":"RevertStatement","src":"16907:47:15"}]}},{"expression":{"arguments":[{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"16987:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5658,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:15","typeDescriptions":{}}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5643,"id":5662,"nodeType":"Return","src":"16974:19:15"}]},"documentation":{"id":5637,"nodeType":"StructuredDocumentation","src":"16515:272:15","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5664,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:15","nodeType":"FunctionDefinition","parameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"value","nameLocation":"16817:5:15","nodeType":"VariableDeclaration","scope":5664,"src":"16809:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:15"},"returnParameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5664,"src":"16847:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5641,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:15"},"scope":6534,"src":"16792:208:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5686,"nodeType":"Block","src":"17236:128:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"17250:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5680,"nodeType":"IfStatement","src":"17246:81:15","trueBody":{"id":5679,"nodeType":"Block","src":"17261:66:15","statements":[{"errorCall":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"17310:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5675,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"17282:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5678,"nodeType":"RevertStatement","src":"17275:41:15"}]}},{"expression":{"arguments":[{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"17351:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:15","typeDescriptions":{}}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5671,"id":5685,"nodeType":"Return","src":"17336:21:15"}]},"documentation":{"id":5665,"nodeType":"StructuredDocumentation","src":"17006:160:15","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:15","nodeType":"FunctionDefinition","parameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"value","nameLocation":"17197:5:15","nodeType":"VariableDeclaration","scope":5687,"src":"17190:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5666,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:15"},"returnParameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5687,"src":"17227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:15"},"scope":6534,"src":"17171:193:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"17761:150:15","statements":[{"expression":{"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"17771:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"17791:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5696,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:15","typeDescriptions":{}}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5701,"nodeType":"ExpressionStatement","src":"17771:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"17811:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"17825:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5711,"nodeType":"IfStatement","src":"17807:98:15","trueBody":{"id":5710,"nodeType":"Block","src":"17832:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"17888:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"17853:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5709,"nodeType":"RevertStatement","src":"17846:48:15"}]}}]},"documentation":{"id":5688,"nodeType":"StructuredDocumentation","src":"17370:312:15","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:15","nodeType":"FunctionDefinition","parameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"value","nameLocation":"17712:5:15","nodeType":"VariableDeclaration","scope":5713,"src":"17705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5689,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:15"},"returnParameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:15","nodeType":"VariableDeclaration","scope":5713,"src":"17742:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5692,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:15"},"scope":6534,"src":"17687:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5738,"nodeType":"Block","src":"18308:150:15","statements":[{"expression":{"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"18318:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"18338:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5722,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:15","typeDescriptions":{}}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5727,"nodeType":"ExpressionStatement","src":"18318:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"18358:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"18372:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5737,"nodeType":"IfStatement","src":"18354:98:15","trueBody":{"id":5736,"nodeType":"Block","src":"18379:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"18435:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"18400:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5735,"nodeType":"RevertStatement","src":"18393:48:15"}]}}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"17917:312:15","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5739,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:15","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"18259:5:15","nodeType":"VariableDeclaration","scope":5739,"src":"18252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5715,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:15"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:15","nodeType":"VariableDeclaration","scope":5739,"src":"18289:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5718,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:15"},"scope":6534,"src":"18234:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5764,"nodeType":"Block","src":"18855:150:15","statements":[{"expression":{"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"18865:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"18885:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5748,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:15","typeDescriptions":{}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5753,"nodeType":"ExpressionStatement","src":"18865:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"18905:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"18919:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5763,"nodeType":"IfStatement","src":"18901:98:15","trueBody":{"id":5762,"nodeType":"Block","src":"18926:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"18982:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"18947:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"RevertStatement","src":"18940:48:15"}]}}]},"documentation":{"id":5740,"nodeType":"StructuredDocumentation","src":"18464:312:15","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5765,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:15","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"value","nameLocation":"18806:5:15","nodeType":"VariableDeclaration","scope":5765,"src":"18799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5741,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:15"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:15","nodeType":"VariableDeclaration","scope":5765,"src":"18836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5744,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:15"},"scope":6534,"src":"18781:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"19402:150:15","statements":[{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"19412:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"19432:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5774,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:15","typeDescriptions":{}}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5779,"nodeType":"ExpressionStatement","src":"19412:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"19452:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"19466:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5789,"nodeType":"IfStatement","src":"19448:98:15","trueBody":{"id":5788,"nodeType":"Block","src":"19473:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"19529:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"19494:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5787,"nodeType":"RevertStatement","src":"19487:48:15"}]}}]},"documentation":{"id":5766,"nodeType":"StructuredDocumentation","src":"19011:312:15","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:15","nodeType":"FunctionDefinition","parameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"value","nameLocation":"19353:5:15","nodeType":"VariableDeclaration","scope":5791,"src":"19346:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5767,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:15"},"returnParameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:15","nodeType":"VariableDeclaration","scope":5791,"src":"19383:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5770,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:15"},"scope":6534,"src":"19328:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"19949:150:15","statements":[{"expression":{"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"19959:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"19979:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5800,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:15","typeDescriptions":{}}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5805,"nodeType":"ExpressionStatement","src":"19959:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"19999:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"20013:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5815,"nodeType":"IfStatement","src":"19995:98:15","trueBody":{"id":5814,"nodeType":"Block","src":"20020:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"20076:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5809,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"20041:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5813,"nodeType":"RevertStatement","src":"20034:48:15"}]}}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"19558:312:15","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:15","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"19900:5:15","nodeType":"VariableDeclaration","scope":5817,"src":"19893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5793,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:15"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:15","nodeType":"VariableDeclaration","scope":5817,"src":"19930:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5796,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:15"},"scope":6534,"src":"19875:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5842,"nodeType":"Block","src":"20496:150:15","statements":[{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"20506:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"20526:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5826,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:15","typeDescriptions":{}}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5831,"nodeType":"ExpressionStatement","src":"20506:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"20546:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"20560:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"20542:98:15","trueBody":{"id":5840,"nodeType":"Block","src":"20567:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"20623:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"20588:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5839,"nodeType":"RevertStatement","src":"20581:48:15"}]}}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"20105:312:15","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:15","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":5843,"src":"20440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5819,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:15"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:15","nodeType":"VariableDeclaration","scope":5843,"src":"20477:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5822,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:15"},"scope":6534,"src":"20422:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5868,"nodeType":"Block","src":"21043:150:15","statements":[{"expression":{"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"21053:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"21073:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5852,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:15","typeDescriptions":{}}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5857,"nodeType":"ExpressionStatement","src":"21053:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"21093:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"21107:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5867,"nodeType":"IfStatement","src":"21089:98:15","trueBody":{"id":5866,"nodeType":"Block","src":"21114:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"21170:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"21135:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5865,"nodeType":"RevertStatement","src":"21128:48:15"}]}}]},"documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"20652:312:15","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:15","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"20994:5:15","nodeType":"VariableDeclaration","scope":5869,"src":"20987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5845,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:15"},"returnParameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:15","nodeType":"VariableDeclaration","scope":5869,"src":"21024:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5848,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:15"},"scope":6534,"src":"20969:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"21590:150:15","statements":[{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"21600:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"21620:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5878,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:15","typeDescriptions":{}}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5883,"nodeType":"ExpressionStatement","src":"21600:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"21640:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"21654:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"21636:98:15","trueBody":{"id":5892,"nodeType":"Block","src":"21661:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"21717:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5887,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"21682:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"RevertStatement","src":"21675:48:15"}]}}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"21199:312:15","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:15","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"value","nameLocation":"21541:5:15","nodeType":"VariableDeclaration","scope":5895,"src":"21534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5871,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:15"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:15","nodeType":"VariableDeclaration","scope":5895,"src":"21571:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5874,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:15"},"scope":6534,"src":"21516:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5920,"nodeType":"Block","src":"22137:150:15","statements":[{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"22147:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"22167:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5904,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:15","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5909,"nodeType":"ExpressionStatement","src":"22147:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"22187:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"22201:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5919,"nodeType":"IfStatement","src":"22183:98:15","trueBody":{"id":5918,"nodeType":"Block","src":"22208:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"22264:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"22229:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5917,"nodeType":"RevertStatement","src":"22222:48:15"}]}}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"21746:312:15","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:15","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"value","nameLocation":"22088:5:15","nodeType":"VariableDeclaration","scope":5921,"src":"22081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5897,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:15"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:15","nodeType":"VariableDeclaration","scope":5921,"src":"22118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5900,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:15"},"scope":6534,"src":"22063:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"22684:150:15","statements":[{"expression":{"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"22694:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5930,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:15","typeDescriptions":{}}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5935,"nodeType":"ExpressionStatement","src":"22694:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"22734:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"22748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5945,"nodeType":"IfStatement","src":"22730:98:15","trueBody":{"id":5944,"nodeType":"Block","src":"22755:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"22811:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"22776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5943,"nodeType":"RevertStatement","src":"22769:48:15"}]}}]},"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"22293:312:15","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:15","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"22635:5:15","nodeType":"VariableDeclaration","scope":5947,"src":"22628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5923,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:15"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:15","nodeType":"VariableDeclaration","scope":5947,"src":"22665:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5926,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:15"},"scope":6534,"src":"22610:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5972,"nodeType":"Block","src":"23231:150:15","statements":[{"expression":{"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"23241:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"23261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5956,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:15","typeDescriptions":{}}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5961,"nodeType":"ExpressionStatement","src":"23241:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"23281:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"23295:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"23277:98:15","trueBody":{"id":5970,"nodeType":"Block","src":"23302:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"23358:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5965,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"23323:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5969,"nodeType":"RevertStatement","src":"23316:48:15"}]}}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"22840:312:15","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5973,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:15","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"23182:5:15","nodeType":"VariableDeclaration","scope":5973,"src":"23175:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5949,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:15"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:15","nodeType":"VariableDeclaration","scope":5973,"src":"23212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5952,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:15"},"scope":6534,"src":"23157:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5998,"nodeType":"Block","src":"23778:150:15","statements":[{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"23788:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"23808:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5982,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:15","typeDescriptions":{}}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5987,"nodeType":"ExpressionStatement","src":"23788:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"23842:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5997,"nodeType":"IfStatement","src":"23824:98:15","trueBody":{"id":5996,"nodeType":"Block","src":"23849:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"23905:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5991,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"23870:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"RevertStatement","src":"23863:48:15"}]}}]},"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"23387:312:15","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:15","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"value","nameLocation":"23729:5:15","nodeType":"VariableDeclaration","scope":5999,"src":"23722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5975,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:15"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:15","nodeType":"VariableDeclaration","scope":5999,"src":"23759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5978,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:15"},"scope":6534,"src":"23704:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"24325:150:15","statements":[{"expression":{"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"24335:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"24355:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6008,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:15","typeDescriptions":{}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6013,"nodeType":"ExpressionStatement","src":"24335:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"24375:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"24389:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"24371:98:15","trueBody":{"id":6022,"nodeType":"Block","src":"24396:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"24452:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6017,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"24417:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6021,"nodeType":"RevertStatement","src":"24410:48:15"}]}}]},"documentation":{"id":6000,"nodeType":"StructuredDocumentation","src":"23934:312:15","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:15","nodeType":"FunctionDefinition","parameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"value","nameLocation":"24276:5:15","nodeType":"VariableDeclaration","scope":6025,"src":"24269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6001,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:15"},"returnParameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:15","nodeType":"VariableDeclaration","scope":6025,"src":"24306:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6004,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:15"},"scope":6534,"src":"24251:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6050,"nodeType":"Block","src":"24872:150:15","statements":[{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"24882:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"24902:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6034,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:15","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6039,"nodeType":"ExpressionStatement","src":"24882:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"24922:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"24936:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6049,"nodeType":"IfStatement","src":"24918:98:15","trueBody":{"id":6048,"nodeType":"Block","src":"24943:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"24999:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6043,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"24964:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6047,"nodeType":"RevertStatement","src":"24957:48:15"}]}}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"24481:312:15","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:15","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"value","nameLocation":"24823:5:15","nodeType":"VariableDeclaration","scope":6051,"src":"24816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6027,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:15"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:15","nodeType":"VariableDeclaration","scope":6051,"src":"24853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6030,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:15"},"scope":6534,"src":"24798:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"25419:150:15","statements":[{"expression":{"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"25429:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"25449:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6060,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:15","typeDescriptions":{}}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6065,"nodeType":"ExpressionStatement","src":"25429:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"25469:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"25483:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6075,"nodeType":"IfStatement","src":"25465:98:15","trueBody":{"id":6074,"nodeType":"Block","src":"25490:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"25546:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6069,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"25511:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6073,"nodeType":"RevertStatement","src":"25504:48:15"}]}}]},"documentation":{"id":6052,"nodeType":"StructuredDocumentation","src":"25028:312:15","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:15","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"value","nameLocation":"25370:5:15","nodeType":"VariableDeclaration","scope":6077,"src":"25363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6053,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:15"},"returnParameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:15","nodeType":"VariableDeclaration","scope":6077,"src":"25400:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6056,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:15"},"scope":6534,"src":"25345:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6102,"nodeType":"Block","src":"25966:150:15","statements":[{"expression":{"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"25976:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"25996:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6086,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:15","typeDescriptions":{}}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6091,"nodeType":"ExpressionStatement","src":"25976:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"26016:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"26030:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6101,"nodeType":"IfStatement","src":"26012:98:15","trueBody":{"id":6100,"nodeType":"Block","src":"26037:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"26058:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6099,"nodeType":"RevertStatement","src":"26051:48:15"}]}}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"25575:312:15","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6103,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:15","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"value","nameLocation":"25917:5:15","nodeType":"VariableDeclaration","scope":6103,"src":"25910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6079,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:15"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:15","nodeType":"VariableDeclaration","scope":6103,"src":"25947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6082,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:15"},"scope":6534,"src":"25892:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6128,"nodeType":"Block","src":"26513:150:15","statements":[{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"26523:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"26543:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6112,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:15","typeDescriptions":{}}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6117,"nodeType":"ExpressionStatement","src":"26523:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"26563:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"26577:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6127,"nodeType":"IfStatement","src":"26559:98:15","trueBody":{"id":6126,"nodeType":"Block","src":"26584:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"26640:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6121,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"26605:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6125,"nodeType":"RevertStatement","src":"26598:48:15"}]}}]},"documentation":{"id":6104,"nodeType":"StructuredDocumentation","src":"26122:312:15","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:15","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"value","nameLocation":"26464:5:15","nodeType":"VariableDeclaration","scope":6129,"src":"26457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6105,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:15"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:15","nodeType":"VariableDeclaration","scope":6129,"src":"26494:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6108,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:15"},"scope":6534,"src":"26439:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6154,"nodeType":"Block","src":"27060:150:15","statements":[{"expression":{"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27070:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"27090:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6138,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:15","typeDescriptions":{}}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6143,"nodeType":"ExpressionStatement","src":"27070:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"27110:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"27124:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6153,"nodeType":"IfStatement","src":"27106:98:15","trueBody":{"id":6152,"nodeType":"Block","src":"27131:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"27187:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"27152:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6151,"nodeType":"RevertStatement","src":"27145:48:15"}]}}]},"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"26669:312:15","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6155,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:15","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"value","nameLocation":"27011:5:15","nodeType":"VariableDeclaration","scope":6155,"src":"27004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6131,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:15"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:15","nodeType":"VariableDeclaration","scope":6155,"src":"27041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6134,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:15"},"scope":6534,"src":"26986:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6180,"nodeType":"Block","src":"27607:150:15","statements":[{"expression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"27617:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"27637:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6164,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:15","typeDescriptions":{}}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6169,"nodeType":"ExpressionStatement","src":"27617:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"27657:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"27671:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6179,"nodeType":"IfStatement","src":"27653:98:15","trueBody":{"id":6178,"nodeType":"Block","src":"27678:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"27734:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6173,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"27699:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6177,"nodeType":"RevertStatement","src":"27692:48:15"}]}}]},"documentation":{"id":6156,"nodeType":"StructuredDocumentation","src":"27216:312:15","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6181,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:15","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"value","nameLocation":"27558:5:15","nodeType":"VariableDeclaration","scope":6181,"src":"27551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6157,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:15"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:15","nodeType":"VariableDeclaration","scope":6181,"src":"27588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6160,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:15"},"scope":6534,"src":"27533:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"28147:148:15","statements":[{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"28157:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"28176:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6190,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:15","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6195,"nodeType":"ExpressionStatement","src":"28157:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"28196:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"28210:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"28192:97:15","trueBody":{"id":6204,"nodeType":"Block","src":"28217:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"28272:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6199,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"28238:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6203,"nodeType":"RevertStatement","src":"28231:47:15"}]}}]},"documentation":{"id":6182,"nodeType":"StructuredDocumentation","src":"27763:307:15","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6207,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:15","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"value","nameLocation":"28099:5:15","nodeType":"VariableDeclaration","scope":6207,"src":"28092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6183,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:15"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:15","nodeType":"VariableDeclaration","scope":6207,"src":"28129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6186,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:15"},"scope":6534,"src":"28075:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6232,"nodeType":"Block","src":"28685:148:15","statements":[{"expression":{"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"28695:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"28714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6216,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:15","typeDescriptions":{}}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6221,"nodeType":"ExpressionStatement","src":"28695:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"28734:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"28748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6231,"nodeType":"IfStatement","src":"28730:97:15","trueBody":{"id":6230,"nodeType":"Block","src":"28755:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"28810:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6225,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"28776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6229,"nodeType":"RevertStatement","src":"28769:47:15"}]}}]},"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"28301:307:15","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:15","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"value","nameLocation":"28637:5:15","nodeType":"VariableDeclaration","scope":6233,"src":"28630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6209,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:15"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:15","nodeType":"VariableDeclaration","scope":6233,"src":"28667:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6212,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:15"},"scope":6534,"src":"28613:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6258,"nodeType":"Block","src":"29223:148:15","statements":[{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"29233:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"29252:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6242,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:15","typeDescriptions":{}}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6247,"nodeType":"ExpressionStatement","src":"29233:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"29272:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"29286:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"29268:97:15","trueBody":{"id":6256,"nodeType":"Block","src":"29293:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"29348:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6251,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"29314:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6255,"nodeType":"RevertStatement","src":"29307:47:15"}]}}]},"documentation":{"id":6234,"nodeType":"StructuredDocumentation","src":"28839:307:15","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:15","nodeType":"FunctionDefinition","parameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"value","nameLocation":"29175:5:15","nodeType":"VariableDeclaration","scope":6259,"src":"29168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6235,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:15"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:15","nodeType":"VariableDeclaration","scope":6259,"src":"29205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6238,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:15"},"scope":6534,"src":"29151:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6284,"nodeType":"Block","src":"29761:148:15","statements":[{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"29771:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"29790:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6268,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:15","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6273,"nodeType":"ExpressionStatement","src":"29771:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"29810:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"29824:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"29806:97:15","trueBody":{"id":6282,"nodeType":"Block","src":"29831:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"29886:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6277,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"29852:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6281,"nodeType":"RevertStatement","src":"29845:47:15"}]}}]},"documentation":{"id":6260,"nodeType":"StructuredDocumentation","src":"29377:307:15","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6285,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:15","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"value","nameLocation":"29713:5:15","nodeType":"VariableDeclaration","scope":6285,"src":"29706:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6261,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:15"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:15","nodeType":"VariableDeclaration","scope":6285,"src":"29743:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6264,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:15"},"scope":6534,"src":"29689:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"30299:148:15","statements":[{"expression":{"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"30309:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"30328:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6294,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:15","typeDescriptions":{}}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6299,"nodeType":"ExpressionStatement","src":"30309:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"30348:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6309,"nodeType":"IfStatement","src":"30344:97:15","trueBody":{"id":6308,"nodeType":"Block","src":"30369:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"30424:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6303,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"30390:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6307,"nodeType":"RevertStatement","src":"30383:47:15"}]}}]},"documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"29915:307:15","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:15","nodeType":"FunctionDefinition","parameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"value","nameLocation":"30251:5:15","nodeType":"VariableDeclaration","scope":6311,"src":"30244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6287,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:15"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:15","nodeType":"VariableDeclaration","scope":6311,"src":"30281:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6290,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:15"},"scope":6534,"src":"30227:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6336,"nodeType":"Block","src":"30837:148:15","statements":[{"expression":{"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"30847:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"30866:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6320,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:15","typeDescriptions":{}}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6325,"nodeType":"ExpressionStatement","src":"30847:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"30886:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"30900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6335,"nodeType":"IfStatement","src":"30882:97:15","trueBody":{"id":6334,"nodeType":"Block","src":"30907:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"30962:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6329,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"30928:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6333,"nodeType":"RevertStatement","src":"30921:47:15"}]}}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"30453:307:15","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6337,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:15","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"30789:5:15","nodeType":"VariableDeclaration","scope":6337,"src":"30782:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6313,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:15"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:15","nodeType":"VariableDeclaration","scope":6337,"src":"30819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6316,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:15"},"scope":6534,"src":"30765:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6362,"nodeType":"Block","src":"31375:148:15","statements":[{"expression":{"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"31385:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31404:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6346,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:15","typeDescriptions":{}}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6351,"nodeType":"ExpressionStatement","src":"31385:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"31424:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31438:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6361,"nodeType":"IfStatement","src":"31420:97:15","trueBody":{"id":6360,"nodeType":"Block","src":"31445:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31500:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6355,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31466:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6359,"nodeType":"RevertStatement","src":"31459:47:15"}]}}]},"documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"30991:307:15","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6363,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:15","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"value","nameLocation":"31327:5:15","nodeType":"VariableDeclaration","scope":6363,"src":"31320:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6339,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:15"},"returnParameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:15","nodeType":"VariableDeclaration","scope":6363,"src":"31357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6342,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:15"},"scope":6534,"src":"31303:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6388,"nodeType":"Block","src":"31913:148:15","statements":[{"expression":{"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"31923:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"31942:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6372,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:15","typeDescriptions":{}}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6377,"nodeType":"ExpressionStatement","src":"31923:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"31962:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"31976:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6387,"nodeType":"IfStatement","src":"31958:97:15","trueBody":{"id":6386,"nodeType":"Block","src":"31983:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"32038:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6381,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"32004:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6385,"nodeType":"RevertStatement","src":"31997:47:15"}]}}]},"documentation":{"id":6364,"nodeType":"StructuredDocumentation","src":"31529:307:15","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:15","nodeType":"FunctionDefinition","parameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"value","nameLocation":"31865:5:15","nodeType":"VariableDeclaration","scope":6389,"src":"31858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6365,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:15"},"returnParameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:15","nodeType":"VariableDeclaration","scope":6389,"src":"31895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6368,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:15"},"scope":6534,"src":"31841:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6414,"nodeType":"Block","src":"32451:148:15","statements":[{"expression":{"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"32461:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"32480:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6398,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:15","typeDescriptions":{}}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6403,"nodeType":"ExpressionStatement","src":"32461:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"32500:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"32514:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6413,"nodeType":"IfStatement","src":"32496:97:15","trueBody":{"id":6412,"nodeType":"Block","src":"32521:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"32576:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6407,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"32542:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6411,"nodeType":"RevertStatement","src":"32535:47:15"}]}}]},"documentation":{"id":6390,"nodeType":"StructuredDocumentation","src":"32067:307:15","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6415,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:15","nodeType":"FunctionDefinition","parameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"value","nameLocation":"32403:5:15","nodeType":"VariableDeclaration","scope":6415,"src":"32396:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6391,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:15"},"returnParameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:15","nodeType":"VariableDeclaration","scope":6415,"src":"32433:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6394,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:15"},"scope":6534,"src":"32379:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6440,"nodeType":"Block","src":"32989:148:15","statements":[{"expression":{"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"32999:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"33018:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6424,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:15","typeDescriptions":{}}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6429,"nodeType":"ExpressionStatement","src":"32999:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"33038:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"33052:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6439,"nodeType":"IfStatement","src":"33034:97:15","trueBody":{"id":6438,"nodeType":"Block","src":"33059:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"33114:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6433,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"33080:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6437,"nodeType":"RevertStatement","src":"33073:47:15"}]}}]},"documentation":{"id":6416,"nodeType":"StructuredDocumentation","src":"32605:307:15","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6441,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:15","nodeType":"FunctionDefinition","parameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"value","nameLocation":"32941:5:15","nodeType":"VariableDeclaration","scope":6441,"src":"32934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6417,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:15"},"returnParameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:15","nodeType":"VariableDeclaration","scope":6441,"src":"32971:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6420,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:15"},"scope":6534,"src":"32917:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6466,"nodeType":"Block","src":"33527:148:15","statements":[{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"33537:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"33556:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6450,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:15","typeDescriptions":{}}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6455,"nodeType":"ExpressionStatement","src":"33537:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"33576:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"33590:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"nodeType":"IfStatement","src":"33572:97:15","trueBody":{"id":6464,"nodeType":"Block","src":"33597:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"33652:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6459,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"33618:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6463,"nodeType":"RevertStatement","src":"33611:47:15"}]}}]},"documentation":{"id":6442,"nodeType":"StructuredDocumentation","src":"33143:307:15","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:15","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"value","nameLocation":"33479:5:15","nodeType":"VariableDeclaration","scope":6467,"src":"33472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6443,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:15"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:15","nodeType":"VariableDeclaration","scope":6467,"src":"33509:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6446,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:15"},"scope":6534,"src":"33455:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6492,"nodeType":"Block","src":"34058:146:15","statements":[{"expression":{"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"34068:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"34086:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6476,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:15","typeDescriptions":{}}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6481,"nodeType":"ExpressionStatement","src":"34068:24:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"34106:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"34120:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6491,"nodeType":"IfStatement","src":"34102:96:15","trueBody":{"id":6490,"nodeType":"Block","src":"34127:71:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"34181:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6485,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"34148:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6489,"nodeType":"RevertStatement","src":"34141:46:15"}]}}]},"documentation":{"id":6468,"nodeType":"StructuredDocumentation","src":"33681:302:15","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:15","nodeType":"FunctionDefinition","parameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"value","nameLocation":"34011:5:15","nodeType":"VariableDeclaration","scope":6493,"src":"34004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6469,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:15"},"returnParameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:15","nodeType":"VariableDeclaration","scope":6493,"src":"34041:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6472,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:15"},"scope":6534,"src":"33988:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6522,"nodeType":"Block","src":"34444:250:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"34557:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6505,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:15","memberName":"max","nodeType":"MemberAccess","src":"34573:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:15","typeDescriptions":{}}},"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6516,"nodeType":"IfStatement","src":"34553:105:15","trueBody":{"id":6515,"nodeType":"Block","src":"34592:66:15","statements":[{"errorCall":{"arguments":[{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"34641:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6511,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"34613:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6514,"nodeType":"RevertStatement","src":"34606:41:15"}]}},{"expression":{"arguments":[{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"34681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6517,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:15","typeDescriptions":{}}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6500,"id":6521,"nodeType":"Return","src":"34667:20:15"}]},"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"34210:165:15","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6523,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:15","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"value","nameLocation":"34406:5:15","nodeType":"VariableDeclaration","scope":6523,"src":"34398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:15"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6523,"src":"34436:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6498,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:15"},"scope":6534,"src":"34380:314:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6532,"nodeType":"Block","src":"34853:87:15","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:15","statements":[{"nodeType":"YulAssignment","src":"34902:22:15","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:15"},"nodeType":"YulFunctionCall","src":"34914:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:15"},"nodeType":"YulFunctionCall","src":"34907:17:15"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6526,"isOffset":false,"isSlot":false,"src":"34921:1:15","valueSize":1},{"declaration":6529,"isOffset":false,"isSlot":false,"src":"34902:1:15","valueSize":1}],"flags":["memory-safe"],"id":6531,"nodeType":"InlineAssembly","src":"34863:71:15"}]},"documentation":{"id":6524,"nodeType":"StructuredDocumentation","src":"34700:90:15","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6533,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:15","nodeType":"FunctionDefinition","parameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"b","nameLocation":"34816:1:15","nodeType":"VariableDeclaration","scope":6533,"src":"34811:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6525,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:15"},"returnParameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"u","nameLocation":"34850:1:15","nodeType":"VariableDeclaration","scope":6533,"src":"34842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:15"},"scope":6534,"src":"34795:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6535,"src":"769:34173:15","usedErrors":[4779,4784,4791,4796],"usedEvents":[]}],"src":"192:34751:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6534],"SignedMath":[6678]},"id":6679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6679,"sourceUnit":6535,"src":"135:40:16","symbolAliases":[{"foreign":{"id":6537,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"143:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"177:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6678,"linearizedBaseContracts":[6678],"name":"SignedMath","nameLocation":"266:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":6568,"nodeType":"Block","src":"746:215:16","statements":[{"id":6567,"nodeType":"UncheckedBlock","src":"756:199:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"894:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"904:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6560,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"932:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"916:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6534_$","typeString":"type(library SafeCast)"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"916:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6556,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:16","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6550,"id":6566,"nodeType":"Return","src":"887:57:16"}]}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"283:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:16","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"condition","nameLocation":"684:9:16","nodeType":"VariableDeclaration","scope":6569,"src":"679:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6541,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6544,"mutability":"mutable","name":"a","nameLocation":"702:1:16","nodeType":"VariableDeclaration","scope":6569,"src":"695:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6543,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6546,"mutability":"mutable","name":"b","nameLocation":"712:1:16","nodeType":"VariableDeclaration","scope":6569,"src":"705:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6545,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:16"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6569,"src":"738:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:16"},"scope":6678,"src":"662:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"1102:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"1127:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"1131:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"1134:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"1137:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6579,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"1119:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6578,"id":6586,"nodeType":"Return","src":"1112:27:16"}]},"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"967:66:16","text":" @dev Returns the largest of two signed numbers."},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:16","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"a","nameLocation":"1058:1:16","nodeType":"VariableDeclaration","scope":6588,"src":"1051:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6571,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"b","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":6588,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6573,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:16"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6588,"src":"1094:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6576,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:16"},"scope":6678,"src":"1038:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6606,"nodeType":"Block","src":"1288:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"1313:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"1320:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"1323:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"1305:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6597,"id":6605,"nodeType":"Return","src":"1298:27:16"}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"1152:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":6607,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:16","nodeType":"FunctionDefinition","parameters":{"id":6594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"a","nameLocation":"1244:1:16","nodeType":"VariableDeclaration","scope":6607,"src":"1237:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6593,"mutability":"mutable","name":"b","nameLocation":"1254:1:16","nodeType":"VariableDeclaration","scope":6607,"src":"1247:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6592,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:16"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6607,"src":"1280:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6595,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:16"},"scope":6678,"src":"1224:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"1537:162:16","statements":[{"assignments":[6618],"declarations":[{"constant":false,"id":6618,"mutability":"mutable","name":"x","nameLocation":"1606:1:16","nodeType":"VariableDeclaration","scope":6650,"src":"1599:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6617,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6631,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1611:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"1615:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1622:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"1626:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6637,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"1671:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{}}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6633,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:16","typeDescriptions":{}}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1685:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"1689:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6616,"id":6649,"nodeType":"Return","src":"1644:48:16"}]},"documentation":{"id":6608,"nodeType":"StructuredDocumentation","src":"1338:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:16","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"a","nameLocation":"1493:1:16","nodeType":"VariableDeclaration","scope":6651,"src":"1486:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6609,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6612,"mutability":"mutable","name":"b","nameLocation":"1503:1:16","nodeType":"VariableDeclaration","scope":6651,"src":"1496:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6611,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:16"},"returnParameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6651,"src":"1529:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6614,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:16"},"scope":6678,"src":"1469:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6676,"nodeType":"Block","src":"1843:767:16","statements":[{"id":6675,"nodeType":"UncheckedBlock","src":"1853:751:16","statements":[{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"mask","nameLocation":"2424:4:16","nodeType":"VariableDeclaration","scope":6675,"src":"2417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6659,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6664,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"2431:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"2576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6668,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"2580:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6671,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"2588:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:16","typeDescriptions":{}}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6658,"id":6674,"nodeType":"Return","src":"2560:33:16"}]}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"1705:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6677,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:16","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"n","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":6677,"src":"1801:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6653,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:16"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6677,"src":"1834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:16"},"scope":6678,"src":"1788:822:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6679,"src":"258:2354:16","usedErrors":[],"usedEvents":[]}],"src":"109:2504:16"},"id":16},"contracts/GameEscrow.sol":{"ast":{"absolutePath":"contracts/GameEscrow.sol","exportedSymbols":{"Context":[1589],"ERC165":[3136],"ERC721":[1319],"ERC721Utils":[1559],"GameEscrow":[7913],"IERC165":[3148],"IERC20":[362],"IERC721":[1436],"IERC721Errors":[237],"IERC721Metadata":[1482],"Math":[4769],"OrbitWinnerNFT":[8245],"Ownable":[147],"ReentrancyGuard":[1710],"SafeCast":[6534],"SignedMath":[6678],"Strings":[3112]},"id":7914,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6680,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7914,"sourceUnit":1711,"src":"58:59:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7914,"sourceUnit":148,"src":"118:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7914,"sourceUnit":363,"src":"171:56:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6684,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7914,"sourceUnit":3113,"src":"228:51:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/OrbitWinnerNFT.sol","file":"./OrbitWinnerNFT.sol","id":6685,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7914,"sourceUnit":8246,"src":"280:30:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6687,"name":"ReentrancyGuard","nameLocations":["755:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"755:15:17"},"id":6688,"nodeType":"InheritanceSpecifier","src":"755:15:17"},{"baseName":{"id":6689,"name":"Ownable","nameLocations":["772:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"772:7:17"},"id":6690,"nodeType":"InheritanceSpecifier","src":"772:7:17"}],"canonicalName":"GameEscrow","contractDependencies":[8245],"contractKind":"contract","documentation":{"id":6686,"nodeType":"StructuredDocumentation","src":"312:419:17","text":" @title GameEscrow\n @dev Escrow contract for 1v1 skill-based games with Yellow Network integration\n @notice This contract holds wagers and distributes winnings after game completion\n \n YELLOW NETWORK INTEGRATION:\n - Players deposit once into Yellow state channel\n - Game happens off-chain (instant, no gas)\n - Winner determined by referee agent\n - Settlement happens on-chain via this contract"},"fullyImplemented":true,"id":7913,"linearizedBaseContracts":[7913,147,1589,1710],"name":"GameEscrow","nameLocation":"741:10:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GameEscrow.Game","id":6713,"members":[{"constant":false,"id":6692,"mutability":"mutable","name":"player1","nameLocation":"875:7:17","nodeType":"VariableDeclaration","scope":6713,"src":"867:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6691,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6694,"mutability":"mutable","name":"player2","nameLocation":"900:7:17","nodeType":"VariableDeclaration","scope":6713,"src":"892:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6693,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6696,"mutability":"mutable","name":"wagerAmount","nameLocation":"925:11:17","nodeType":"VariableDeclaration","scope":6713,"src":"917:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6695,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"wagerToken","nameLocation":"954:10:17","nodeType":"VariableDeclaration","scope":6713,"src":"946:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6697,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6701,"mutability":"mutable","name":"gameMode","nameLocation":"1014:8:17","nodeType":"VariableDeclaration","scope":6713,"src":"1005:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"typeName":{"id":6700,"nodeType":"UserDefinedTypeName","pathNode":{"id":6699,"name":"GameMode","nameLocations":["1005:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"1005:8:17"},"referencedDeclaration":6717,"src":"1005:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"visibility":"internal"},{"constant":false,"id":6704,"mutability":"mutable","name":"status","nameLocation":"1043:6:17","nodeType":"VariableDeclaration","scope":6713,"src":"1032:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"typeName":{"id":6703,"nodeType":"UserDefinedTypeName","pathNode":{"id":6702,"name":"GameStatus","nameLocations":["1032:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6723,"src":"1032:10:17"},"referencedDeclaration":6723,"src":"1032:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"visibility":"internal"},{"constant":false,"id":6706,"mutability":"mutable","name":"winner","nameLocation":"1067:6:17","nodeType":"VariableDeclaration","scope":6713,"src":"1059:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6705,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6708,"mutability":"mutable","name":"createdAt","nameLocation":"1091:9:17","nodeType":"VariableDeclaration","scope":6713,"src":"1083:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6710,"mutability":"mutable","name":"completedAt","nameLocation":"1118:11:17","nodeType":"VariableDeclaration","scope":6713,"src":"1110:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"gameDataHash","nameLocation":"1147:12:17","nodeType":"VariableDeclaration","scope":6713,"src":"1139:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1139:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Game","nameLocation":"852:4:17","nodeType":"StructDefinition","scope":7913,"src":"845:362:17","visibility":"public"},{"canonicalName":"GameEscrow.GameMode","id":6717,"members":[{"id":6714,"name":"PUSHUP_BATTLE","nameLocation":"1241:13:17","nodeType":"EnumValue","src":"1241:13:17"},{"id":6715,"name":"ROCK_PAPER_SCISSORS","nameLocation":"1264:19:17","nodeType":"EnumValue","src":"1264:19:17"},{"id":6716,"name":"TABLE_TENNIS","nameLocation":"1293:12:17","nodeType":"EnumValue","src":"1293:12:17"}],"name":"GameMode","nameLocation":"1222:8:17","nodeType":"EnumDefinition","src":"1217:94:17"},{"canonicalName":"GameEscrow.GameStatus","id":6723,"members":[{"id":6718,"name":"WAITING","nameLocation":"1347:7:17","nodeType":"EnumValue","src":"1347:7:17"},{"id":6719,"name":"ACTIVE","nameLocation":"1393:6:17","nodeType":"EnumValue","src":"1393:6:17"},{"id":6720,"name":"COMPLETED","nameLocation":"1456:9:17","nodeType":"EnumValue","src":"1456:9:17"},{"id":6721,"name":"CANCELLED","nameLocation":"1512:9:17","nodeType":"EnumValue","src":"1512:9:17"},{"id":6722,"name":"DISPUTED","nameLocation":"1552:8:17","nodeType":"EnumValue","src":"1552:8:17"}],"name":"GameStatus","nameLocation":"1326:10:17","nodeType":"EnumDefinition","src":"1321:274:17"},{"constant":false,"functionSelector":"1bb412d6","id":6725,"mutability":"mutable","name":"gameIdCounter","nameLocation":"1643:13:17","nodeType":"VariableDeclaration","scope":7913,"src":"1628:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"117a5b90","id":6730,"mutability":"mutable","name":"games","nameLocation":"1740:5:17","nodeType":"VariableDeclaration","scope":7913,"src":"1708:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game)"},"typeName":{"id":6729,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1708:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6728,"nodeType":"UserDefinedTypeName","pathNode":{"id":6727,"name":"Game","nameLocations":["1727:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"1727:4:17"},"referencedDeclaration":6713,"src":"1727:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}}},"visibility":"public"},{"constant":false,"functionSelector":"0a5694c2","id":6735,"mutability":"mutable","name":"playerGames","nameLocation":"1845:11:17","nodeType":"VariableDeclaration","scope":7913,"src":"1808:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6734,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6731,"name":"address","nodeType":"ElementaryTypeName","src":"1816:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1808:29:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6733,"nodeType":"ArrayTypeName","src":"1827:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"77901b64","id":6739,"mutability":"mutable","name":"authorizedReferees","nameLocation":"1958:18:17","nodeType":"VariableDeclaration","scope":7913,"src":"1926:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6738,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6736,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1926:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6737,"name":"bool","nodeType":"ElementaryTypeName","src":"1945:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"22dcd13e","id":6742,"mutability":"mutable","name":"platformFeeBps","nameLocation":"2058:14:17","nodeType":"VariableDeclaration","scope":7913,"src":"2043:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"2043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323530","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:3:17","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"visibility":"public"},{"constant":false,"functionSelector":"fcf66664","id":6746,"mutability":"mutable","name":"accumulatedFees","nameLocation":"2157:15:17","nodeType":"VariableDeclaration","scope":7913,"src":"2122:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6745,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6743,"name":"address","nodeType":"ElementaryTypeName","src":"2130:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2122:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"73f4d7ea","id":6748,"mutability":"mutable","name":"yellowNetworkBridge","nameLocation":"2232:19:17","nodeType":"VariableDeclaration","scope":7913,"src":"2217:34:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6747,"name":"address","nodeType":"ElementaryTypeName","src":"2217:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"a4d290c2","id":6751,"mutability":"mutable","name":"winnerNFT","nameLocation":"2328:9:17","nodeType":"VariableDeclaration","scope":7913,"src":"2306:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"},"typeName":{"id":6750,"nodeType":"UserDefinedTypeName","pathNode":{"id":6749,"name":"OrbitWinnerNFT","nameLocations":["2306:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":8245,"src":"2306:14:17"},"referencedDeclaration":8245,"src":"2306:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}},"visibility":"public"},{"anonymous":false,"eventSelector":"abd75ec9f1a7c8f5cf37dbf68608fa6e61d2986cf77cf390a28eca7b1d4b4dca","id":6764,"name":"GameCreated","nameLocation":"2399:11:17","nodeType":"EventDefinition","parameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2436:6:17","nodeType":"VariableDeclaration","scope":6764,"src":"2420:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6755,"indexed":true,"mutability":"mutable","name":"player1","nameLocation":"2468:7:17","nodeType":"VariableDeclaration","scope":6764,"src":"2452:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6754,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6757,"indexed":false,"mutability":"mutable","name":"wagerAmount","nameLocation":"2493:11:17","nodeType":"VariableDeclaration","scope":6764,"src":"2485:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6759,"indexed":false,"mutability":"mutable","name":"wagerToken","nameLocation":"2522:10:17","nodeType":"VariableDeclaration","scope":6764,"src":"2514:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6758,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6762,"indexed":false,"mutability":"mutable","name":"gameMode","nameLocation":"2551:8:17","nodeType":"VariableDeclaration","scope":6764,"src":"2542:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"typeName":{"id":6761,"nodeType":"UserDefinedTypeName","pathNode":{"id":6760,"name":"GameMode","nameLocations":["2542:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"2542:8:17"},"referencedDeclaration":6717,"src":"2542:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"visibility":"internal"}],"src":"2410:155:17"},"src":"2393:173:17"},{"anonymous":false,"eventSelector":"45c4f9cbafe186141862608c493f28b823fde4c2142bedc3f5169961a73fdd22","id":6770,"name":"GameJoined","nameLocation":"2582:10:17","nodeType":"EventDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2618:6:17","nodeType":"VariableDeclaration","scope":6770,"src":"2602:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6768,"indexed":true,"mutability":"mutable","name":"player2","nameLocation":"2650:7:17","nodeType":"VariableDeclaration","scope":6770,"src":"2634:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6767,"name":"address","nodeType":"ElementaryTypeName","src":"2634:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2592:71:17"},"src":"2576:88:17"},{"anonymous":false,"eventSelector":"a3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c38","id":6780,"name":"GameCompleted","nameLocation":"2680:13:17","nodeType":"EventDefinition","parameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2719:6:17","nodeType":"VariableDeclaration","scope":6780,"src":"2703:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6774,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"2751:6:17","nodeType":"VariableDeclaration","scope":6780,"src":"2735:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6773,"name":"address","nodeType":"ElementaryTypeName","src":"2735:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6776,"indexed":false,"mutability":"mutable","name":"winnings","nameLocation":"2775:8:17","nodeType":"VariableDeclaration","scope":6780,"src":"2767:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6778,"indexed":false,"mutability":"mutable","name":"platformFee","nameLocation":"2801:11:17","nodeType":"VariableDeclaration","scope":6780,"src":"2793:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2793:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:125:17"},"src":"2674:145:17"},{"anonymous":false,"eventSelector":"58f64e02b3a6d2a3bd28b7700a0a0d6699545bcb55bf917ac0ff670f3a509efb","id":6786,"name":"GameCancelled","nameLocation":"2835:13:17","nodeType":"EventDefinition","parameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2874:6:17","nodeType":"VariableDeclaration","scope":6786,"src":"2858:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6784,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2906:6:17","nodeType":"VariableDeclaration","scope":6786,"src":"2890:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6783,"name":"address","nodeType":"ElementaryTypeName","src":"2890:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2848:70:17"},"src":"2829:90:17"},{"anonymous":false,"eventSelector":"8fd73c8c4472189916c71b5cf4047bc9088a7481f333c1063fa93e70f1a469f8","id":6792,"name":"GameDisputed","nameLocation":"2935:12:17","nodeType":"EventDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2973:6:17","nodeType":"VariableDeclaration","scope":6792,"src":"2957:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6790,"indexed":true,"mutability":"mutable","name":"disputedBy","nameLocation":"3005:10:17","nodeType":"VariableDeclaration","scope":6792,"src":"2989:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6789,"name":"address","nodeType":"ElementaryTypeName","src":"2989:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2947:74:17"},"src":"2929:93:17"},{"anonymous":false,"eventSelector":"981ac5cae2fb338fa3b83661b9db1adf2471e4dd1e089498a55476854339dd1b","id":6796,"name":"RefereeAuthorized","nameLocation":"3038:17:17","nodeType":"EventDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"indexed":true,"mutability":"mutable","name":"referee","nameLocation":"3072:7:17","nodeType":"VariableDeclaration","scope":6796,"src":"3056:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6793,"name":"address","nodeType":"ElementaryTypeName","src":"3056:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3055:25:17"},"src":"3032:49:17"},{"anonymous":false,"eventSelector":"2d9125815ff94ed1f67bcaed3480c73af82b355e90de77479081cd2ed35f9a1c","id":6800,"name":"RefereeRevoked","nameLocation":"3092:14:17","nodeType":"EventDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"indexed":true,"mutability":"mutable","name":"referee","nameLocation":"3123:7:17","nodeType":"VariableDeclaration","scope":6800,"src":"3107:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6797,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3106:25:17"},"src":"3086:46:17"},{"anonymous":false,"eventSelector":"6387e6721c9b8e49669c1d962e31fe0ea2c1467b3106425bc787d42d5208d6d7","id":6804,"name":"YellowBridgeUpdated","nameLocation":"3143:19:17","nodeType":"EventDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"indexed":true,"mutability":"mutable","name":"newBridge","nameLocation":"3179:9:17","nodeType":"VariableDeclaration","scope":6804,"src":"3163:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6801,"name":"address","nodeType":"ElementaryTypeName","src":"3163:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3162:27:17"},"src":"3137:53:17"},{"body":{"id":6815,"nodeType":"Block","src":"3271:93:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6807,"name":"authorizedReferees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"3289:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6810,"indexExpression":{"expression":{"id":6808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3308:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3308:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3289:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a65642072656665726565","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b8bc0d59cbbb93c8e661b85f564010c64a00909b0bb920ff71c1b4a5d156669","typeString":"literal_string \"Not authorized referee\""},"value":"Not authorized referee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b8bc0d59cbbb93c8e661b85f564010c64a00909b0bb920ff71c1b4a5d156669","typeString":"literal_string \"Not authorized referee\""}],"id":6806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3281:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6813,"nodeType":"ExpressionStatement","src":"3281:65:17"},{"id":6814,"nodeType":"PlaceholderStatement","src":"3356:1:17"}]},"id":6816,"name":"onlyReferee","nameLocation":"3257:11:17","nodeType":"ModifierDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[],"src":"3268:2:17"},"src":"3248:116:17","virtual":false,"visibility":"internal"},{"body":{"id":6828,"nodeType":"Block","src":"3410:82:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"3428:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6822,"name":"gameIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"3437:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3428:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520646f6573206e6f74206578697374","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3452:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""},"value":"Game does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""}],"id":6820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3420:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3420:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6826,"nodeType":"ExpressionStatement","src":"3420:54:17"},{"id":6827,"nodeType":"PlaceholderStatement","src":"3484:1:17"}]},"id":6829,"name":"gameExists","nameLocation":"3383:10:17","nodeType":"ModifierDefinition","parameters":{"id":6819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6818,"mutability":"mutable","name":"gameId","nameLocation":"3402:6:17","nodeType":"VariableDeclaration","scope":6829,"src":"3394:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6817,"name":"uint256","nodeType":"ElementaryTypeName","src":"3394:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3393:16:17"},"src":"3374:118:17","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"3542:179:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6834,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"3573:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":6836,"indexExpression":{"id":6835,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3579:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3573:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"id":6837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"3573:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3598:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3602:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3598:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3573:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6841,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"3625:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":6843,"indexExpression":{"id":6842,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3631:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3625:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"id":6844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3639:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"3625:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3650:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3654:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3650:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3625:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3573:87:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612067616d6520706c61796572","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1fa979a3a8c9da679b8276b9af154f0a7e9c6203028e092923fd6dd706f7844","typeString":"literal_string \"Not a game player\""},"value":"Not a game player"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1fa979a3a8c9da679b8276b9af154f0a7e9c6203028e092923fd6dd706f7844","typeString":"literal_string \"Not a game player\""}],"id":6833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3552:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:151:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6851,"nodeType":"ExpressionStatement","src":"3552:151:17"},{"id":6852,"nodeType":"PlaceholderStatement","src":"3713:1:17"}]},"id":6854,"name":"onlyGamePlayer","nameLocation":"3511:14:17","nodeType":"ModifierDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"gameId","nameLocation":"3534:6:17","nodeType":"VariableDeclaration","scope":6854,"src":"3526:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3526:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3525:16:17"},"src":"3502:219:17","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"3815:199:17","statements":[{"expression":{"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6861,"name":"authorizedReferees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"3881:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6864,"indexExpression":{"expression":{"id":6862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3900:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3904:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3900:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3881:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3881:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6867,"nodeType":"ExpressionStatement","src":"3881:37:17"},{"expression":{"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6868,"name":"winnerNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"3975:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3987:18:17","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_OrbitWinnerNFT_$8245_$","typeString":"function () returns (contract OrbitWinnerNFT)"},"typeName":{"id":6870,"nodeType":"UserDefinedTypeName","pathNode":{"id":6869,"name":"OrbitWinnerNFT","nameLocations":["3991:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":8245,"src":"3991:14:17"},"referencedDeclaration":8245,"src":"3991:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3987:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}},"src":"3975:32:17","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}},"id":6874,"nodeType":"ExpressionStatement","src":"3975:32:17"}]},"id":6876,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6857,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3803:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3807:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3803:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6859,"kind":"baseConstructorSpecifier","modifierName":{"id":6856,"name":"Ownable","nameLocations":["3795:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3795:7:17"},"nodeType":"ModifierInvocation","src":"3795:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[],"src":"3792:2:17"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[],"src":"3815:0:17"},"scope":7913,"src":"3781:233:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6989,"nodeType":"Block","src":"4452:1036:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"4470:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4484:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4470:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5761676572206d757374206265203e2030","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4487:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6437d416e2f3e078c7fd6830136404c57d60c060f41e69dc32d8d4358dc73ced","typeString":"literal_string \"Wager must be > 0\""},"value":"Wager must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6437d416e2f3e078c7fd6830136404c57d60c060f41e69dc32d8d4358dc73ced","typeString":"literal_string \"Wager must be > 0\""}],"id":6891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4462:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4462:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6897,"nodeType":"ExpressionStatement","src":"4462:45:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6898,"name":"wagerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"4556:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4578:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6899,"name":"address","nodeType":"ElementaryTypeName","src":"4570:7:17","typeDescriptions":{}}},"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4556:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6934,"nodeType":"Block","src":"4670:169:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4692:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:5:17","memberName":"value","nodeType":"MemberAccess","src":"4692:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4692:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446f206e6f742073656e6420455448207769746820746f6b656e207761676572","id":6918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4708:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b2ff51c7804896c0c0008becd8ccb7e039583a55dd6fe998fa79742aa226a4f","typeString":"literal_string \"Do not send ETH with token wager\""},"value":"Do not send ETH with token wager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b2ff51c7804896c0c0008becd8ccb7e039583a55dd6fe998fa79742aa226a4f","typeString":"literal_string \"Do not send ETH with token wager\""}],"id":6913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4684:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4684:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"ExpressionStatement","src":"4684:59:17"},{"expression":{"arguments":[{"expression":{"id":6925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4789:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4793:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4789:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6929,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4809:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_GameEscrow_$7913","typeString":"contract GameEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameEscrow_$7913","typeString":"contract GameEscrow"}],"id":6928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4801:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6927,"name":"address","nodeType":"ElementaryTypeName","src":"4801:7:17","typeDescriptions":{}}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6931,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"4816:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6922,"name":"wagerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"4764:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6921,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4757:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4776:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":361,"src":"4757:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6933,"nodeType":"ExpressionStatement","src":"4757:71:17"}]},"id":6935,"nodeType":"IfStatement","src":"4552:287:17","trueBody":{"id":6912,"nodeType":"Block","src":"4582:82:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4604:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4608:5:17","memberName":"value","nodeType":"MemberAccess","src":"4604:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6907,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"4617:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4604:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4630:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":6904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4596:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4596:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6911,"nodeType":"ExpressionStatement","src":"4596:57:17"}]}},{"assignments":[6937],"declarations":[{"constant":false,"id":6937,"mutability":"mutable","name":"gameId","nameLocation":"4888:6:17","nodeType":"VariableDeclaration","scope":6989,"src":"4880:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4897:15:17","subExpression":{"id":6938,"name":"gameIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"4897:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4880:32:17"},{"expression":{"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6941,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"4922:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":6943,"indexExpression":{"id":6942,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"4928:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4922:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6945,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4966:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4970:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4966:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4999:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6947,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:17","typeDescriptions":{}}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6951,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"5036:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6952,"name":"wagerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"5073:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6953,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"5107:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},{"expression":{"id":6954,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"5137:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5148:7:17","memberName":"WAITING","nodeType":"MemberAccess","referencedDeclaration":6718,"src":"5137:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},{"arguments":[{"hexValue":"30","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5185:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5177:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6956,"name":"address","nodeType":"ElementaryTypeName","src":"5177:7:17","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5177:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6960,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5212:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5218:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"5212:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5254:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5291:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5283:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5283:7:17","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6944,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"4938:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$6713_storage_ptr_$","typeString":"type(struct GameEscrow.Game storage pointer)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4957:7:17","4990:7:17","5023:11:17","5061:10:17","5097:8:17","5129:6:17","5169:6:17","5201:9:17","5241:11:17","5269:12:17"],"names":["player1","player2","wagerAmount","wagerToken","gameMode","status","winner","createdAt","completedAt","gameDataHash"],"nodeType":"FunctionCall","src":"4938:366:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_memory_ptr","typeString":"struct GameEscrow.Game memory"}},"src":"4922:382:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"id":6969,"nodeType":"ExpressionStatement","src":"4922:382:17"},{"expression":{"arguments":[{"id":6975,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"5352:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6970,"name":"playerGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"5323:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6973,"indexExpression":{"expression":{"id":6971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5335:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5339:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5335:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5323:23:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5347:4:17","memberName":"push","nodeType":"MemberAccess","src":"5323:28:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6977,"nodeType":"ExpressionStatement","src":"5323:36:17"},{"eventCall":{"arguments":[{"id":6979,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"5395:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5403:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5407:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5403:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6982,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"5415:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6983,"name":"wagerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"5428:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6984,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"5440:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}],"id":6978,"name":"GameCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"5383:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_enum$_GameMode_$6717_$returns$__$","typeString":"function (uint256,address,uint256,address,enum GameEscrow.GameMode)"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5383:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"EmitStatement","src":"5378:71:17"},{"expression":{"id":6987,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"5475:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6890,"id":6988,"nodeType":"Return","src":"5468:13:17"}]},"documentation":{"id":6877,"nodeType":"StructuredDocumentation","src":"4077:212:17","text":" @notice Create a new game with a wager\n @param wagerAmount Amount to wager\n @param wagerToken Token address (address(0) for native token)\n @param gameMode Type of game to play"},"functionSelector":"c92398fb","id":6990,"implemented":true,"kind":"function","modifiers":[{"id":6887,"kind":"modifierInvocation","modifierName":{"id":6886,"name":"nonReentrant","nameLocations":["4421:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"4421:12:17"},"nodeType":"ModifierInvocation","src":"4421:12:17"}],"name":"createGame","nameLocation":"4303:10:17","nodeType":"FunctionDefinition","parameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"wagerAmount","nameLocation":"4331:11:17","nodeType":"VariableDeclaration","scope":6990,"src":"4323:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6878,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"wagerToken","nameLocation":"4360:10:17","nodeType":"VariableDeclaration","scope":6990,"src":"4352:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6880,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6884,"mutability":"mutable","name":"gameMode","nameLocation":"4389:8:17","nodeType":"VariableDeclaration","scope":6990,"src":"4380:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"typeName":{"id":6883,"nodeType":"UserDefinedTypeName","pathNode":{"id":6882,"name":"GameMode","nameLocations":["4380:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"4380:8:17"},"referencedDeclaration":6717,"src":"4380:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"visibility":"internal"}],"src":"4313:90:17"},"returnParameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6990,"src":"4443:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"4443:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4442:9:17"},"scope":7913,"src":"4294:1194:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7107,"nodeType":"Block","src":"5678:844:17","statements":[{"assignments":[7003],"declarations":[{"constant":false,"id":7003,"mutability":"mutable","name":"game","nameLocation":"5701:4:17","nodeType":"VariableDeclaration","scope":7107,"src":"5688:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7002,"nodeType":"UserDefinedTypeName","pathNode":{"id":7001,"name":"Game","nameLocations":["5688:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"5688:4:17"},"referencedDeclaration":6713,"src":"5688:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7007,"initialValue":{"baseExpression":{"id":7004,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"5708:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7006,"indexExpression":{"id":7005,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"5714:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5708:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5688:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7009,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5748:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5753:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"5748:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7011,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"5763:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5774:7:17","memberName":"WAITING","nodeType":"MemberAccess","referencedDeclaration":6718,"src":"5763:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"5748:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420617661696c61626c65","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5783:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_de46b4ec21b842f564d0a892d46d1e3c3e30cd6495cd3fc2c0a595d4074fcafc","typeString":"literal_string \"Game not available\""},"value":"Game not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de46b4ec21b842f564d0a892d46d1e3c3e30cd6495cd3fc2c0a595d4074fcafc","typeString":"literal_string \"Game not available\""}],"id":7008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5740:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5740:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7016,"nodeType":"ExpressionStatement","src":"5740:64:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7018,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5822:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5827:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"5822:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5838:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7020,"name":"address","nodeType":"ElementaryTypeName","src":"5838:7:17","typeDescriptions":{}}},"id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5838:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5822:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c72656164792066756c6c","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5850:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_464a47b76535cc828be702d2c504b89c0aa904b4f413244a6f64f2863f737d5a","typeString":"literal_string \"Game already full\""},"value":"Game already full"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_464a47b76535cc828be702d2c504b89c0aa904b4f413244a6f64f2863f737d5a","typeString":"literal_string \"Game already full\""}],"id":7017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5814:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5814:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7027,"nodeType":"ExpressionStatement","src":"5814:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5888:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5892:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5888:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7031,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5902:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5907:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"5902:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5888:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420706c617920616761696e737420796f757273656c66","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5916:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71d5e8a4712c2db0fb9e7ec2c079ad0ca745b66a7f5adabcb028d8d0f75e652b","typeString":"literal_string \"Cannot play against yourself\""},"value":"Cannot play against yourself"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71d5e8a4712c2db0fb9e7ec2c079ad0ca745b66a7f5adabcb028d8d0f75e652b","typeString":"literal_string \"Cannot play against yourself\""}],"id":7028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5880:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5880:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7036,"nodeType":"ExpressionStatement","src":"5880:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7037,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5996:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"5996:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6023:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6015:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7039,"name":"address","nodeType":"ElementaryTypeName","src":"6015:7:17","typeDescriptions":{}}},"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5996:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7077,"nodeType":"Block","src":"6120:179:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6142:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6146:5:17","memberName":"value","nodeType":"MemberAccess","src":"6142:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6155:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6142:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446f206e6f742073656e6420455448207769746820746f6b656e207761676572","id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b2ff51c7804896c0c0008becd8ccb7e039583a55dd6fe998fa79742aa226a4f","typeString":"literal_string \"Do not send ETH with token wager\""},"value":"Do not send ETH with token wager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b2ff51c7804896c0c0008becd8ccb7e039583a55dd6fe998fa79742aa226a4f","typeString":"literal_string \"Do not send ETH with token wager\""}],"id":7054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6134:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6134:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7061,"nodeType":"ExpressionStatement","src":"6134:59:17"},{"expression":{"arguments":[{"expression":{"id":7067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6244:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6248:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6244:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7071,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6264:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_GameEscrow_$7913","typeString":"contract GameEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameEscrow_$7913","typeString":"contract GameEscrow"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6256:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7069,"name":"address","nodeType":"ElementaryTypeName","src":"6256:7:17","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7073,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"6271:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6276:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"6271:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7063,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"6214:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6219:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"6214:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7062,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6207:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6207:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6231:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":361,"src":"6207:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6207:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7076,"nodeType":"ExpressionStatement","src":"6207:81:17"}]},"id":7078,"nodeType":"IfStatement","src":"5992:307:17","trueBody":{"id":7053,"nodeType":"Block","src":"6027:87:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6049:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6053:5:17","memberName":"value","nodeType":"MemberAccess","src":"6049:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7047,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"6062:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6067:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"6062:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6049:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6080:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":7044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6041:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6041:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"ExpressionStatement","src":"6041:62:17"}]}},{"expression":{"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7079,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"6340:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6345:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"6340:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7082,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6355:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6359:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6355:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6340:25:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7085,"nodeType":"ExpressionStatement","src":"6340:25:17"},{"expression":{"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7086,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"6375:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6380:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"6375:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7089,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"6389:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6400:6:17","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6719,"src":"6389:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"6375:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"id":7092,"nodeType":"ExpressionStatement","src":"6375:31:17"},{"expression":{"arguments":[{"id":7098,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"6454:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7093,"name":"playerGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"6425:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7096,"indexExpression":{"expression":{"id":7094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6437:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6441:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6437:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6425:23:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6449:4:17","memberName":"push","nodeType":"MemberAccess","src":"6425:28:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6425:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7100,"nodeType":"ExpressionStatement","src":"6425:36:17"},{"eventCall":{"arguments":[{"id":7102,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"6496:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6504:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6508:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6504:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7101,"name":"GameJoined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"6485:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7106,"nodeType":"EmitStatement","src":"6480:35:17"}]},"documentation":{"id":6991,"nodeType":"StructuredDocumentation","src":"5498:92:17","text":" @notice Join an existing game\n @param gameId ID of the game to join"},"functionSelector":"efaa55a0","id":7108,"implemented":true,"kind":"function","modifiers":[{"id":6996,"kind":"modifierInvocation","modifierName":{"id":6995,"name":"nonReentrant","nameLocations":["5646:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"5646:12:17"},"nodeType":"ModifierInvocation","src":"5646:12:17"},{"arguments":[{"id":6998,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"5670:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6999,"kind":"modifierInvocation","modifierName":{"id":6997,"name":"gameExists","nameLocations":["5659:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"5659:10:17"},"nodeType":"ModifierInvocation","src":"5659:18:17"}],"name":"joinGame","nameLocation":"5604:8:17","nodeType":"FunctionDefinition","parameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"gameId","nameLocation":"5621:6:17","nodeType":"VariableDeclaration","scope":7108,"src":"5613:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"5613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5612:16:17"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[],"src":"5678:0:17"},"scope":7913,"src":"5595:927:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7285,"nodeType":"Block","src":"6932:1520:17","statements":[{"assignments":[7127],"declarations":[{"constant":false,"id":7127,"mutability":"mutable","name":"game","nameLocation":"6955:4:17","nodeType":"VariableDeclaration","scope":7285,"src":"6942:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7126,"nodeType":"UserDefinedTypeName","pathNode":{"id":7125,"name":"Game","nameLocations":["6942:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"6942:4:17"},"referencedDeclaration":6713,"src":"6942:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7131,"initialValue":{"baseExpression":{"id":7128,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"6962:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7130,"indexExpression":{"id":7129,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"6968:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6962:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6942:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7133,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7002:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7007:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"7002:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7135,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"7017:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7028:6:17","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6719,"src":"7017:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"7002:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420616374697665","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7036:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_34f7540208b4160001a9a6993aa09dd54a969315a4e067748a84f249df97ebe3","typeString":"literal_string \"Game not active\""},"value":"Game not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34f7540208b4160001a9a6993aa09dd54a969315a4e067748a84f249df97ebe3","typeString":"literal_string \"Game not active\""}],"id":7132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6994:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6994:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"ExpressionStatement","src":"6994:60:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7142,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"7085:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7143,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7095:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7100:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"7095:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7085:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"7111:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7147,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7121:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7126:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"7121:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7111:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7085:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e6572206d757374206265206120706c61796572","id":7151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c565859620b99a03e3631645acf244ef203d7158a84798ae9f0c4a106f8c3c","typeString":"literal_string \"Winner must be a player\""},"value":"Winner must be a player"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c565859620b99a03e3631645acf244ef203d7158a84798ae9f0c4a106f8c3c","typeString":"literal_string \"Winner must be a player\""}],"id":7141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7064:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:118:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7153,"nodeType":"ExpressionStatement","src":"7064:118:17"},{"expression":{"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7154,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7230:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7235:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"7230:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7157,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"7244:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7255:9:17","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":6720,"src":"7244:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"7230:34:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"id":7160,"nodeType":"ExpressionStatement","src":"7230:34:17"},{"expression":{"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7161,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7274:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7279:6:17","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":6706,"src":"7274:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7164,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"7288:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7274:20:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7166,"nodeType":"ExpressionStatement","src":"7274:20:17"},{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7167,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7304:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7309:11:17","memberName":"completedAt","nodeType":"MemberAccess","referencedDeclaration":6710,"src":"7304:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7170,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7323:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7329:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"7323:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7304:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7173,"nodeType":"ExpressionStatement","src":"7304:34:17"},{"expression":{"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7174,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7348:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7353:12:17","memberName":"gameDataHash","nodeType":"MemberAccess","referencedDeclaration":6712,"src":"7348:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7177,"name":"gameDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"7368:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7348:32:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7179,"nodeType":"ExpressionStatement","src":"7348:32:17"},{"assignments":[7181],"declarations":[{"constant":false,"id":7181,"mutability":"mutable","name":"totalPot","nameLocation":"7446:8:17","nodeType":"VariableDeclaration","scope":7285,"src":"7438:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7438:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7182,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7457:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7462:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"7457:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7476:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7457:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7438:39:17"},{"assignments":[7188],"declarations":[{"constant":false,"id":7188,"mutability":"mutable","name":"platformFee","nameLocation":"7495:11:17","nodeType":"VariableDeclaration","scope":7285,"src":"7487:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7187,"name":"uint256","nodeType":"ElementaryTypeName","src":"7487:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7195,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"7510:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7190,"name":"platformFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"7521:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7510:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7509:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7539:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7509:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7487:57:17"},{"assignments":[7197],"declarations":[{"constant":false,"id":7197,"mutability":"mutable","name":"winnings","nameLocation":"7562:8:17","nodeType":"VariableDeclaration","scope":7285,"src":"7554:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"7554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7198,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"7573:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7199,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"7584:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7573:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7554:41:17"},{"expression":{"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7202,"name":"accumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"7649:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7205,"indexExpression":{"expression":{"id":7203,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7665:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7670:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"7665:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7649:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7206,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"7685:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7208,"nodeType":"ExpressionStatement","src":"7649:47:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7209,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7758:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7763:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"7758:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7785:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7777:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7211,"name":"address","nodeType":"ElementaryTypeName","src":"7777:7:17","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7777:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7758:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7240,"nodeType":"Block","src":"7924:75:17","statements":[{"expression":{"arguments":[{"id":7236,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"7971:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7237,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"7979:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7232,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7945:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7950:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"7945:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7231,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7938:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7962:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"7938:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7239,"nodeType":"ExpressionStatement","src":"7938:50:17"}]},"id":7241,"nodeType":"IfStatement","src":"7754:245:17","trueBody":{"id":7230,"nodeType":"Block","src":"7789:129:17","statements":[{"assignments":[7217,null],"declarations":[{"constant":false,"id":7217,"mutability":"mutable","name":"success","nameLocation":"7809:7:17","nodeType":"VariableDeclaration","scope":7230,"src":"7804:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7216,"name":"bool","nodeType":"ElementaryTypeName","src":"7804:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7224,"initialValue":{"arguments":[{"hexValue":"","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7851:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7218,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"7822:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7829:4:17","memberName":"call","nodeType":"MemberAccess","src":"7822:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7220,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"7841:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7822:28:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7822:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7803:51:17"},{"expression":{"arguments":[{"id":7226,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"7876:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7885:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":7225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7868:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7868:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7229,"nodeType":"ExpressionStatement","src":"7868:39:17"}]}},{"assignments":[7243],"declarations":[{"constant":false,"id":7243,"mutability":"mutable","name":"gameModeStr","nameLocation":"8058:11:17","nodeType":"VariableDeclaration","scope":7285,"src":"8044:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7242,"name":"string","nodeType":"ElementaryTypeName","src":"8044:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7248,"initialValue":{"arguments":[{"expression":{"id":7245,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8090:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8095:8:17","memberName":"gameMode","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"8090:13:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}],"id":7244,"name":"_gameModeToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"8072:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_GameMode_$6717_$returns$_t_string_memory_ptr_$","typeString":"function (enum GameEscrow.GameMode) pure returns (string memory)"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8072:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8044:60:17"},{"expression":{"arguments":[{"id":7252,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"8151:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"8171:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7254,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8181:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8186:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"8181:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8171:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":7259,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8211:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8216:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"8211:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8171:52:17","trueExpression":{"expression":{"id":7257,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8196:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8201:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"8196:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7262,"name":"gameModeStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"8237:11:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7263,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"8262:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8267:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"8262:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"hexValue":"6f726269742d77696e6e65722d","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8316:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5379a806de159ce1e3750fabd455e840269e6e25ee5fa9040f9cc065da9772a9","typeString":"literal_string \"orbit-winner-\""},"value":"orbit-winner-"},{"arguments":[{"id":7272,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"8350:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7270,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"8333:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3112_$","typeString":"type(library Strings)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8341:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"8333:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8333:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5379a806de159ce1e3750fabd455e840269e6e25ee5fa9040f9cc065da9772a9","typeString":"literal_string \"orbit-winner-\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7267,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8299:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8303:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"8299:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8299:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8292:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7265,"name":"string","nodeType":"ElementaryTypeName","src":"8292:6:17","typeDescriptions":{}}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8292:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7249,"name":"winnerNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"8114:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_OrbitWinnerNFT_$8245","typeString":"contract OrbitWinnerNFT"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8124:13:17","memberName":"mintWinnerNFT","nodeType":"MemberAccess","referencedDeclaration":8026,"src":"8114:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,string memory,uint256,string memory) external returns (uint256)"}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8114:255:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7277,"nodeType":"ExpressionStatement","src":"8114:255:17"},{"eventCall":{"arguments":[{"id":7279,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"8407:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7280,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"8415:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7281,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"8423:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7282,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"8433:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7278,"name":"GameCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"8393:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8393:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"EmitStatement","src":"8388:57:17"}]},"documentation":{"id":7109,"nodeType":"StructuredDocumentation","src":"6532:236:17","text":" @notice Complete a game and declare winner (called by authorized referee)\n @param gameId ID of the game\n @param winner Address of the winner\n @param gameDataHash Hash of game results for verification"},"functionSelector":"7cd7c641","id":7286,"implemented":true,"kind":"function","modifiers":[{"id":7118,"kind":"modifierInvocation","modifierName":{"id":7117,"name":"onlyReferee","nameLocations":["6888:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":6816,"src":"6888:11:17"},"nodeType":"ModifierInvocation","src":"6888:11:17"},{"arguments":[{"id":7120,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"6911:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7121,"kind":"modifierInvocation","modifierName":{"id":7119,"name":"gameExists","nameLocations":["6900:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"6900:10:17"},"nodeType":"ModifierInvocation","src":"6900:18:17"},{"id":7123,"kind":"modifierInvocation","modifierName":{"id":7122,"name":"nonReentrant","nameLocations":["6919:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"6919:12:17"},"nodeType":"ModifierInvocation","src":"6919:12:17"}],"name":"completeGame","nameLocation":"6782:12:17","nodeType":"FunctionDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"gameId","nameLocation":"6812:6:17","nodeType":"VariableDeclaration","scope":7286,"src":"6804:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"6804:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7113,"mutability":"mutable","name":"winner","nameLocation":"6836:6:17","nodeType":"VariableDeclaration","scope":7286,"src":"6828:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7112,"name":"address","nodeType":"ElementaryTypeName","src":"6828:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"gameDataHash","nameLocation":"6860:12:17","nodeType":"VariableDeclaration","scope":7286,"src":"6852:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6852:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6794:84:17"},"returnParameters":{"id":7124,"nodeType":"ParameterList","parameters":[],"src":"6932:0:17"},"scope":7913,"src":"6773:1679:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7377,"nodeType":"Block","src":"8733:638:17","statements":[{"assignments":[7302],"declarations":[{"constant":false,"id":7302,"mutability":"mutable","name":"game","nameLocation":"8756:4:17","nodeType":"VariableDeclaration","scope":7377,"src":"8743:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7301,"nodeType":"UserDefinedTypeName","pathNode":{"id":7300,"name":"Game","nameLocations":["8743:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"8743:4:17"},"referencedDeclaration":6713,"src":"8743:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7306,"initialValue":{"baseExpression":{"id":7303,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"8763:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7305,"indexExpression":{"id":7304,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"8769:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8763:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8743:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7308,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"8803:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8808:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"8803:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7310,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"8818:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8829:7:17","memberName":"WAITING","nodeType":"MemberAccess","referencedDeclaration":6718,"src":"8818:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"8803:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742063616e63656c206163746976652067616d65","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8838:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf4485d7c97a08f4aa6873c94a46abceab9aa01da495a0bcb130b8cfd834589a","typeString":"literal_string \"Cannot cancel active game\""},"value":"Cannot cancel active game"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf4485d7c97a08f4aa6873c94a46abceab9aa01da495a0bcb130b8cfd834589a","typeString":"literal_string \"Cannot cancel active game\""}],"id":7307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8795:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8795:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7315,"nodeType":"ExpressionStatement","src":"8795:71:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7317,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"8884:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8889:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"8884:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8908:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8900:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7319,"name":"address","nodeType":"ElementaryTypeName","src":"8900:7:17","typeDescriptions":{}}},"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8900:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8884:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c61796572203220616c7265616479206a6f696e6564","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8912:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1fccebacb069ef4342ad04ba4147e001724a24ea2efd9c5e30432409b5be996","typeString":"literal_string \"Player 2 already joined\""},"value":"Player 2 already joined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1fccebacb069ef4342ad04ba4147e001724a24ea2efd9c5e30432409b5be996","typeString":"literal_string \"Player 2 already joined\""}],"id":7316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8876:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8876:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7326,"nodeType":"ExpressionStatement","src":"8876:62:17"},{"expression":{"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7327,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"8957:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8962:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"8957:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7330,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"8971:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8982:9:17","memberName":"CANCELLED","nodeType":"MemberAccess","referencedDeclaration":6721,"src":"8971:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"8957:34:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"id":7333,"nodeType":"ExpressionStatement","src":"8957:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7334,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9041:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9046:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"9041:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9060:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7336,"name":"address","nodeType":"ElementaryTypeName","src":"9060:7:17","typeDescriptions":{}}},"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9060:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9041:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7369,"nodeType":"Block","src":"9219:89:17","statements":[{"expression":{"arguments":[{"expression":{"id":7363,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9266:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9271:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"9266:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7365,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9280:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9285:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"9280:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7359,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9240:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9245:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"9240:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7358,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"9233:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9233:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9257:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"9233:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9233:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7368,"nodeType":"ExpressionStatement","src":"9233:64:17"}]},"id":7370,"nodeType":"IfStatement","src":"9037:271:17","trueBody":{"id":7357,"nodeType":"Block","src":"9072:141:17","statements":[{"assignments":[7342,null],"declarations":[{"constant":false,"id":7342,"mutability":"mutable","name":"success","nameLocation":"9092:7:17","nodeType":"VariableDeclaration","scope":7357,"src":"9087:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7341,"name":"bool","nodeType":"ElementaryTypeName","src":"9087:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7351,"initialValue":{"arguments":[{"hexValue":"","id":7349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9148:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7343,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9105:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9110:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"9105:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9118:4:17","memberName":"call","nodeType":"MemberAccess","src":"9105:17:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7346,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"9130:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9135:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"9130:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9105:42:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9105:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9086:65:17"},{"expression":{"arguments":[{"id":7353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"9173:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820726566756e64206661696c6564","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9182:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""},"value":"ETH refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""}],"id":7352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9165:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9165:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7356,"nodeType":"ExpressionStatement","src":"9165:37:17"}]}},{"eventCall":{"arguments":[{"id":7372,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"9345:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9353:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9357:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9353:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7371,"name":"GameCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"9331:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"EmitStatement","src":"9326:38:17"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"8462:125:17","text":" @notice Cancel a game before it starts (only if no player 2)\n @param gameId ID of the game to cancel"},"functionSelector":"69958ab9","id":7378,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7292,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"8666:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7293,"kind":"modifierInvocation","modifierName":{"id":7291,"name":"gameExists","nameLocations":["8655:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"8655:10:17"},"nodeType":"ModifierInvocation","src":"8655:18:17"},{"arguments":[{"id":7295,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"8698:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7296,"kind":"modifierInvocation","modifierName":{"id":7294,"name":"onlyGamePlayer","nameLocations":["8683:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":6854,"src":"8683:14:17"},"nodeType":"ModifierInvocation","src":"8683:22:17"},{"id":7298,"kind":"modifierInvocation","modifierName":{"id":7297,"name":"nonReentrant","nameLocations":["8715:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"8715:12:17"},"nodeType":"ModifierInvocation","src":"8715:12:17"}],"name":"cancelGame","nameLocation":"8601:10:17","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"gameId","nameLocation":"8620:6:17","nodeType":"VariableDeclaration","scope":7378,"src":"8612:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint256","nodeType":"ElementaryTypeName","src":"8612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8611:16:17"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[],"src":"8733:0:17"},"scope":7913,"src":"8592:779:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7425,"nodeType":"Block","src":"9601:319:17","statements":[{"assignments":[7392],"declarations":[{"constant":false,"id":7392,"mutability":"mutable","name":"game","nameLocation":"9624:4:17","nodeType":"VariableDeclaration","scope":7425,"src":"9611:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7391,"nodeType":"UserDefinedTypeName","pathNode":{"id":7390,"name":"Game","nameLocations":["9611:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"9611:4:17"},"referencedDeclaration":6713,"src":"9611:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7396,"initialValue":{"baseExpression":{"id":7393,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"9631:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7395,"indexExpression":{"id":7394,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"9637:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9631:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9611:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7398,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"9684:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9689:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"9684:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7400,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"9699:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9710:6:17","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6719,"src":"9699:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"9684:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7403,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"9720:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9725:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"9720:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7405,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"9735:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9746:9:17","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":6720,"src":"9735:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"9720:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9684:71:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206469737075746520746869732067616d65","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9769:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c2fdc9cfe45205f358e815e8a23b3b727134d531c8004cad3320f870cbff921","typeString":"literal_string \"Cannot dispute this game\""},"value":"Cannot dispute this game"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c2fdc9cfe45205f358e815e8a23b3b727134d531c8004cad3320f870cbff921","typeString":"literal_string \"Cannot dispute this game\""}],"id":7397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9663:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:142:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7411,"nodeType":"ExpressionStatement","src":"9663:142:17"},{"expression":{"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7412,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"9824:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9829:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"9824:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7415,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"9838:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9849:8:17","memberName":"DISPUTED","nodeType":"MemberAccess","referencedDeclaration":6722,"src":"9838:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"9824:33:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"id":7418,"nodeType":"ExpressionStatement","src":"9824:33:17"},{"eventCall":{"arguments":[{"id":7420,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"9894:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9902:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9906:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9902:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7419,"name":"GameDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"9881:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9881:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"EmitStatement","src":"9876:37:17"}]},"documentation":{"id":7379,"nodeType":"StructuredDocumentation","src":"9381:95:17","text":" @notice Dispute a game result\n @param gameId ID of the game to dispute"},"functionSelector":"87af2278","id":7426,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7384,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"9556:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7385,"kind":"modifierInvocation","modifierName":{"id":7383,"name":"gameExists","nameLocations":["9545:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"9545:10:17"},"nodeType":"ModifierInvocation","src":"9545:18:17"},{"arguments":[{"id":7387,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"9588:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7388,"kind":"modifierInvocation","modifierName":{"id":7386,"name":"onlyGamePlayer","nameLocations":["9573:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":6854,"src":"9573:14:17"},"nodeType":"ModifierInvocation","src":"9573:22:17"}],"name":"disputeGame","nameLocation":"9490:11:17","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"gameId","nameLocation":"9510:6:17","nodeType":"VariableDeclaration","scope":7426,"src":"9502:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"9502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9501:16:17"},"returnParameters":{"id":7389,"nodeType":"ParameterList","parameters":[],"src":"9601:0:17"},"scope":7913,"src":"9481:439:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7631,"nodeType":"Block","src":"10242:1630:17","statements":[{"assignments":[7443],"declarations":[{"constant":false,"id":7443,"mutability":"mutable","name":"game","nameLocation":"10265:4:17","nodeType":"VariableDeclaration","scope":7631,"src":"10252:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7442,"nodeType":"UserDefinedTypeName","pathNode":{"id":7441,"name":"Game","nameLocations":["10252:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"10252:4:17"},"referencedDeclaration":6713,"src":"10252:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7447,"initialValue":{"baseExpression":{"id":7444,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"10272:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7446,"indexExpression":{"id":7445,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"10278:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10272:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10252:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7449,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10312:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10317:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"10312:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7451,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"10327:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10338:8:17","memberName":"DISPUTED","nodeType":"MemberAccess","referencedDeclaration":6722,"src":"10327:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"10312:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f74206469737075746564","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10348:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e46180b4bc8478168a9e59cec503f75bede4514b74a8edabd08e6be73a5032","typeString":"literal_string \"Game not disputed\""},"value":"Game not disputed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e46180b4bc8478168a9e59cec503f75bede4514b74a8edabd08e6be73a5032","typeString":"literal_string \"Game not disputed\""}],"id":7448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10304:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10304:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"10304:64:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7458,"name":"resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"10386:10:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32","id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10386:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736f6c7574696f6e","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10403:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_573d6e534cee33721f8bcec90660a9dbc9016589ba90f23431ced91513145b21","typeString":"literal_string \"Invalid resolution\""},"value":"Invalid resolution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_573d6e534cee33721f8bcec90660a9dbc9016589ba90f23431ced91513145b21","typeString":"literal_string \"Invalid resolution\""}],"id":7457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10378:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10378:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7463,"nodeType":"ExpressionStatement","src":"10378:46:17"},{"expression":{"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7464,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10443:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10448:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"10443:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7467,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"10457:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10468:9:17","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":6720,"src":"10457:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"10443:34:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"id":7470,"nodeType":"ExpressionStatement","src":"10443:34:17"},{"expression":{"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7471,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10487:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10492:11:17","memberName":"completedAt","nodeType":"MemberAccess","referencedDeclaration":6710,"src":"10487:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7474,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10506:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10512:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"10506:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10487:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7477,"nodeType":"ExpressionStatement","src":"10487:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7478,"name":"resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"10544:10:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10558:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10544:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7629,"nodeType":"Block","src":"11073:793:17","statements":[{"assignments":[7544],"declarations":[{"constant":false,"id":7544,"mutability":"mutable","name":"winner","nameLocation":"11126:6:17","nodeType":"VariableDeclaration","scope":7629,"src":"11118:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7543,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7553,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7545,"name":"resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"11135:10:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11149:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11135:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":7550,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11168:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11173:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"11168:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11135:45:17","trueExpression":{"expression":{"id":7548,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11153:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11158:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"11153:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11118:62:17"},{"expression":{"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7554,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11194:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11199:6:17","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":6706,"src":"11194:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7557,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11208:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11194:20:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7559,"nodeType":"ExpressionStatement","src":"11194:20:17"},{"assignments":[7561],"declarations":[{"constant":false,"id":7561,"mutability":"mutable","name":"totalPot","nameLocation":"11249:8:17","nodeType":"VariableDeclaration","scope":7629,"src":"11241:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"11241:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7566,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7562,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11260:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11265:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"11260:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11260:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11241:39:17"},{"assignments":[7568],"declarations":[{"constant":false,"id":7568,"mutability":"mutable","name":"platformFee","nameLocation":"11302:11:17","nodeType":"VariableDeclaration","scope":7629,"src":"11294:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7569,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"11317:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7570,"name":"platformFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"11328:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11317:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11316:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11346:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11316:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11294:57:17"},{"assignments":[7577],"declarations":[{"constant":false,"id":7577,"mutability":"mutable","name":"winnings","nameLocation":"11373:8:17","nodeType":"VariableDeclaration","scope":7629,"src":"11365:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7576,"name":"uint256","nodeType":"ElementaryTypeName","src":"11365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7581,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7578,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"11384:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7579,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"11395:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11384:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11365:41:17"},{"expression":{"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7582,"name":"accumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11433:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7585,"indexExpression":{"expression":{"id":7583,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11449:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11454:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"11449:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11433:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7586,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"11469:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11433:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7588,"nodeType":"ExpressionStatement","src":"11433:47:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7589,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11511:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11516:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"11511:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11538:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11530:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7591,"name":"address","nodeType":"ElementaryTypeName","src":"11530:7:17","typeDescriptions":{}}},"id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11530:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11511:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7620,"nodeType":"Block","src":"11689:83:17","statements":[{"expression":{"arguments":[{"id":7616,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11740:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7617,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"11748:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7612,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11714:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11719:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"11714:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7611,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"11707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11707:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11731:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"11707:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11707:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7619,"nodeType":"ExpressionStatement","src":"11707:50:17"}]},"id":7621,"nodeType":"IfStatement","src":"11507:265:17","trueBody":{"id":7610,"nodeType":"Block","src":"11542:141:17","statements":[{"assignments":[7597,null],"declarations":[{"constant":false,"id":7597,"mutability":"mutable","name":"success","nameLocation":"11566:7:17","nodeType":"VariableDeclaration","scope":7610,"src":"11561:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7596,"name":"bool","nodeType":"ElementaryTypeName","src":"11561:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7604,"initialValue":{"arguments":[{"hexValue":"","id":7602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11608:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7598,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11579:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11586:4:17","memberName":"call","nodeType":"MemberAccess","src":"11579:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7600,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"11598:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11579:28:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11579:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11560:51:17"},{"expression":{"arguments":[{"id":7606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"11637:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11646:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":7605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11629:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11629:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7609,"nodeType":"ExpressionStatement","src":"11629:39:17"}]}},{"eventCall":{"arguments":[{"id":7623,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"11817:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7624,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11825:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7625,"name":"winnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"11833:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7626,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"11843:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7622,"name":"GameCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"11803:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11803:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7628,"nodeType":"EmitStatement","src":"11798:57:17"}]},"id":7630,"nodeType":"IfStatement","src":"10540:1326:17","trueBody":{"id":7542,"nodeType":"Block","src":"10561:506:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7481,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10614:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10619:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"10614:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10633:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7483,"name":"address","nodeType":"ElementaryTypeName","src":"10633:7:17","typeDescriptions":{}}},"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10633:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10614:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7540,"nodeType":"Block","src":"10878:179:17","statements":[{"expression":{"arguments":[{"expression":{"id":7523,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10929:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10934:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"10929:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7525,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10943:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10948:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"10943:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7519,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10903:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10908:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"10903:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7518,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"10896:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10920:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"10896:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7528,"nodeType":"ExpressionStatement","src":"10896:64:17"},{"expression":{"arguments":[{"expression":{"id":7534,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11011:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11016:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"11011:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7536,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"11025:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11030:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"11025:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7530,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10985:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10990:10:17","memberName":"wagerToken","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"10985:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7529,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"10978:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10978:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11002:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"10978:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10978:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7539,"nodeType":"ExpressionStatement","src":"10978:64:17"}]},"id":7541,"nodeType":"IfStatement","src":"10610:447:17","trueBody":{"id":7517,"nodeType":"Block","src":"10645:227:17","statements":[{"assignments":[7489,null],"declarations":[{"constant":false,"id":7489,"mutability":"mutable","name":"s1","nameLocation":"10669:2:17","nodeType":"VariableDeclaration","scope":7517,"src":"10664:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7488,"name":"bool","nodeType":"ElementaryTypeName","src":"10664:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7498,"initialValue":{"arguments":[{"hexValue":"","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10720:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7490,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10677:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10682:7:17","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":6692,"src":"10677:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10690:4:17","memberName":"call","nodeType":"MemberAccess","src":"10677:17:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7493,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10702:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10707:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"10702:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10677:42:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10677:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10663:60:17"},{"assignments":[7500,null],"declarations":[{"constant":false,"id":7500,"mutability":"mutable","name":"s2","nameLocation":"10747:2:17","nodeType":"VariableDeclaration","scope":7517,"src":"10742:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7499,"name":"bool","nodeType":"ElementaryTypeName","src":"10742:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7509,"initialValue":{"arguments":[{"hexValue":"","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10798:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7501,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10755:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10760:7:17","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"10755:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10768:4:17","memberName":"call","nodeType":"MemberAccess","src":"10755:17:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7504,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"10780:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10785:11:17","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"10780:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10755:42:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10755:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10741:60:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7511,"name":"s1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"10827:2:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7512,"name":"s2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"10833:2:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10827:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820726566756e64206661696c6564","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10837:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""},"value":"ETH refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f75ead4e0f8884508fb2b85609b6bcd93e7282633a88569111b7941701acf7b","typeString":"literal_string \"ETH refund failed\""}],"id":7510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10819:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10819:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"10819:38:17"}]}}]}}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"9930:176:17","text":" @notice Resolve a disputed game (owner only)\n @param gameId ID of the game\n @param resolution 0 = refund both, 1 = player1 wins, 2 = player2 wins"},"functionSelector":"e55e4211","id":7632,"implemented":true,"kind":"function","modifiers":[{"id":7434,"kind":"modifierInvocation","modifierName":{"id":7433,"name":"onlyOwner","nameLocations":["10200:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10200:9:17"},"nodeType":"ModifierInvocation","src":"10200:9:17"},{"arguments":[{"id":7436,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"10221:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7437,"kind":"modifierInvocation","modifierName":{"id":7435,"name":"gameExists","nameLocations":["10210:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"10210:10:17"},"nodeType":"ModifierInvocation","src":"10210:18:17"},{"id":7439,"kind":"modifierInvocation","modifierName":{"id":7438,"name":"nonReentrant","nameLocations":["10229:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"10229:12:17"},"nodeType":"ModifierInvocation","src":"10229:12:17"}],"name":"resolveDispute","nameLocation":"10120:14:17","nodeType":"FunctionDefinition","parameters":{"id":7432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"gameId","nameLocation":"10152:6:17","nodeType":"VariableDeclaration","scope":7632,"src":"10144:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"10144:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7431,"mutability":"mutable","name":"resolution","nameLocation":"10174:10:17","nodeType":"VariableDeclaration","scope":7632,"src":"10168:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7430,"name":"uint8","nodeType":"ElementaryTypeName","src":"10168:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10134:56:17"},"returnParameters":{"id":7440,"nodeType":"ParameterList","parameters":[],"src":"10242:0:17"},"scope":7913,"src":"10111:1761:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7674,"nodeType":"Block","src":"12266:450:17","statements":[{"assignments":[7645],"declarations":[{"constant":false,"id":7645,"mutability":"mutable","name":"game","nameLocation":"12289:4:17","nodeType":"VariableDeclaration","scope":7674,"src":"12276:17:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7644,"nodeType":"UserDefinedTypeName","pathNode":{"id":7643,"name":"Game","nameLocations":["12276:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"12276:4:17"},"referencedDeclaration":6713,"src":"12276:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"id":7649,"initialValue":{"baseExpression":{"id":7646,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"12296:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7648,"indexExpression":{"id":7647,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"12302:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12296:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12276:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7651,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"12327:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game storage pointer"}},"id":7652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12332:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"12327:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7653,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"12342:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12353:6:17","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6719,"src":"12342:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"12327:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206d75737420626520616374697665","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12361:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e38d16c4d94aa7feae2e7e1455f42cfbd8f42bef0ae5d53a7e51447c3a9b340","typeString":"literal_string \"Game must be active\""},"value":"Game must be active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e38d16c4d94aa7feae2e7e1455f42cfbd8f42bef0ae5d53a7e51447c3a9b340","typeString":"literal_string \"Game must be active\""}],"id":7650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12319:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12319:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7658,"nodeType":"ExpressionStatement","src":"12319:64:17"},{"expression":{"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7659,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"12440:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7663,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"12479:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7664,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12487:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12493:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"12487:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12504:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12508:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12504:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7661,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12462:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12466:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"12462:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12462:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7660,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12452:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12452:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12440:76:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7671,"nodeType":"ExpressionStatement","src":"12440:76:17"},{"expression":{"id":7672,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"12700:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7642,"id":7673,"nodeType":"Return","src":"12693:16:17"}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"11947:181:17","text":" @notice Create game session for Yellow Network off-chain processing\n @param gameId ID of the game\n @return sessionId Yellow Network session identifier"},"functionSelector":"72a4db27","id":7675,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7638,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"12216:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7639,"kind":"modifierInvocation","modifierName":{"id":7637,"name":"gameExists","nameLocations":["12205:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"12205:10:17"},"nodeType":"ModifierInvocation","src":"12205:18:17"}],"name":"createYellowSession","nameLocation":"12142:19:17","nodeType":"FunctionDefinition","parameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"gameId","nameLocation":"12170:6:17","nodeType":"VariableDeclaration","scope":7675,"src":"12162:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"12162:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12161:16:17"},"returnParameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"mutability":"mutable","name":"sessionId","nameLocation":"12250:9:17","nodeType":"VariableDeclaration","scope":7675,"src":"12242:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12242:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12241:19:17"},"scope":7913,"src":"12133:583:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7691,"nodeType":"Block","src":"12914:87:17","statements":[{"expression":{"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7683,"name":"yellowNetworkBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"12924:19:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7684,"name":"bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"12946:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12924:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7686,"nodeType":"ExpressionStatement","src":"12924:28:17"},{"eventCall":{"arguments":[{"id":7688,"name":"bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"12987:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7687,"name":"YellowBridgeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"12967:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12967:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7690,"nodeType":"EmitStatement","src":"12962:32:17"}]},"documentation":{"id":7676,"nodeType":"StructuredDocumentation","src":"12726:123:17","text":" @notice Set Yellow Network bridge address\n @param bridge Address of Yellow Network bridge contract"},"functionSelector":"2193ffe2","id":7692,"implemented":true,"kind":"function","modifiers":[{"id":7681,"kind":"modifierInvocation","modifierName":{"id":7680,"name":"onlyOwner","nameLocations":["12904:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12904:9:17"},"nodeType":"ModifierInvocation","src":"12904:9:17"}],"name":"setYellowBridge","nameLocation":"12863:15:17","nodeType":"FunctionDefinition","parameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7678,"mutability":"mutable","name":"bridge","nameLocation":"12887:6:17","nodeType":"VariableDeclaration","scope":7692,"src":"12879:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7677,"name":"address","nodeType":"ElementaryTypeName","src":"12879:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12878:16:17"},"returnParameters":{"id":7682,"nodeType":"ParameterList","parameters":[],"src":"12914:0:17"},"scope":7913,"src":"12854:147:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7710,"nodeType":"Block","src":"13256:92:17","statements":[{"expression":{"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7700,"name":"authorizedReferees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"13266:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7702,"indexExpression":{"id":7701,"name":"referee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"13285:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13266:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13296:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13266:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7705,"nodeType":"ExpressionStatement","src":"13266:34:17"},{"eventCall":{"arguments":[{"id":7707,"name":"referee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"13333:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7706,"name":"RefereeAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"13315:17:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13315:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"EmitStatement","src":"13310:31:17"}]},"documentation":{"id":7693,"nodeType":"StructuredDocumentation","src":"13065:124:17","text":" @notice Authorize a referee address (for AI agents or oracles)\n @param referee Address to authorize"},"functionSelector":"42a44a9b","id":7711,"implemented":true,"kind":"function","modifiers":[{"id":7698,"kind":"modifierInvocation","modifierName":{"id":7697,"name":"onlyOwner","nameLocations":["13246:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13246:9:17"},"nodeType":"ModifierInvocation","src":"13246:9:17"}],"name":"authorizeReferee","nameLocation":"13203:16:17","nodeType":"FunctionDefinition","parameters":{"id":7696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7695,"mutability":"mutable","name":"referee","nameLocation":"13228:7:17","nodeType":"VariableDeclaration","scope":7711,"src":"13220:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7694,"name":"address","nodeType":"ElementaryTypeName","src":"13220:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13219:17:17"},"returnParameters":{"id":7699,"nodeType":"ParameterList","parameters":[],"src":"13256:0:17"},"scope":7913,"src":"13194:154:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7729,"nodeType":"Block","src":"13517:90:17","statements":[{"expression":{"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7719,"name":"authorizedReferees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"13527:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7721,"indexExpression":{"id":7720,"name":"referee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"13546:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13527:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13557:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13527:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7724,"nodeType":"ExpressionStatement","src":"13527:35:17"},{"eventCall":{"arguments":[{"id":7726,"name":"referee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"13592:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7725,"name":"RefereeRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"13577:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13577:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7728,"nodeType":"EmitStatement","src":"13572:28:17"}]},"documentation":{"id":7712,"nodeType":"StructuredDocumentation","src":"13358:95:17","text":" @notice Revoke referee authorization\n @param referee Address to revoke"},"functionSelector":"7da2a9d4","id":7730,"implemented":true,"kind":"function","modifiers":[{"id":7717,"kind":"modifierInvocation","modifierName":{"id":7716,"name":"onlyOwner","nameLocations":["13507:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13507:9:17"},"nodeType":"ModifierInvocation","src":"13507:9:17"}],"name":"revokeReferee","nameLocation":"13467:13:17","nodeType":"FunctionDefinition","parameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7714,"mutability":"mutable","name":"referee","nameLocation":"13489:7:17","nodeType":"VariableDeclaration","scope":7730,"src":"13481:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7713,"name":"address","nodeType":"ElementaryTypeName","src":"13481:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13480:17:17"},"returnParameters":{"id":7718,"nodeType":"ParameterList","parameters":[],"src":"13517:0:17"},"scope":7913,"src":"13458:149:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7749,"nodeType":"Block","src":"13788:106:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"newFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7733,"src":"13806:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13819:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"13806:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13825:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":7738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13798:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13798:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7744,"nodeType":"ExpressionStatement","src":"13798:42:17"},{"expression":{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7745,"name":"platformFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"13861:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7746,"name":"newFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7733,"src":"13878:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13861:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7748,"nodeType":"ExpressionStatement","src":"13861:26:17"}]},"documentation":{"id":7731,"nodeType":"StructuredDocumentation","src":"13617:104:17","text":" @notice Update platform fee\n @param newFeeBps New fee in basis points (max 10%)"},"functionSelector":"12e8e2c3","id":7750,"implemented":true,"kind":"function","modifiers":[{"id":7736,"kind":"modifierInvocation","modifierName":{"id":7735,"name":"onlyOwner","nameLocations":["13778:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13778:9:17"},"nodeType":"ModifierInvocation","src":"13778:9:17"}],"name":"setPlatformFee","nameLocation":"13735:14:17","nodeType":"FunctionDefinition","parameters":{"id":7734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7733,"mutability":"mutable","name":"newFeeBps","nameLocation":"13758:9:17","nodeType":"VariableDeclaration","scope":7750,"src":"13750:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7732,"name":"uint256","nodeType":"ElementaryTypeName","src":"13750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13749:19:17"},"returnParameters":{"id":7737,"nodeType":"ParameterList","parameters":[],"src":"13788:0:17"},"scope":7913,"src":"13726:168:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7812,"nodeType":"Block","src":"14103:394:17","statements":[{"assignments":[7761],"declarations":[{"constant":false,"id":7761,"mutability":"mutable","name":"amount","nameLocation":"14121:6:17","nodeType":"VariableDeclaration","scope":7812,"src":"14113:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"14113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7765,"initialValue":{"baseExpression":{"id":7762,"name":"accumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"14130:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7764,"indexExpression":{"id":7763,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"14146:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14130:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14113:39:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"14170:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14170:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f207769746864726177","id":7770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14182:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""},"value":"No fees to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""}],"id":7766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14162:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14162:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7772,"nodeType":"ExpressionStatement","src":"14162:42:17"},{"expression":{"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7773,"name":"accumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"14223:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7775,"indexExpression":{"id":7774,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"14239:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14223:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14248:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14223:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7778,"nodeType":"ExpressionStatement","src":"14223:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7779,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"14272:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14289:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14281:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7780,"name":"address","nodeType":"ElementaryTypeName","src":"14281:7:17","typeDescriptions":{}}},"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14281:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7810,"nodeType":"Block","src":"14427:64:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14464:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14464:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"14473:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7802,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"14448:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7801,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"14441:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$362_$","typeString":"type(contract IERC20)"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14441:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$362","typeString":"contract IERC20"}},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14455:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":329,"src":"14441:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14441:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7809,"nodeType":"ExpressionStatement","src":"14441:39:17"}]},"id":7811,"nodeType":"IfStatement","src":"14268:223:17","trueBody":{"id":7800,"nodeType":"Block","src":"14293:128:17","statements":[{"assignments":[7786,null],"declarations":[{"constant":false,"id":7786,"mutability":"mutable","name":"success","nameLocation":"14313:7:17","nodeType":"VariableDeclaration","scope":7800,"src":"14308:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7785,"name":"bool","nodeType":"ElementaryTypeName","src":"14308:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7794,"initialValue":{"arguments":[{"hexValue":"","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14354:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7787,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14326:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14326:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14334:4:17","memberName":"call","nodeType":"MemberAccess","src":"14326:12:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7790,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"14346:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"14326:27:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14326:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14307:50:17"},{"expression":{"arguments":[{"id":7796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"14379:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14388:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":7795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14371:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14371:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7799,"nodeType":"ExpressionStatement","src":"14371:39:17"}]}}]},"documentation":{"id":7751,"nodeType":"StructuredDocumentation","src":"13904:125:17","text":" @notice Withdraw accumulated platform fees\n @param token Token address (address(0) for native token)"},"functionSelector":"164e68de","id":7813,"implemented":true,"kind":"function","modifiers":[{"id":7756,"kind":"modifierInvocation","modifierName":{"id":7755,"name":"onlyOwner","nameLocations":["14080:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14080:9:17"},"nodeType":"ModifierInvocation","src":"14080:9:17"},{"id":7758,"kind":"modifierInvocation","modifierName":{"id":7757,"name":"nonReentrant","nameLocations":["14090:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"14090:12:17"},"nodeType":"ModifierInvocation","src":"14090:12:17"}],"name":"withdrawFees","nameLocation":"14043:12:17","nodeType":"FunctionDefinition","parameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"token","nameLocation":"14064:5:17","nodeType":"VariableDeclaration","scope":7813,"src":"14056:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7752,"name":"address","nodeType":"ElementaryTypeName","src":"14056:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14055:15:17"},"returnParameters":{"id":7759,"nodeType":"ParameterList","parameters":[],"src":"14103:0:17"},"scope":7913,"src":"14034:463:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7829,"nodeType":"Block","src":"14773:37:17","statements":[{"expression":{"baseExpression":{"id":7825,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"14790:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7827,"indexExpression":{"id":7826,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"14796:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14790:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"functionReturnParameters":7824,"id":7828,"nodeType":"Return","src":"14783:20:17"}]},"documentation":{"id":7814,"nodeType":"StructuredDocumentation","src":"14560:79:17","text":" @notice Get game details\n @param gameId ID of the game"},"functionSelector":"a2f77bcc","id":7830,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7819,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"14729:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7820,"kind":"modifierInvocation","modifierName":{"id":7818,"name":"gameExists","nameLocations":["14718:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"14718:10:17"},"nodeType":"ModifierInvocation","src":"14718:18:17"}],"name":"getGame","nameLocation":"14653:7:17","nodeType":"FunctionDefinition","parameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"gameId","nameLocation":"14669:6:17","nodeType":"VariableDeclaration","scope":7830,"src":"14661:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7815,"name":"uint256","nodeType":"ElementaryTypeName","src":"14661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14660:16:17"},"returnParameters":{"id":7824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7830,"src":"14755:11:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_memory_ptr","typeString":"struct GameEscrow.Game"},"typeName":{"id":7822,"nodeType":"UserDefinedTypeName","pathNode":{"id":7821,"name":"Game","nameLocations":["14755:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":6713,"src":"14755:4:17"},"referencedDeclaration":6713,"src":"14755:4:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage_ptr","typeString":"struct GameEscrow.Game"}},"visibility":"internal"}],"src":"14754:13:17"},"scope":7913,"src":"14644:166:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7843,"nodeType":"Block","src":"15034:43:17","statements":[{"expression":{"baseExpression":{"id":7839,"name":"playerGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"15051:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7841,"indexExpression":{"id":7840,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"15063:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15051:19:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7838,"id":7842,"nodeType":"Return","src":"15044:26:17"}]},"documentation":{"id":7831,"nodeType":"StructuredDocumentation","src":"14820:96:17","text":" @notice Get all games for a player\n @param player Address of the player"},"functionSelector":"129daf84","id":7844,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerGames","nameLocation":"14930:14:17","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"player","nameLocation":"14953:6:17","nodeType":"VariableDeclaration","scope":7844,"src":"14945:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7832,"name":"address","nodeType":"ElementaryTypeName","src":"14945:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14944:16:17"},"returnParameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7844,"src":"15011:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"15011:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7836,"nodeType":"ArrayTypeName","src":"15011:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15010:18:17"},"scope":7913,"src":"14921:156:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7874,"nodeType":"Block","src":"15210:166:17","statements":[{"body":{"id":7872,"nodeType":"Block","src":"15264:106:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7860,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"15282:5:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$6713_storage_$","typeString":"mapping(uint256 => struct GameEscrow.Game storage ref)"}},"id":7862,"indexExpression":{"id":7861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"15288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15282:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$6713_storage","typeString":"struct GameEscrow.Game storage ref"}},"id":7863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15291:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6704,"src":"15282:15:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7864,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"15301:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$6723_$","typeString":"type(enum GameEscrow.GameStatus)"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15312:6:17","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6719,"src":"15301:17:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$6723","typeString":"enum GameEscrow.GameStatus"}},"src":"15282:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7871,"nodeType":"IfStatement","src":"15278:82:17","trueBody":{"id":7870,"nodeType":"Block","src":"15320:40:17","statements":[{"expression":{"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15338:7:17","subExpression":{"id":7867,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"15338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7869,"nodeType":"ExpressionStatement","src":"15338:7:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"15240:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7855,"name":"gameIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"15244:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15240:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7873,"initializationExpression":{"assignments":[7851],"declarations":[{"constant":false,"id":7851,"mutability":"mutable","name":"i","nameLocation":"15233:1:17","nodeType":"VariableDeclaration","scope":7873,"src":"15225:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7850,"name":"uint256","nodeType":"ElementaryTypeName","src":"15225:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7853,"initialValue":{"hexValue":"30","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15237:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15225:13:17"},"loopExpression":{"expression":{"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15259:3:17","subExpression":{"id":7857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"15259:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7859,"nodeType":"ExpressionStatement","src":"15259:3:17"},"nodeType":"ForStatement","src":"15220:150:17"}]},"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"15087:49:17","text":" @notice Get active games count"},"functionSelector":"72aeb81f","id":7875,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveGamesCount","nameLocation":"15150:19:17","nodeType":"FunctionDefinition","parameters":{"id":7846,"nodeType":"ParameterList","parameters":[],"src":"15169:2:17"},"returnParameters":{"id":7849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7848,"mutability":"mutable","name":"count","nameLocation":"15203:5:17","nodeType":"VariableDeclaration","scope":7875,"src":"15195:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7847,"name":"uint256","nodeType":"ElementaryTypeName","src":"15195:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15194:15:17"},"scope":7913,"src":"15141:235:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7907,"nodeType":"Block","src":"15667:259:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7884,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"15681:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7885,"name":"GameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"15693:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameMode_$6717_$","typeString":"type(enum GameEscrow.GameMode)"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15702:13:17","memberName":"PUSHUP_BATTLE","nodeType":"MemberAccess","referencedDeclaration":6714,"src":"15693:22:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"src":"15681:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7890,"nodeType":"IfStatement","src":"15677:62:17","trueBody":{"expression":{"hexValue":"50757368757020426174746c65","id":7888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15724:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b95dc812a99714d82a86aed519a048a6be53a19b9fc76bcacdadb002f4fb330","typeString":"literal_string \"Pushup Battle\""},"value":"Pushup Battle"},"functionReturnParameters":7883,"id":7889,"nodeType":"Return","src":"15717:22:17"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7891,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"15753:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7892,"name":"GameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"15765:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameMode_$6717_$","typeString":"type(enum GameEscrow.GameMode)"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15774:19:17","memberName":"ROCK_PAPER_SCISSORS","nodeType":"MemberAccess","referencedDeclaration":6715,"src":"15765:28:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"src":"15753:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7897,"nodeType":"IfStatement","src":"15749:74:17","trueBody":{"expression":{"hexValue":"526f636b2050617065722053636973736f7273","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15802:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_af3ea5c12aba542d0ceabac4dc2eb136ac0bb734d5b99017f94ac6b034eb5d5a","typeString":"literal_string \"Rock Paper Scissors\""},"value":"Rock Paper Scissors"},"functionReturnParameters":7883,"id":7896,"nodeType":"Return","src":"15795:28:17"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7898,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"15837:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7899,"name":"GameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6717,"src":"15849:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameMode_$6717_$","typeString":"type(enum GameEscrow.GameMode)"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15858:12:17","memberName":"TABLE_TENNIS","nodeType":"MemberAccess","referencedDeclaration":6716,"src":"15849:21:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"src":"15837:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7904,"nodeType":"IfStatement","src":"15833:60:17","trueBody":{"expression":{"hexValue":"5461626c652054656e6e6973","id":7902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15879:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e3e01921dee80a5b331fd974f1c94acf06c1ac5f9cd1e7cc1780d52ca3d390a","typeString":"literal_string \"Table Tennis\""},"value":"Table Tennis"},"functionReturnParameters":7883,"id":7903,"nodeType":"Return","src":"15872:21:17"}},{"expression":{"hexValue":"556e6b6e6f776e","id":7905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15910:9:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ff165d3fe0272c13129fc9e1aecd998364a5fdcad04c6ae84a7d1dfc3d06a17","typeString":"literal_string \"Unknown\""},"value":"Unknown"},"functionReturnParameters":7883,"id":7906,"nodeType":"Return","src":"15903:16:17"}]},"documentation":{"id":7876,"nodeType":"StructuredDocumentation","src":"15441:138:17","text":" @notice Convert GameMode enum to string\n @param gameMode GameMode enum value\n @return String representation"},"id":7908,"implemented":true,"kind":"function","modifiers":[],"name":"_gameModeToString","nameLocation":"15593:17:17","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"gameMode","nameLocation":"15620:8:17","nodeType":"VariableDeclaration","scope":7908,"src":"15611:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"},"typeName":{"id":7878,"nodeType":"UserDefinedTypeName","pathNode":{"id":7877,"name":"GameMode","nameLocations":["15611:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"15611:8:17"},"referencedDeclaration":6717,"src":"15611:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_GameMode_$6717","typeString":"enum GameEscrow.GameMode"}},"visibility":"internal"}],"src":"15610:19:17"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7908,"src":"15652:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7881,"name":"string","nodeType":"ElementaryTypeName","src":"15652:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15651:15:17"},"scope":7913,"src":"15584:342:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7911,"nodeType":"Block","src":"16018:2:17","statements":[]},"id":7912,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[],"src":"15998:2:17"},"returnParameters":{"id":7910,"nodeType":"ParameterList","parameters":[],"src":"16018:0:17"},"scope":7913,"src":"15991:29:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7914,"src":"732:15290:17","usedErrors":[13,18,1655],"usedEvents":[24,6764,6770,6780,6786,6792,6796,6800,6804]}],"src":"32:15992:17"},"id":17},"contracts/OrbitWinnerNFT.sol":{"ast":{"absolutePath":"contracts/OrbitWinnerNFT.sol","exportedSymbols":{"Context":[1589],"ERC165":[3136],"ERC721":[1319],"ERC721Utils":[1559],"IERC165":[3148],"IERC721":[1436],"IERC721Errors":[237],"IERC721Metadata":[1482],"Math":[4769],"OrbitWinnerNFT":[8245],"Ownable":[147],"SafeCast":[6534],"SignedMath":[6678],"Strings":[3112]},"id":8246,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7915,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8246,"sourceUnit":1320,"src":"58:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8246,"sourceUnit":148,"src":"116:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8246,"sourceUnit":3113,"src":"169:51:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7920,"name":"ERC721","nameLocations":["387:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"387:6:18"},"id":7921,"nodeType":"InheritanceSpecifier","src":"387:6:18"},{"baseName":{"id":7922,"name":"Ownable","nameLocations":["395:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"395:7:18"},"id":7923,"nodeType":"InheritanceSpecifier","src":"395:7:18"}],"canonicalName":"OrbitWinnerNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":7919,"nodeType":"StructuredDocumentation","src":"222:137:18","text":" @title OrbitWinnerNFT\n @dev NFT contract for minting winner certificates\n @notice Mints NFTs to game winners with metadata"},"fullyImplemented":true,"id":8245,"linearizedBaseContracts":[8245,147,1319,237,1482,1436,3136,3148,1589],"name":"OrbitWinnerNFT","nameLocation":"369:14:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7926,"libraryName":{"id":7924,"name":"Strings","nameLocations":["415:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"415:7:18"},"nodeType":"UsingForDirective","src":"409:26:18","typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":7928,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"461:15:18","nodeType":"VariableDeclaration","scope":8245,"src":"445:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7927,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7930,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"497:13:18","nodeType":"VariableDeclaration","scope":8245,"src":"482:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7929,"name":"string","nodeType":"ElementaryTypeName","src":"482:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"canonicalName":"OrbitWinnerNFT.WinnerData","id":7943,"members":[{"constant":false,"id":7932,"mutability":"mutable","name":"winner","nameLocation":"557:6:18","nodeType":"VariableDeclaration","scope":7943,"src":"549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7931,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7934,"mutability":"mutable","name":"opponent","nameLocation":"581:8:18","nodeType":"VariableDeclaration","scope":7943,"src":"573:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7933,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7936,"mutability":"mutable","name":"gameMode","nameLocation":"606:8:18","nodeType":"VariableDeclaration","scope":7943,"src":"599:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7935,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7938,"mutability":"mutable","name":"wagerAmount","nameLocation":"632:11:18","nodeType":"VariableDeclaration","scope":7943,"src":"624:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7937,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7940,"mutability":"mutable","name":"timestamp","nameLocation":"661:9:18","nodeType":"VariableDeclaration","scope":7943,"src":"653:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7939,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7942,"mutability":"mutable","name":"gameScreenshot","nameLocation":"687:14:18","nodeType":"VariableDeclaration","scope":7943,"src":"680:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7941,"name":"string","nodeType":"ElementaryTypeName","src":"680:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"WinnerData","nameLocation":"528:10:18","nodeType":"StructDefinition","scope":8245,"src":"521:207:18","visibility":"public"},{"constant":false,"functionSelector":"f4025aab","id":7948,"mutability":"mutable","name":"winnerData","nameLocation":"776:10:18","nodeType":"VariableDeclaration","scope":8245,"src":"738:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WinnerData_$7943_storage_$","typeString":"mapping(uint256 => struct OrbitWinnerNFT.WinnerData)"},"typeName":{"id":7947,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7944,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"738:30:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WinnerData_$7943_storage_$","typeString":"mapping(uint256 => struct OrbitWinnerNFT.WinnerData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7946,"nodeType":"UserDefinedTypeName","pathNode":{"id":7945,"name":"WinnerData","nameLocations":["757:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7943,"src":"757:10:18"},"referencedDeclaration":7943,"src":"757:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage_ptr","typeString":"struct OrbitWinnerNFT.WinnerData"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"f65f8af45d2c7b79a3f8a4ca6a7769347f5c993567035809652d932123642a00","id":7958,"name":"WinnerNFTMinted","nameLocation":"803:15:18","nodeType":"EventDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7950,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"844:7:18","nodeType":"VariableDeclaration","scope":7958,"src":"828:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7949,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7952,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"877:6:18","nodeType":"VariableDeclaration","scope":7958,"src":"861:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7951,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7954,"indexed":false,"mutability":"mutable","name":"gameMode","nameLocation":"900:8:18","nodeType":"VariableDeclaration","scope":7958,"src":"893:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7953,"name":"string","nodeType":"ElementaryTypeName","src":"893:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7956,"indexed":false,"mutability":"mutable","name":"wagerAmount","nameLocation":"926:11:18","nodeType":"VariableDeclaration","scope":7958,"src":"918:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7955,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:125:18"},"src":"797:147:18"},{"body":{"id":7973,"nodeType":"Block","src":"1024:61:18","statements":[{"expression":{"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7969,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1034:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"68747470733a2f2f6f726269742e6170702f6170692f6e66742f","id":7970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1050:28:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_70f49b66a04625e63b4d690d6cdc180685047e184a764a6d49b82166b7823639","typeString":"literal_string \"https://orbit.app/api/nft/\""},"value":"https://orbit.app/api/nft/"},"src":"1034:44:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7972,"nodeType":"ExpressionStatement","src":"1034:44:18"}]},"id":7974,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f726269742057696e6e6572","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"975:14:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_117eca00cda5c9c432086496525b144ceacb17cff2fe88bd50b314ea4bd5fe60","typeString":"literal_string \"Orbit Winner\""},"value":"Orbit Winner"},{"hexValue":"4f524249542d57494e","id":7962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"991:11:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_11b8d92208a3f97e0f0802cb2cf5c002b1f228c210ac8491730e561ca14fc8ec","typeString":"literal_string \"ORBIT-WIN\""},"value":"ORBIT-WIN"}],"id":7963,"kind":"baseConstructorSpecifier","modifierName":{"id":7960,"name":"ERC721","nameLocations":["968:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"968:6:18"},"nodeType":"ModifierInvocation","src":"968:35:18"},{"arguments":[{"expression":{"id":7965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1012:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1016:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1012:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7967,"kind":"baseConstructorSpecifier","modifierName":{"id":7964,"name":"Ownable","nameLocations":["1004:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1004:7:18"},"nodeType":"ModifierInvocation","src":"1004:19:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[],"src":"965:2:18"},"returnParameters":{"id":7968,"nodeType":"ParameterList","parameters":[],"src":"1024:0:18"},"scope":8245,"src":"954:131:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8025,"nodeType":"Block","src":"1604:486:18","statements":[{"assignments":[7993],"declarations":[{"constant":false,"id":7993,"mutability":"mutable","name":"tokenId","nameLocation":"1622:7:18","nodeType":"VariableDeclaration","scope":8025,"src":"1614:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7996,"initialValue":{"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1632:17:18","subExpression":{"id":7994,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"1632:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1614:35:18"},{"expression":{"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7997,"name":"winnerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"1668:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WinnerData_$7943_storage_$","typeString":"mapping(uint256 => struct OrbitWinnerNFT.WinnerData storage ref)"}},"id":7999,"indexExpression":{"id":7998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"1679:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1668:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage","typeString":"struct OrbitWinnerNFT.WinnerData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8001,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"1723:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8002,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7979,"src":"1753:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8003,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"1785:8:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8004,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"1820:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8005,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1856:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1862:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1856:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8007,"name":"screenshotHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"1901:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8000,"name":"WinnerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"1690:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WinnerData_$7943_storage_ptr_$","typeString":"type(struct OrbitWinnerNFT.WinnerData storage pointer)"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1715:6:18","1743:8:18","1775:8:18","1807:11:18","1845:9:18","1885:14:18"],"names":["winner","opponent","gameMode","wagerAmount","timestamp","gameScreenshot"],"nodeType":"FunctionCall","src":"1690:236:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"src":"1668:258:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage","typeString":"struct OrbitWinnerNFT.WinnerData storage ref"}},"id":8010,"nodeType":"ExpressionStatement","src":"1668:258:18"},{"expression":{"arguments":[{"id":8012,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"1955:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"1963:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[997,1027],"referencedDeclaration":997,"src":"1945:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8015,"nodeType":"ExpressionStatement","src":"1945:26:18"},{"eventCall":{"arguments":[{"id":8017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"2011:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8018,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"2020:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8019,"name":"gameMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"2028:8:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8020,"name":"wagerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"2038:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8016,"name":"WinnerNFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"1995:15:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8022,"nodeType":"EmitStatement","src":"1990:60:18"},{"expression":{"id":8023,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"2076:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7991,"id":8024,"nodeType":"Return","src":"2069:14:18"}]},"documentation":{"id":7975,"nodeType":"StructuredDocumentation","src":"1095:289:18","text":" @notice Mint NFT to game winner\n @param winner Address of the winner\n @param opponent Address of the opponent\n @param gameMode Type of game won\n @param wagerAmount Amount wagered\n @param screenshotHash IPFS hash or URL of winning screenshot"},"functionSelector":"c3b34a40","id":8026,"implemented":true,"kind":"function","modifiers":[{"id":7988,"kind":"modifierInvocation","modifierName":{"id":7987,"name":"onlyOwner","nameLocations":["1576:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1576:9:18"},"nodeType":"ModifierInvocation","src":"1576:9:18"}],"name":"mintWinnerNFT","nameLocation":"1398:13:18","nodeType":"FunctionDefinition","parameters":{"id":7986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"winner","nameLocation":"1429:6:18","nodeType":"VariableDeclaration","scope":8026,"src":"1421:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7976,"name":"address","nodeType":"ElementaryTypeName","src":"1421:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7979,"mutability":"mutable","name":"opponent","nameLocation":"1453:8:18","nodeType":"VariableDeclaration","scope":8026,"src":"1445:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7978,"name":"address","nodeType":"ElementaryTypeName","src":"1445:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7981,"mutability":"mutable","name":"gameMode","nameLocation":"1485:8:18","nodeType":"VariableDeclaration","scope":8026,"src":"1471:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7980,"name":"string","nodeType":"ElementaryTypeName","src":"1471:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7983,"mutability":"mutable","name":"wagerAmount","nameLocation":"1511:11:18","nodeType":"VariableDeclaration","scope":8026,"src":"1503:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7985,"mutability":"mutable","name":"screenshotHash","nameLocation":"1546:14:18","nodeType":"VariableDeclaration","scope":8026,"src":"1532:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7984,"name":"string","nodeType":"ElementaryTypeName","src":"1532:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1411:155:18"},"returnParameters":{"id":7991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8026,"src":"1595:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1594:9:18"},"scope":8245,"src":"1389:701:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8051,"nodeType":"Block","src":"2305:117:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8037,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"2332:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8036,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2323:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2344:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8039,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:18","typeDescriptions":{}}},"id":8042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2344:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2323:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2356:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2315:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2315:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8046,"nodeType":"ExpressionStatement","src":"2315:64:18"},{"expression":{"baseExpression":{"id":8047,"name":"winnerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"2396:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WinnerData_$7943_storage_$","typeString":"mapping(uint256 => struct OrbitWinnerNFT.WinnerData storage ref)"}},"id":8049,"indexExpression":{"id":8048,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"2407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2396:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage","typeString":"struct OrbitWinnerNFT.WinnerData storage ref"}},"functionReturnParameters":8034,"id":8050,"nodeType":"Return","src":"2389:26:18"}]},"documentation":{"id":8027,"nodeType":"StructuredDocumentation","src":"2100:118:18","text":" @notice Get winner data for a token\n @param tokenId Token ID\n @return WinnerData struct"},"functionSelector":"d58a0e12","id":8052,"implemented":true,"kind":"function","modifiers":[],"name":"getWinnerData","nameLocation":"2232:13:18","nodeType":"FunctionDefinition","parameters":{"id":8030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8029,"mutability":"mutable","name":"tokenId","nameLocation":"2254:7:18","nodeType":"VariableDeclaration","scope":8052,"src":"2246:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2245:17:18"},"returnParameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8052,"src":"2286:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData"},"typeName":{"id":8032,"nodeType":"UserDefinedTypeName","pathNode":{"id":8031,"name":"WinnerData","nameLocations":["2286:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7943,"src":"2286:10:18"},"referencedDeclaration":7943,"src":"2286:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage_ptr","typeString":"struct OrbitWinnerNFT.WinnerData"}},"visibility":"internal"}],"src":"2285:19:18"},"scope":8245,"src":"2223:199:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[558],"body":{"id":8117,"nodeType":"Block","src":"2635:569:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"2662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8062,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2653:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2682:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2674:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8065,"name":"address","nodeType":"ElementaryTypeName","src":"2674:7:18","typeDescriptions":{}}},"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2653:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2686:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2645:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8072,"nodeType":"ExpressionStatement","src":"2645:64:18"},{"assignments":[8075],"declarations":[{"constant":false,"id":8075,"mutability":"mutable","name":"data","nameLocation":"2746:4:18","nodeType":"VariableDeclaration","scope":8117,"src":"2728:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData"},"typeName":{"id":8074,"nodeType":"UserDefinedTypeName","pathNode":{"id":8073,"name":"WinnerData","nameLocations":["2728:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7943,"src":"2728:10:18"},"referencedDeclaration":7943,"src":"2728:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage_ptr","typeString":"struct OrbitWinnerNFT.WinnerData"}},"visibility":"internal"}],"id":8079,"initialValue":{"baseExpression":{"id":8076,"name":"winnerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"2753:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WinnerData_$7943_storage_$","typeString":"mapping(uint256 => struct OrbitWinnerNFT.WinnerData storage ref)"}},"id":8078,"indexExpression":{"id":8077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"2764:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2753:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_storage","typeString":"struct OrbitWinnerNFT.WinnerData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2728:44:18"},{"expression":{"arguments":[{"arguments":[{"id":8084,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"2835:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"2862:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"2862:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3f77696e6e65723d","id":8088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2894:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2963e141de6d8b3a8b5ab2f048edacd804c6f08b977d3fb542180d06aa49ae5","typeString":"literal_string \"?winner=\""},"value":"?winner="},{"arguments":[{"expression":{"id":8090,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"2923:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2928:6:18","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":7932,"src":"2923:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8089,"name":"_addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"2906:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2906:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"266f70706f6e656e743d","id":8093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2949:12:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4feb5f1b297078c655325731aef50f36dbb8428f9495542770a493534882d6f","typeString":"literal_string \"&opponent=\""},"value":"&opponent="},{"arguments":[{"expression":{"id":8095,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"2980:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2985:8:18","memberName":"opponent","nodeType":"MemberAccess","referencedDeclaration":7934,"src":"2980:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8094,"name":"_addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"2963:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2667616d653d","id":8098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3008:8:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b491a247edc1a0d5f5f24f73c9fdc058b71294866f5fa2cf935b91754553fc8","typeString":"literal_string \"&game=\""},"value":"&game="},{"expression":{"id":8099,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"3018:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3023:8:18","memberName":"gameMode","nodeType":"MemberAccess","referencedDeclaration":7936,"src":"3018:13:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2677616765723d","id":8101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3045:9:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_10ab522a290481d6bb60dcbf597d4b785ff54f75af7f0f32379408199e0aa2df","typeString":"literal_string \"&wager=\""},"value":"&wager="},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8102,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"3056:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3061:11:18","memberName":"wagerAmount","nodeType":"MemberAccess","referencedDeclaration":7938,"src":"3056:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3073:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"3056:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3056:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2674696d657374616d703d","id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3097:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_63a817bf3928c0654e229f53a6d1c567ba552922d7503d7dca7b22bc4ae2af1d","typeString":"literal_string \"&timestamp=\""},"value":"&timestamp="},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8107,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"3112:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3117:9:18","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7940,"src":"3112:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3127:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"3112:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2673637265656e73686f743d","id":8111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3151:14:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_117d1e6f09ac478b8d245ac855b2a539a243d7b2036f2d648fa7307b90b77f81","typeString":"literal_string \"&screenshot=\""},"value":"&screenshot="},{"expression":{"id":8112,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"3167:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerData_$7943_memory_ptr","typeString":"struct OrbitWinnerNFT.WinnerData memory"}},"id":8113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3172:14:18","memberName":"gameScreenshot","nodeType":"MemberAccess","referencedDeclaration":7942,"src":"3167:19:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2963e141de6d8b3a8b5ab2f048edacd804c6f08b977d3fb542180d06aa49ae5","typeString":"literal_string \"?winner=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c4feb5f1b297078c655325731aef50f36dbb8428f9495542770a493534882d6f","typeString":"literal_string \"&opponent=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6b491a247edc1a0d5f5f24f73c9fdc058b71294866f5fa2cf935b91754553fc8","typeString":"literal_string \"&game=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10ab522a290481d6bb60dcbf597d4b785ff54f75af7f0f32379408199e0aa2df","typeString":"literal_string \"&wager=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_63a817bf3928c0654e229f53a6d1c567ba552922d7503d7dca7b22bc4ae2af1d","typeString":"literal_string \"&timestamp=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_117d1e6f09ac478b8d245ac855b2a539a243d7b2036f2d648fa7307b90b77f81","typeString":"literal_string \"&screenshot=\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8082,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2805:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2809:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2805:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:391:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2798:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8080,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:18","typeDescriptions":{}}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:399:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8060,"id":8116,"nodeType":"Return","src":"2791:406:18"}]},"documentation":{"id":8053,"nodeType":"StructuredDocumentation","src":"2432:118:18","text":" @notice Get token URI for metadata\n @param tokenId Token ID\n @return Token metadata URI"},"functionSelector":"c87b56dd","id":8118,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2564:8:18","nodeType":"FunctionDefinition","overrides":{"id":8057,"nodeType":"OverrideSpecifier","overrides":[],"src":"2602:8:18"},"parameters":{"id":8056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8055,"mutability":"mutable","name":"tokenId","nameLocation":"2581:7:18","nodeType":"VariableDeclaration","scope":8118,"src":"2573:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2573:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2572:17:18"},"returnParameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8118,"src":"2620:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8058,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2619:15:18"},"scope":8245,"src":"2555:649:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8130,"nodeType":"Block","src":"3367:43:18","statements":[{"expression":{"id":8128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8126,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"3377:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8127,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"3393:10:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3377:26:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8129,"nodeType":"ExpressionStatement","src":"3377:26:18"}]},"documentation":{"id":8119,"nodeType":"StructuredDocumentation","src":"3214:83:18","text":" @notice Set base token URI\n @param newBaseURI New base URI"},"functionSelector":"55f804b3","id":8131,"implemented":true,"kind":"function","modifiers":[{"id":8124,"kind":"modifierInvocation","modifierName":{"id":8123,"name":"onlyOwner","nameLocations":["3357:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3357:9:18"},"nodeType":"ModifierInvocation","src":"3357:9:18"}],"name":"setBaseURI","nameLocation":"3311:10:18","nodeType":"FunctionDefinition","parameters":{"id":8122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8121,"mutability":"mutable","name":"newBaseURI","nameLocation":"3336:10:18","nodeType":"VariableDeclaration","scope":8131,"src":"3322:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8120,"name":"string","nodeType":"ElementaryTypeName","src":"3322:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3321:26:18"},"returnParameters":{"id":8125,"nodeType":"ParameterList","parameters":[],"src":"3367:0:18"},"scope":8245,"src":"3302:108:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8234,"nodeType":"Block","src":"3629:417:18","statements":[{"assignments":[8140],"declarations":[{"constant":false,"id":8140,"mutability":"mutable","name":"value","nameLocation":"3647:5:18","nodeType":"VariableDeclaration","scope":8234,"src":"3639:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3639:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8151,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":8147,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"3679:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3671:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8145,"name":"uint160","nodeType":"ElementaryTypeName","src":"3671:7:18","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3671:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:18","typeDescriptions":{}}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3663:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3655:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3655:7:18","typeDescriptions":{}}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3639:47:18"},{"assignments":[8153],"declarations":[{"constant":false,"id":8153,"mutability":"mutable","name":"alphabet","nameLocation":"3709:8:18","nodeType":"VariableDeclaration","scope":8234,"src":"3696:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8152,"name":"bytes","nodeType":"ElementaryTypeName","src":"3696:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8155,"initialValue":{"hexValue":"30313233343536373839616263646566","id":8154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3720:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"3696:42:18"},{"assignments":[8157],"declarations":[{"constant":false,"id":8157,"mutability":"mutable","name":"str","nameLocation":"3761:3:18","nodeType":"VariableDeclaration","scope":8234,"src":"3748:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8156,"name":"bytes","nodeType":"ElementaryTypeName","src":"3748:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8162,"initialValue":{"arguments":[{"hexValue":"3432","id":8160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:2:18","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"}],"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3767:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":8158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3771:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3748:32:18"},{"expression":{"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8163,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"3790:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8165,"indexExpression":{"hexValue":"30","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3790:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3799:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"3790:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":8168,"nodeType":"ExpressionStatement","src":"3790:12:18"},{"expression":{"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8169,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"3812:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8171,"indexExpression":{"hexValue":"31","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3812:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":8172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3821:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"3812:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":8174,"nodeType":"ExpressionStatement","src":"3812:12:18"},{"body":{"id":8227,"nodeType":"Block","src":"3867:145:18","statements":[{"expression":{"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8185,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"3881:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8191,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3885:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3889:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":8188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3893:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3889:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3885:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3881:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8192,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"3898:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8203,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"3913:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8199,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3919:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3923:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3919:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3913:13:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":8200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3930:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3913:18:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":8194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3907:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8193,"name":"uint8","nodeType":"ElementaryTypeName","src":"3907:5:18","typeDescriptions":{}}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3907:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3898:35:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3881:52:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":8205,"nodeType":"ExpressionStatement","src":"3881:52:18"},{"expression":{"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8206,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"3947:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8212,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3951:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3955:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":8209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3959:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3951:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3947:14:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8213,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"3964:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8224,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"3979:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8220,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3985:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3989:2:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3985:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3979:13:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":8221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:4:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"3979:20:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3973:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8214,"name":"uint8","nodeType":"ElementaryTypeName","src":"3973:5:18","typeDescriptions":{}}},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3964:37:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3947:54:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":8226,"nodeType":"ExpressionStatement","src":"3947:54:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3854:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3858:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3854:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8228,"initializationExpression":{"assignments":[8176],"declarations":[{"constant":false,"id":8176,"mutability":"mutable","name":"i","nameLocation":"3847:1:18","nodeType":"VariableDeclaration","scope":8228,"src":"3839:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8175,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8178,"initialValue":{"hexValue":"30","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3851:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3839:13:18"},"loopExpression":{"expression":{"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3862:3:18","subExpression":{"id":8182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"3862:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8184,"nodeType":"ExpressionStatement","src":"3862:3:18"},"nodeType":"ForStatement","src":"3834:178:18"},{"expression":{"arguments":[{"id":8231,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"4035:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4028:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8229,"name":"string","nodeType":"ElementaryTypeName","src":"4028:6:18","typeDescriptions":{}}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8138,"id":8233,"nodeType":"Return","src":"4021:18:18"}]},"documentation":{"id":8132,"nodeType":"StructuredDocumentation","src":"3420:127:18","text":" @notice Convert address to string\n @param addr Address to convert\n @return String representation"},"id":8235,"implemented":true,"kind":"function","modifiers":[],"name":"_addressToString","nameLocation":"3561:16:18","nodeType":"FunctionDefinition","parameters":{"id":8135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8134,"mutability":"mutable","name":"addr","nameLocation":"3586:4:18","nodeType":"VariableDeclaration","scope":8235,"src":"3578:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8133,"name":"address","nodeType":"ElementaryTypeName","src":"3578:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3577:14:18"},"returnParameters":{"id":8138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8235,"src":"3614:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8136,"name":"string","nodeType":"ElementaryTypeName","src":"3614:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3613:15:18"},"scope":8245,"src":"3552:494:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8243,"nodeType":"Block","src":"4202:39:18","statements":[{"expression":{"id":8241,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"4219:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8240,"id":8242,"nodeType":"Return","src":"4212:22:18"}]},"documentation":{"id":8236,"nodeType":"StructuredDocumentation","src":"4056:86:18","text":" @notice Get total supply\n @return Total number of NFTs minted"},"functionSelector":"18160ddd","id":8244,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4156:11:18","nodeType":"FunctionDefinition","parameters":{"id":8237,"nodeType":"ParameterList","parameters":[],"src":"4167:2:18"},"returnParameters":{"id":8240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8244,"src":"4193:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8238,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:9:18"},"scope":8245,"src":"4147:94:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8246,"src":"360:3883:18","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1335,1344,1353,7958]}],"src":"32:4213:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/GameEscrow.sol":{"GameEscrow":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"GameCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"winnings","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"platformFee","type":"uint256"}],"name":"GameCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player1","type":"address"},{"indexed":false,"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"wagerToken","type":"address"},{"indexed":false,"internalType":"enum GameEscrow.GameMode","name":"gameMode","type":"uint8"}],"name":"GameCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"disputedBy","type":"address"}],"name":"GameDisputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player2","type":"address"}],"name":"GameJoined","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"referee","type":"address"}],"name":"RefereeAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"referee","type":"address"}],"name":"RefereeRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newBridge","type":"address"}],"name":"YellowBridgeUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"accumulatedFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"referee","type":"address"}],"name":"authorizeReferee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedReferees","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"cancelGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"bytes32","name":"gameDataHash","type":"bytes32"}],"name":"completeGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"address","name":"wagerToken","type":"address"},{"internalType":"enum GameEscrow.GameMode","name":"gameMode","type":"uint8"}],"name":"createGame","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"createYellowSession","outputs":[{"internalType":"bytes32","name":"sessionId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"disputeGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"gameIdCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"address","name":"wagerToken","type":"address"},{"internalType":"enum GameEscrow.GameMode","name":"gameMode","type":"uint8"},{"internalType":"enum GameEscrow.GameStatus","name":"status","type":"uint8"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"completedAt","type":"uint256"},{"internalType":"bytes32","name":"gameDataHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActiveGamesCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGame","outputs":[{"components":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"address","name":"wagerToken","type":"address"},{"internalType":"enum GameEscrow.GameMode","name":"gameMode","type":"uint8"},{"internalType":"enum GameEscrow.GameStatus","name":"status","type":"uint8"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"completedAt","type":"uint256"},{"internalType":"bytes32","name":"gameDataHash","type":"bytes32"}],"internalType":"struct GameEscrow.Game","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerGames","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"joinGame","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"playerGames","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint8","name":"resolution","type":"uint8"}],"name":"resolveDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"referee","type":"address"}],"name":"revokeReferee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFeeBps","type":"uint256"}],"name":"setPlatformFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"bridge","type":"address"}],"name":"setYellowBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"winnerNFT","outputs":[{"internalType":"contract OrbitWinnerNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"yellowNetworkBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100fd576000906001825533156100e95750600180546001600160a01b03198082163390811790935560405190936001600160a01b0393909284167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a360fa600655338252600560205260408220805460ff19166001179055612034818101906001600160401b038211838310176100d557908291620021d08339039082f09081156100c95750169060095416176009556040516120cd9081620001038239f35b604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b602491631e4fbdf760e01b82526004820152fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630a5694c214611b9e578063117a5b9014611aed578063129daf8414611a3957806312e8e2c3146119db578063164e68de146118ee5780631bb412d6146118d05780632193ffe21461186957806322dcd13e1461184b57806342a44a9b146117e257806369958ab9146115e7578063715018a61461158a57806372a4db27146114ac57806372aeb81f1461143657806373f4d7ea1461140d57806377901b64146113ce5780637cd7c64114610e785780637da2a9d414610e1257806387af227814610cf25780638da5cb5b14610cc9578063a2f77bcc14610b21578063a4d290c214610af8578063c92398fb14610845578063e55e421114610457578063efaa55a014610206578063f2fde38b1461017d5763fcf666640361000e5734610178576020366003190112610178576001600160a01b0361015f611bf6565b1660005260076020526020604060002054604051908152f35b600080fd5b3461017857602036600319011261017857610196611bf6565b61019e611c6a565b6001600160a01b039081169081156101ed57600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b602080600319360112610178576004359061021f611dec565b61022c6002548310611e0f565b816000526003815260406000209060038201805460ff8160a81c166005811015610441576104075760018401805490916001600160a01b039182166103ce578186541633146103895716806102f1575061028d600260049501543414611d54565b336001600160601b0360a01b825416179055600160a81b60ff60a81b1982541617905533600052526102c3816040600020611db2565b33907f45c4f9cbafe186141862608c493f28b823fde4c2142bedc3f5169961a73fdd22600080a36001600055005b610337849160026000976103053415611c96565b01546040516323b872dd60e01b8152336004820152306024820152604481019190915296879283919082906064820190565b03925af193841561037d57600494610350575b5061028d565b61036f90843d8611610376575b6103678183611d1a565b810190611d3c565b508561034a565b503d61035d565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260048101869052601c60248201527f43616e6e6f7420706c617920616761696e737420796f757273656c66000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601160248201527011d85b5948185b1c9958591e48199d5b1b607a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052601260248201527147616d65206e6f7420617661696c61626c6560701b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b346101785760403660031901126101785760043560243560ff811680910361017857610481611c6a565b60029061049082548410611e0f565b610498611dec565b82600052602060038152604060002093600385019283549060ff8260a81c1660058110156104415760040361080c578581116107d25760ff60a81b198216600160a91b1785554260068801558061063b57505082546001600160a01b03939084169150816105575750505060008080859484600183808080809a6105489d5416968c01968754905af19761052a611e9a565b500154169054905af161053b611e9a565b508161054f575b50611f94565b6001600055005b905082610542565b8554948601805460405163a9059cbb60e01b8082529787166001600160a01b03166004820152602481019190915293969395939290919087908790816000816044810103925af194851561037d576001816000936105ea998b9961061e575b505416940154169154936040519687958694859384526004840160209093929193604081019460018060a01b031681520152565b03925af1801561037d57610600575b5050610548565b8161061692903d10610376576103678183611d1a565b5080806105f9565b610634908a3d8c11610376576103678183611d1a565b508b6105b6565b939591949093909291906001036107be5780546001600160a01b0316905b60048101968460018060a01b0392838516998a6001600160601b0360a01b82541617905501548060011b9581870414901517156107a857816106ab6127106106a360065489611e51565b048097611e64565b96166000526007845260406000206106c4868254611e71565b905554168061071c575091839161070e60008080807fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c38996040995af1610708611e9a565b50611eca565b8351928352820152a3610548565b60405163a9059cbb60e01b81526001600160a01b039290921660048301526024820185905290939192908390859060449082906000905af192831561037d577fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c389460409461078b575b5061070e565b6107a190823d8411610376576103678183611d1a565b5087610785565b634e487b7160e01b600052601160045260246000fd5b60018101546001600160a01b031690610659565b60405162461bcd60e51b815260048101859052601260248201527124b73b30b634b2103932b9b7b63aba34b7b760711b6044820152606490fd5b60405162461bcd60e51b815260048101859052601160248201527011d85b59481b9bdd08191a5cdc1d5d1959607a1b6044820152606490fd5b606036600319011261017857610859611c0c565b600360443510156101785761086c611dec565b60043515610abf576001600160a01b038116610a4f5761088f6004353414611d54565b60025461089b81611d97565b600255604051916108ab83611ce1565b3383526020830160008152604084019360043585526060810160018060a01b038416815260808201906108e060443583611da6565b600060a0840181815260c085018290524260e086015261010085018290526101208501829052878252600360208190526040909220855181546001600160a01b03199081166001600160a01b03928316178355975160018301805490991690821617909755985160028a015591518882015493519895169391908810156104415751916005831015610441576020976007946101209460ff60a81b9060a81b169269ffffffffffffffffffff60b01b16179060ff60a01b9060a01b16171760038501556004840160018060a01b0360c0830151166001600160601b0360a01b82541617905560e081015160058501556101008101516006850155015191015533600052600483526109f5826040600020611db2565b6040805160043581526001600160a01b0390921684830152610a1b908201604435611c50565b817fabd75ec9f1a7c8f5cf37dbf68608fa6e61d2986cf77cf390a28eca7b1d4b4dca60603393a36001600055604051908152f35b610a593415611c96565b6040516323b872dd60e01b81523360048083019190915230602483015235604482015260208160648160006001600160a01b0387165af1801561037d57610aa1575b5061088f565b610ab89060203d8111610376576103678183611d1a565b5081610a9b565b60405162461bcd60e51b815260206004820152601160248201527005761676572206d757374206265203e203607c1b6044820152606490fd5b34610178576000366003190112610178576009546040516001600160a01b039091168152602090f35b34610178576020366003190112610178576004356000610120604051610b4681611ce1565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152610b896002548210611e0f565b60005260036020526040600020604051610ba281611ce1565b81546001600160a01b039081168252600183015481166020830152600283015460408301526003830154908116606083015260ff90610bea60a082901c831660808501611da6565b60a81c166005811015610441576101409260079160a084015260018060a01b0360048201541660c0840152600581015460e0840152600681015461010084015201546101208201526101206040519160018060a01b03815116835260018060a01b0360208201511660208401526040810151604084015260018060a01b036060820151166060840152610c8560808201516080850190611c50565b610c9760a082015160a0850190611c5d565b60c0818101516001600160a01b03169084015260e0808201519084015261010080820151908401520151610120820152f35b34610178576000366003190112610178576001546040516001600160a01b039091168152602090f35b3461017857602036600319011261017857600435610d136002548210611e0f565b60008181526003602052604090208054610d4391336001600160a01b0392831614918215610e00575b5050611f54565b8060005260036020526003604060002001805460ff8160a81c1660058110156104415760018114908115610df5575b5015610db05760ff60a81b1916600160aa1b17905533907f8fd73c8c4472189916c71b5cf4047bc9088a7481f333c1063fa93e70f1a469f8600080a3005b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74206469737075746520746869732067616d6500000000000000006044820152606490fd5b600291501484610d72565b90915060013392015416148380610d3c565b3461017857602036600319011261017857610e2b611bf6565b610e33611c6a565b6001600160a01b03166000818152600560205260408120805460ff191690557f2d9125815ff94ed1f67bcaed3480c73af82b355e90de77479081cd2ed35f9a1c9080a2005b3461017857606036600319011261017857610e91611c0c565b33600052600560205260ff604060002054161561139057610eb760025460043510611e0f565b610ebf611dec565b600435600052600360205260406000209060038201549160ff8360a81c166005811015610441576001036113595780546001600160a01b038381169116148015611340575b156112fb5760ff60a81b198316600160a91b1760038201556004810180546001600160a01b0319166001600160a01b038416179055426006820155604435600782015560028082015491908215600184901b84900490911417156107a857610f82612710610f776006548560011b611e51565b04809360011b611e64565b9360018060a01b031660005260076020526040600020610fa3838254611e71565b905560038101546001600160a01b0316806112985750610fcd600080808088885af1610708611e9a565b610fe060ff600383015460a01c16611fd4565b60095482546001600160a01b03918216939291908116908616810361128f575060018201546001600160a01b0316916002905b0154600093600435939091847a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561127f575b506d04ee2d6d415b85acef810000000080821015611272575b50662386f26fc1000080821015611265575b506305f5e10080821015611258575b50612710811015611249575b606481101561123b575b600a80911015611231575b60018701958160216110c96110b38a611e7e565b996110c16040519b8c611d1a565b808b52611e7e565b60208a019a90601f1901368c378901015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908a821561110a575082906110da565b925050506111b360009261114a61115a602d60209a61119c9c6040519485926c6f726269742d77696e6e65722d60981b8f85015251809285850190611f0c565b810103600d810184520182611d1a565b60405163030ecd2960e61b81526001600160a01b03948516600482015293909516602484015260a06044840152919788968795869492909160a4860190611f2f565b916064850152600319848303016084850152611f2f565b03925af1801561037d57611206575b50604051928352602083015260018060a01b0316907fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c38604060043592a36001600055005b602090813d831161122a575b61121c8183611d1a565b8101031261017857836111c2565b503d611212565b956001019561109f565b606460029104960195611094565b6127106004910496019561108a565b600891049601958a61107e565b601091049601958a61106f565b602091049601958a61105d565b604097506004350490508a611044565b60029092611013565b60405163a9059cbb60e01b81526001600160a01b03851660048201526024810186905290602090829060449082906000905af1801561037d576112dc575b50610fcd565b6112f49060203d602011610376576103678183611d1a565b50846112d6565b60405162461bcd60e51b815260206004820152601760248201527f57696e6e6572206d757374206265206120706c617965720000000000000000006044820152606490fd5b5060018101546001600160a01b03838116911614610f04565b60405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754e6f7420617574686f72697a6564207265666572656560501b6044820152606490fd5b34610178576020366003190112610178576001600160a01b036113ef611bf6565b166000526005602052602060ff604060002054166040519015158152f35b34610178576000366003190112610178576008546040516001600160a01b039091168152602090f35b3461017857600036600319011261017857600080600254905b81811061146157602083604051908152f35b8060005260ff6003806020526040600020015460a81c16600581101561044157600114611497575b61149290611d97565b61144f565b916114a461149291611d97565b929050611489565b34610178576020366003190112610178576004356114cd6002548210611e0f565b80600052600360205260ff60036040600020015460a81c1660058110156104415760010361154f5760405190602082019081524260408301523360601b606083015260548252608082019082821067ffffffffffffffff83111761153957602092826040525190208152f35b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601360248201527247616d65206d7573742062652061637469766560681b6044820152606490fd5b34610178576000366003190112610178576115a3611c6a565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017857602080600319360112610178576004359061160a6002548310611e0f565b6000828152600382526040902080546001600160a01b039161163891831633149081156117d2575b50611f54565b611640611dec565b82600052600382526040600020916003830180549060ff8260a81c1660058110156104415761178d57836001860154166117485760ff60a81b198216600360a81b1790558216806116d85750506000808084600282956116aa975416910154905af1610542611e9a565b33907f58f64e02b3a6d2a3bd28b7700a0a0d6699545bcb55bf917ac0ff670f3a509efb600080a36001600055005b835460029094015460405163a9059cbb60e01b8152939094166001600160a01b0316600484015260248301939093529182908290816000816044810103925af1801561037d5761172a575b50506116aa565b8161174092903d10610376576103678183611d1a565b508180611723565b60405162461bcd60e51b815260048101849052601760248201527f506c61796572203220616c7265616479206a6f696e65640000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101849052601960248201527f43616e6e6f742063616e63656c206163746976652067616d65000000000000006044820152606490fd5b6001015483163314905085611632565b34610178576020366003190112610178576117fb611bf6565b611803611c6a565b6001600160a01b03166000818152600560205260408120805460ff191660011790557f981ac5cae2fb338fa3b83661b9db1adf2471e4dd1e089498a55476854339dd1b9080a2005b34610178576000366003190112610178576020600654604051908152f35b3461017857602036600319011261017857611882611bf6565b61188a611c6a565b600880546001600160a01b0319166001600160a01b039290921691821790557f6387e6721c9b8e49669c1d962e31fe0ea2c1467b3106425bc787d42d5208d6d7600080a2005b34610178576000366003190112610178576020600254604051908152f35b346101785760208060031936011261017857611908611bf6565b611910611c6a565b611918611dec565b6001600160a01b039081166000818152600784526040902054929083156119a05760008181526007835260408120558061196657505060008080610548948194600154165af1610708611e9a565b60015460405163a9059cbb60e01b815293166001600160a01b031660048401526024830193909352918290829081600081604481016105ea565b60405162461bcd60e51b81526004810183905260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b34610178576020366003190112610178576004356119f7611c6a565b6103e88111611a0557600655005b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b3461017857602080600319360112610178576001600160a01b03611a5b611bf6565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b86828210611ad9578686611a9982880383611d1a565b604051928392818401908285525180915260408401929160005b828110611ac257505050500390f35b835185528695509381019392810192600101611ab3565b835485529093019260019283019201611a83565b34610178576020366003190112610178576004356000526003602052610140604060002060018060a01b0380825416918160018201541691600282015490611b86600384015482600486015416926005860154946007600688015497015497604051998a5260208a0152604089015281166060880152611b766080880160ff8360a01c16611c50565b60ff60a088019160a81c16611c5d565b60c085015260e0840152610100830152610120820152f35b3461017857604036600319011261017857611bb7611bf6565b6001600160a01b031660009081526004602052604090208054602435919082101561017857602091611be891611c22565b90546040519160031b1c8152f35b600435906001600160a01b038216820361017857565b602435906001600160a01b038216820361017857565b8054821015611c3a5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9060038210156104415752565b9060058210156104415752565b6001546001600160a01b03163303611c7e57565b60405163118cdaa760e01b8152336004820152602490fd5b15611c9d57565b606460405162461bcd60e51b815260206004820152602060248201527f446f206e6f742073656e6420455448207769746820746f6b656e2077616765726044820152fd5b610140810190811067ffffffffffffffff82111761153957604052565b6040810190811067ffffffffffffffff82111761153957604052565b90601f8019910116810190811067ffffffffffffffff82111761153957604052565b90816020910312610178575180151581036101785790565b15611d5b57565b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b60001981146107a85760010190565b60038210156104415752565b80546801000000000000000081101561153957611dd491600182018155611c22565b819291549060031b91821b91600019901b1916179055565b600260005414611dfd576002600055565b604051633ee5aeb560e01b8152600490fd5b15611e1657565b60405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b818102929181159184041417156107a857565b919082039182116107a857565b919082018092116107a857565b67ffffffffffffffff811161153957601f01601f191660200190565b3d15611ec5573d90611eab82611e7e565b91611eb96040519384611d1a565b82523d6000602084013e565b606090565b15611ed157565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60005b838110611f1f5750506000910152565b8181015183820152602001611f0f565b90602091611f4881518092818552858086019101611f0c565b601f01601f1916010190565b15611f5b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba10309033b0b6b290383630bcb2b960791b6044820152606490fd5b15611f9b57565b60405162461bcd60e51b8152602060048201526011602482015270115512081c99599d5b990819985a5b1959607a1b6044820152606490fd5b600381101561044157801561206d576001811461203d5760021461201557604051611ffe81611cfe565b60078152662ab735b737bbb760c91b602082015290565b60405161202181611cfe565b600c81526b5461626c652054656e6e697360a01b602082015290565b5060405161204a81611cfe565b6013815272526f636b2050617065722053636973736f727360681b602082015290565b5060405161207a81611cfe565b600d81526c50757368757020426174746c6560981b60208201529056fea2646970667358221220d3ef850c69d3cdcfda699dd2968e2a5a1f02821ab5d32d874f3db2a305554c3e64736f6c634300081400336080346200034d576040906001600160401b03908083018281118282101762000337578352600c81526020906b27b93134ba102bb4b73732b960a11b8282015283518481018181108582111762000337578552600981526827a92124aa16aba4a760b91b8382015281519380851162000337576000948062000082875462000352565b94601f9586811162000307575b5086908683116001146200029f57889262000293575b50508160011b916000199060031b1c19161785555b81519081116200027f5780600192620000d4845462000352565b85811162000244575b508590858311600114620001e0578792620001d4575b5050600019600383901b1c191690821b1790555b3315620001bc5760068054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36200015d60085462000352565b918183116200019a575b7f68747470733a2f2f6f726269742e6170702f6170692f6e66742f0000000000346008558451611c8b9081620003a98239f35b836008620001b2955220910160051c8101906200038f565b3880808062000167565b8351631e4fbdf760e01b815260048101849052602490fd5b015190503880620000f3565b8488528688208594509190601f198416895b898282106200022d575050841162000213575b505050811b01905562000107565b015160001960f88460031b161c1916905538808062000205565b8385015186558897909501949384019301620001f2565b6200026e908589528789208780860160051c8201928a871062000275575b0160051c01906200038f565b38620000dd565b9250819262000262565b634e487b7160e01b85526041600452602485fd5b015190503880620000a5565b8880528789209250601f198416895b89828210620002f0575050908460019594939210620002d6575b505050811b018555620000ba565b015160001960f88460031b161c19169055388080620002c8565b6001859682939686015181550195019301620002ae565b6200033090898052888a208880860160051c8201928b871062000275570160051c01906200038f565b386200008f565b634e487b7160e01b600052604160045260246000fd5b600080fd5b90600182811c9216801562000384575b60208310146200036e57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000362565b8181106200039b575050565b600081556001016200038f56fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146113035750806306fdde0314611260578063081812fc14611222578063095ea7b31461113b57806318160ddd1461111d57806323b872dd1461110657806342842e0e146110d857806355f804b314610f5e5780636352211e14610f2e57806370a0823114610ed5578063715018a614610e785780638da5cb5b14610e4f57806395d89b4114610d70578063a22cb46514610ccb578063b88d4fde14610c5d578063c3b34a4014610656578063c87b56dd146103a9578063d58a0e1214610287578063e985e9c514610231578063f2fde38b146101a35763f4025aab1461010657600080fd5b3461019e57602036600319011261019e576004356000526009602052604060002060018060a01b0361019a8183541691600184015416926101496002820161151c565b60038201549161018261016360056004840154930161151c565b926040519788978852602088015260c0604088015260c0870190611391565b926060860152608085015283820360a0850152611391565b0390f35b600080fd5b3461019e57602036600319011261019e576101bc6113b6565b6101c46115c2565b6001600160a01b0390811690811561021857600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461019e57604036600319011261019e5761024a6113b6565b6102526113cc565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b3461019e5760208060031936011261019e5760043590606060a06040516102ad81611417565b60008152600084820152826040820152600083820152600060808201520152816000526002815260018060a01b03916102ee83604060002054161515611922565b6000526009815261019a60406000206040519261030a84611417565b848254168452846001830154169181850192835261038a61032d6002830161151c565b60408701908152876003840154956060890196875261035a600560048701549660808c019788520161151c565b9560a08a019687526040519a8b9a828c525116908a0152511660408801525160c0606088015260e0870190611391565b925160808601525160a085015251838203601f190160c0850152611391565b3461019e5760208060031936011261019e5760043590816000526002815260018060a01b036103e081604060002054161515611922565b8260005260098252604060002092604051906103fb82611417565b82855416825281600195848782015416948683019586526104876104806104776104276002860161151c565b936040870194855261046f8161046761045a600560038b01549a60608d019b8c52608060048201549d019c8d520161151c565b9a60a08d019b8c52611965565b9a5116611af4565b995116611af4565b92519351611965565b9351611965565b93519587604051998a97600091600854906104a1826114e2565b9181811690811561063957506001146105d8575b505091816104d58460369b9a9896946105c49d9a9896519485920161136e565b01673f77696e6e65723d60c01b81526104f7825180938d60088501910161136e565b0169266f70706f6e656e743d60b01b600882015261051e825180938c60128501910161136e565b01652667616d653d60d01b6012820152610541825180938b60188501910161136e565b01662677616765723d60c81b6018820152610565825180938a601f8501910161136e565b016a2674696d657374616d703d60a81b601f82015261058d8251809389602a8501910161136e565b016b2673637265656e73686f743d60a01b602a8201526105b58251809388878501910161136e565b0103601681018552018361144f565b61019a604051928284938452830190611391565b9091925060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3906000915b83831061061f575050508801820190806104d56104b5565b80549b830186019b909b528d9a8d95909201918101610607565b60ff1916868d0152505080151502890183019150806104d56104b5565b3461019e5760a036600319011261019e5761066f6113b6565b6106776113cc565b60443567ffffffffffffffff811161019e576106979036906004016114c4565b60843567ffffffffffffffff811161019e576106b79036906004016114c4565b916106c06115c2565b600754926106cd846118fd565b600755604051906106dd82611417565b6001600160a01b03868116835292831660208084019182526040808501878152606435606087015242608087015260a0860194909452600088815260099092529020835181549086166001600160a01b03199182161782559151600182018054919096169216919091179093555180519067ffffffffffffffff8211610b845761076a60028501546114e2565b601f8111610c16575b50602090601f8311600114610ba55760a093929160009183610b9a575b50508160011b916000199060031b1c19161760028401555b6060810151600384015560808101516004840155015180519067ffffffffffffffff8211610b84576107dd60058401546114e2565b601f8111610b3d575b50602090601f8311600114610acf576005929160009183610ac4575b50508160011b916000199060031b1c1916179101555b60405161082481611433565b600081526001600160a01b03841615610aab576000838152600260205260409020546001600160a01b031680151590849082610a74575b6001600160a01b0387166000818152600360209081526040808320805460010190558583526002909152812080546001600160a01b031916831790559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4610a5b57833b610925575b5091817ff65f8af45d2c7b79a3f8a4ca6a7769347f5c993567035809652d932123642a00610907602095604051918291604083526040830190611391565b606435828901526001600160a01b03909516940390a3604051908152f35b6040516020818061095f630a85bd0160e11b9586835233600484015260006024840152886044840152608060648401526084830190611391565b038160006001600160a01b038a165af160009181610a16575b506109e057843d156109d8573d9061098f82611471565b9161099d604051938461144f565b82523d6000602084013e5b815191826109d157604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6060906109a8565b6001600160e01b031916036109f557816108c9565b604051633250574960e11b81526001600160a01b0384166004820152602490fd5b9091506020813d602011610a53575b81610a326020938361144f565b8101031261019e57516001600160e01b03198116810361019e579086610978565b3d9150610a25565b6040516339e3563760e11b815260006004820152602490fd5b600082815260046020526040902080546001600160a01b03191690558060005260036020526040600020600019815401905561085b565b604051633250574960e11b815260006004820152602490fd5b015190508780610802565b90601f198316916005850160005260206000209260005b818110610b2557509160019391856005969410610b0c575b505050811b01910155610818565b015160001960f88460031b161c19169055878080610afe565b92936020600181928786015181550195019301610ae6565b600584016000526020600020601f840160051c810160208510610b7d575b601f830160051c82018110610b715750506107e6565b60008155600101610b5b565b5080610b5b565b634e487b7160e01b600052604160045260246000fd5b015190508880610790565b90601f198316916002860160005260206000209260005b818110610bfe575091600193918560a097969410610be5575b505050811b0160028401556107a8565b015160001960f88460031b161c19169055888080610bd5565b92936020600181928786015181550195019301610bbc565b600285016000526020600020601f840160051c810160208510610c56575b601f830160051c82018110610c4a575050610773565b60008155600101610c34565b5080610c34565b3461019e57608036600319011261019e57610c766113b6565b610c7e6113cc565b906044356064359267ffffffffffffffff841161019e573660238501121561019e57610cb7610cc994369060248160040135910161148d565b92610cc38383836115ee565b336117af565b005b3461019e57604036600319011261019e57610ce46113b6565b6024359081151580920361019e576001600160a01b0316908115610d5757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b3461019e57600036600319011261019e5760405160006001805490610d94826114e2565b80855291818116908115610e285750600114610dcf575b61019a84610dbb8186038261144f565b604051918291602083526020830190611391565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610e10575050508101602001610dbb82610dab565b80546020858701810191909152909301928101610df8565b60ff191660208087019190915292151560051b85019092019250610dbb9150839050610dab565b3461019e57600036600319011261019e576006546040516001600160a01b039091168152602090f35b3461019e57600036600319011261019e57610e916115c2565b600680546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019e57602036600319011261019e576001600160a01b03610ef66113b6565b168015610f155760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b3461019e57602036600319011261019e576020610f4c600435611774565b6040516001600160a01b039091168152f35b3461019e5760208060031936011261019e5767ffffffffffffffff60043581811161019e57610f919036906004016114c4565b91610f9a6115c2565b8251918211610b8457610fae6008546114e2565b601f8111611074575b5080601f8311600114610ff357508192600092610fe8575b5050600019600383901b1c191660019190911b17600855005b015190508280610fcf565b90601f1983169360086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b86821061105c5750508360019510611043575b505050811b01600855005b015160001960f88460031b161c19169055828080611038565b80600185968294968601518155019501930190611025565b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c8101918385106110ce575b601f0160051c01905b8181106110c25750610fb7565b600081556001016110b5565b90915081906110ac565b3461019e57610cc96110e9366113e2565b90604051926110f784611433565b60008452610cc38383836115ee565b3461019e57610cc9611117366113e2565b916115ee565b3461019e57600036600319011261019e576020600754604051908152f35b3461019e57604036600319011261019e576111546113b6565b60243561116081611774565b3315158061120f575b806111e2575b6111ca576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561116f565b506001600160a01b038116331415611169565b3461019e57602036600319011261019e5760043561123f81611774565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461019e57600036600319011261019e5760405160008054611281816114e2565b80845290600190818116908115610e2857506001146112aa5761019a84610dbb8186038261144f565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106112eb575050508101602001610dbb82610dab565b805460208587018101919091529093019281016112d3565b3461019e57602036600319011261019e576004359063ffffffff60e01b821680920361019e576020916380ac58cd60e01b811490811561135d575b811561134c575b5015158152f35b6301ffc9a760e01b14905083611345565b635b5e139f60e01b8114915061133e565b60005b8381106113815750506000910152565b8181015183820152602001611371565b906020916113aa8151809281855285808601910161136e565b601f01601f1916010190565b600435906001600160a01b038216820361019e57565b602435906001600160a01b038216820361019e57565b606090600319011261019e576001600160a01b0390600435828116810361019e5791602435908116810361019e579060443590565b60c0810190811067ffffffffffffffff821117610b8457604052565b6020810190811067ffffffffffffffff821117610b8457604052565b90601f8019910116810190811067ffffffffffffffff821117610b8457604052565b67ffffffffffffffff8111610b8457601f01601f191660200190565b92919261149982611471565b916114a7604051938461144f565b82948184528183011161019e578281602093846000960137010152565b9080601f8301121561019e578160206114df9335910161148d565b90565b90600182811c92168015611512575b60208310146114fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114f1565b9060405191826000825492611530846114e2565b90818452600194858116908160001461159f575060011461155c575b505061155a9250038361144f565b565b9093915060005260209081600020936000915b81831061158757505061155a9350820101388061154c565b8554888401850152948501948794509183019161156f565b91505061155a94506020925060ff191682840152151560051b820101388061154c565b6006546001600160a01b031633036115d657565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039182169290918315610aab576000928284528260209560028752604096848888205416968791331515806116de575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846116ab575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361168a5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611651565b91939450915080611733575b156116fa57859291879138611625565b878688611717576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611758575b806116ea57508582526004815233858984205416146116ea565b5086825260058152878220338352815260ff888320541661173e565b6000818152600260205260409020546001600160a01b0316908115611797575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b6117c1575b5050505050565b604051630a85bd0160e11b8082526001600160a01b03938416600483015295831660248201526044810191909152608060648201529492169260209291859061180e906084830190611391565b039483816000978189895af18691816118b9575b50611883575050503d60001461187a573d61183c81611471565b9061184a604051928361144f565b81528093823d92013e5b8251928361187557604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250611854565b919450915063ffffffff60e01b16036118a1575038808080806117ba565b60249060405190633250574960e11b82526004820152fd5b9091508481813d83116118f6575b6118d1818361144f565b810103126118f257516001600160e01b0319811681036118f2579038611822565b8680fd5b503d6118c7565b600019811461190c5760010190565b634e487b7160e01b600052601160045260246000fd5b1561192957565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015611abf575b506d04ee2d6d415b85acef810000000080831015611ab0575b50662386f26fc1000080831015611aa1575b506305f5e10080831015611a92575b5061271080831015611a83575b506064821015611a73575b600a80921015611a69575b600190816021818601956119fe87611471565b96611a0c604051988961144f565b808852611a1b601f1991611471565b01366020890137860101905b611a33575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215611a6457919082611a27565b611a2c565b91600101916119eb565b91906064600291049101916119e0565b600491939204910191386119d5565b600891939204910191386119c8565b601091939204910191386119b9565b602091939204910191386119a7565b60409350810491503861198e565b908151811015611ade570160200190565b634e487b7160e01b600052603260045260246000fd5b6040805167ffffffffffffffff926001600160a01b0316919080820184811182821017610b84578252601081526020916f181899199a1a9b1b9c1cb0b131b232b360811b83830152805194606086019086821090821117610b84578152602a855282850190368237845115611ade5760309053835192600193841015611ade576078602186015360005b60148110611b8e57505050505090565b600c810180821161190c5784811015611ade5782901a60046001600160f81b0319600f81611bc085851c831689611acd565b511693858a1b94600290878704821488151715611c4057868201809211611c4057611bf5611bfd9493928e9260001a92611acd565b531687611acd565b5116906003928301809311611c2b575090611c20611c26939260001a9189611acd565b536118fd565b611b7e565b601190634e487b7160e01b6000525260246000fd5b601186634e487b7160e01b6000525260246000fdfea2646970667358221220e5f33cade0dd87d1afd1d2a05c063b942ed60946ca97cf540dae20a44b6801db64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xFD JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 DUP3 SSTORE CALLER ISZERO PUSH2 0xE9 JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 DUP5 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP5 DUP1 LOG3 PUSH1 0xFA PUSH1 0x6 SSTORE CALLER DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2034 DUP2 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH2 0xD5 JUMPI SWAP1 DUP3 SWAP2 PUSH3 0x21D0 DUP4 CODECOPY SUB SWAP1 DUP3 CREATE SWAP1 DUP2 ISZERO PUSH2 0xC9 JUMPI POP AND SWAP1 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x20CD SWAP1 DUP2 PUSH3 0x103 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x24 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5694C2 EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x1AED JUMPI DUP1 PUSH4 0x129DAF84 EQ PUSH2 0x1A39 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x164E68DE EQ PUSH2 0x18EE JUMPI DUP1 PUSH4 0x1BB412D6 EQ PUSH2 0x18D0 JUMPI DUP1 PUSH4 0x2193FFE2 EQ PUSH2 0x1869 JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x184B JUMPI DUP1 PUSH4 0x42A44A9B EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x69958AB9 EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158A JUMPI DUP1 PUSH4 0x72A4DB27 EQ PUSH2 0x14AC JUMPI DUP1 PUSH4 0x72AEB81F EQ PUSH2 0x1436 JUMPI DUP1 PUSH4 0x73F4D7EA EQ PUSH2 0x140D JUMPI DUP1 PUSH4 0x77901B64 EQ PUSH2 0x13CE JUMPI DUP1 PUSH4 0x7CD7C641 EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x7DA2A9D4 EQ PUSH2 0xE12 JUMPI DUP1 PUSH4 0x87AF2278 EQ PUSH2 0xCF2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCC9 JUMPI DUP1 PUSH4 0xA2F77BCC EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xA4D290C2 EQ PUSH2 0xAF8 JUMPI DUP1 PUSH4 0xC92398FB EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0xE55E4211 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xEFAA55A0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17D JUMPI PUSH4 0xFCF66664 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15F PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x196 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x21F PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x22C PUSH1 0x2 SLOAD DUP4 LT PUSH2 0x1E0F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x407 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x3CE JUMPI DUP2 DUP7 SLOAD AND CALLER EQ PUSH2 0x389 JUMPI AND DUP1 PUSH2 0x2F1 JUMPI POP PUSH2 0x28D PUSH1 0x2 PUSH1 0x4 SWAP6 ADD SLOAD CALLVALUE EQ PUSH2 0x1D54 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE MSTORE PUSH2 0x2C3 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DB2 JUMP JUMPDEST CALLER SWAP1 PUSH32 0x45C4F9CBAFE186141862608C493F28B823FDE4C2142BEDC3F5169961A73FDD22 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x337 DUP5 SWAP2 PUSH1 0x2 PUSH1 0x0 SWAP8 PUSH2 0x305 CALLVALUE ISZERO PUSH2 0x1C96 JUMP JUMPDEST ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP7 DUP8 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x37D JUMPI PUSH1 0x4 SWAP5 PUSH2 0x350 JUMPI JUMPDEST POP PUSH2 0x28D JUMP JUMPDEST PUSH2 0x36F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x376 JUMPI JUMPDEST PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D3C JUMP JUMPDEST POP DUP6 PUSH2 0x34A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420706C617920616761696E737420796F757273656C6600000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11D85B5948185B1C9958591E48199D5B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x47616D65206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x178 JUMPI PUSH2 0x481 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x490 DUP3 SLOAD DUP5 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x498 PUSH2 0x1DEC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x3 DUP6 ADD SWAP3 DUP4 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x4 SUB PUSH2 0x80C JUMPI DUP6 DUP2 GT PUSH2 0x7D2 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 AND PUSH1 0x1 PUSH1 0xA9 SHL OR DUP6 SSTORE TIMESTAMP PUSH1 0x6 DUP9 ADD SSTORE DUP1 PUSH2 0x63B JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND SWAP2 POP DUP2 PUSH2 0x557 JUMPI POP POP POP PUSH1 0x0 DUP1 DUP1 DUP6 SWAP5 DUP5 PUSH1 0x1 DUP4 DUP1 DUP1 DUP1 DUP1 SWAP11 PUSH2 0x548 SWAP14 SLOAD AND SWAP7 DUP13 ADD SWAP7 DUP8 SLOAD SWAP1 GAS CALL SWAP8 PUSH2 0x52A PUSH2 0x1E9A JUMP JUMPDEST POP ADD SLOAD AND SWAP1 SLOAD SWAP1 GAS CALL PUSH2 0x53B PUSH2 0x1E9A JUMP JUMPDEST POP DUP2 PUSH2 0x54F JUMPI JUMPDEST POP PUSH2 0x1F94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST SWAP1 POP DUP3 PUSH2 0x542 JUMP JUMPDEST DUP6 SLOAD SWAP5 DUP7 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x37D JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 SWAP4 PUSH2 0x5EA SWAP10 DUP12 SWAP10 PUSH2 0x61E JUMPI JUMPDEST POP SLOAD AND SWAP5 ADD SLOAD AND SWAP2 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x600 JUMPI JUMPDEST POP POP PUSH2 0x548 JUMP JUMPDEST DUP2 PUSH2 0x616 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x634 SWAP1 DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP12 PUSH2 0x5B6 JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SUB PUSH2 0x7BE JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 DUP2 ADD SWAP7 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP6 AND SWAP10 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD SLOAD DUP1 PUSH1 0x1 SHL SWAP6 DUP2 DUP8 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x7A8 JUMPI DUP2 PUSH2 0x6AB PUSH2 0x2710 PUSH2 0x6A3 PUSH1 0x6 SLOAD DUP10 PUSH2 0x1E51 JUMP JUMPDEST DIV DUP1 SWAP8 PUSH2 0x1E64 JUMP JUMPDEST SWAP7 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x6C4 DUP7 DUP3 SLOAD PUSH2 0x1E71 JUMP JUMPDEST SWAP1 SSTORE SLOAD AND DUP1 PUSH2 0x71C JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x70E PUSH1 0x0 DUP1 DUP1 DUP1 PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 SWAP10 PUSH1 0x40 SWAP10 GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST POP PUSH2 0x1ECA JUMP JUMPDEST DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG3 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x37D JUMPI PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 SWAP5 PUSH1 0x40 SWAP5 PUSH2 0x78B JUMPI JUMPDEST POP PUSH2 0x70E JUMP JUMPDEST PUSH2 0x7A1 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP8 PUSH2 0x785 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B2103932B9B7B63ABA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11D85B59481B9BDD08191A5CDC1D5D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x859 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x44 CALLDATALOAD LT ISZERO PUSH2 0x178 JUMPI PUSH2 0x86C PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0xABF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA4F JUMPI PUSH2 0x88F PUSH1 0x4 CALLDATALOAD CALLVALUE EQ PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x89B DUP2 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x8AB DUP4 PUSH2 0x1CE1 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 PUSH2 0x8E0 PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP6 ADD DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP1 DUP3 AND OR SWAP1 SWAP8 SSTORE SWAP9 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP2 MLOAD DUP9 DUP3 ADD SLOAD SWAP4 MLOAD SWAP9 SWAP6 AND SWAP4 SWAP2 SWAP1 DUP9 LT ISZERO PUSH2 0x441 JUMPI MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x20 SWAP8 PUSH1 0x7 SWAP5 PUSH2 0x120 SWAP5 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND OR OR PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x9F5 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP5 DUP4 ADD MSTORE PUSH2 0xA1B SWAP1 DUP3 ADD PUSH1 0x44 CALLDATALOAD PUSH2 0x1C50 JUMP JUMPDEST DUP2 PUSH32 0xABD75EC9F1A7C8F5CF37DBF68608FA6E61D2986CF77CF390A28ECA7B1D4B4DCA PUSH1 0x60 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xA59 CALLVALUE ISZERO PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0xAA1 JUMPI JUMPDEST POP PUSH2 0x88F JUMP JUMPDEST PUSH2 0xAB8 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP2 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5761676572206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0xB46 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xB89 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xBA2 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 PUSH2 0xBEA PUSH1 0xA0 DUP3 SWAP1 SHR DUP4 AND PUSH1 0x80 DUP6 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x140 SWAP3 PUSH1 0x7 SWAP2 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC85 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0xC97 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD13 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xD43 SWAP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND EQ SWAP2 DUP3 ISZERO PUSH2 0xE00 JUMPI JUMPDEST POP POP PUSH2 0x1F54 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xDF5 JUMPI JUMPDEST POP ISZERO PUSH2 0xDB0 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xAA SHL OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0x8FD73C8C4472189916C71B5CF4047BC9088A7481F333C1063FA93E70F1A469F8 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206469737075746520746869732067616D650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP5 PUSH2 0xD72 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 CALLER SWAP3 ADD SLOAD AND EQ DUP4 DUP1 PUSH2 0xD3C JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0xE2B PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0xE33 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x2D9125815FF94ED1F67BCAED3480C73AF82B355E90DE77479081CD2ED35F9A1C SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0xE91 PUSH2 0x1C0C JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1390 JUMPI PUSH2 0xEB7 PUSH1 0x2 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xEBF PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 SUB PUSH2 0x1359 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1340 JUMPI JUMPDEST ISZERO PUSH2 0x12FB JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP4 AND PUSH1 0x1 PUSH1 0xA9 SHL OR PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP1 DUP3 ISZERO PUSH1 0x1 DUP5 SWAP1 SHL DUP5 SWAP1 DIV SWAP1 SWAP2 EQ OR ISZERO PUSH2 0x7A8 JUMPI PUSH2 0xF82 PUSH2 0x2710 PUSH2 0xF77 PUSH1 0x6 SLOAD DUP6 PUSH1 0x1 SHL PUSH2 0x1E51 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH1 0x1 SHL PUSH2 0x1E64 JUMP JUMPDEST SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xFA3 DUP4 DUP3 SLOAD PUSH2 0x1E71 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1298 JUMPI POP PUSH2 0xFCD PUSH1 0x0 DUP1 DUP1 DUP1 DUP9 DUP9 GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST PUSH2 0xFE0 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP7 AND DUP2 SUB PUSH2 0x128F JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x2 SWAP1 JUMPDEST ADD SLOAD PUSH1 0x0 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP4 SWAP1 SWAP2 DUP5 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x127F JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP3 LT ISZERO PUSH2 0x1272 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP3 LT ISZERO PUSH2 0x1265 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP3 LT ISZERO PUSH2 0x1258 JUMPI JUMPDEST POP PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x1249 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x123B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP2 LT ISZERO PUSH2 0x1231 JUMPI JUMPDEST PUSH1 0x1 DUP8 ADD SWAP6 DUP2 PUSH1 0x21 PUSH2 0x10C9 PUSH2 0x10B3 DUP11 PUSH2 0x1E7E JUMP JUMPDEST SWAP10 PUSH2 0x10C1 PUSH1 0x40 MLOAD SWAP12 DUP13 PUSH2 0x1D1A JUMP JUMPDEST DUP1 DUP12 MSTORE PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP11 ADD SWAP11 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP13 CALLDATACOPY DUP10 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP11 DUP3 ISZERO PUSH2 0x110A JUMPI POP DUP3 SWAP1 PUSH2 0x10DA JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x11B3 PUSH1 0x0 SWAP3 PUSH2 0x114A PUSH2 0x115A PUSH1 0x2D PUSH1 0x20 SWAP11 PUSH2 0x119C SWAP13 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH13 0x6F726269742D77696E6E65722D PUSH1 0x98 SHL DUP16 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x1F0C JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30ECD29 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE SWAP2 SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x3 NOT DUP5 DUP4 SUB ADD PUSH1 0x84 DUP6 ADD MSTORE PUSH2 0x1F2F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x1206 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x122A JUMPI JUMPDEST PUSH2 0x121C DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x178 JUMPI DUP4 PUSH2 0x11C2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1212 JUMP JUMPDEST SWAP6 PUSH1 0x1 ADD SWAP6 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP7 ADD SWAP6 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x4 SWAP2 DIV SWAP7 ADD SWAP6 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x8 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x10 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x20 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 SWAP8 POP PUSH1 0x4 CALLDATALOAD DIV SWAP1 POP DUP11 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x12DC JUMPI JUMPDEST POP PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x12F4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP5 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57696E6E6572206D757374206265206120706C61796572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x47616D65206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420617574686F72697A65642072656665726565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13EF PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1461 JUMPI PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x3 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 EQ PUSH2 0x1497 JUMPI JUMPDEST PUSH2 0x1492 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST SWAP2 PUSH2 0x14A4 PUSH2 0x1492 SWAP2 PUSH2 0x1D97 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1489 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14CD PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 SUB PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x54 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1539 JUMPI PUSH1 0x20 SWAP3 DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x47616D65206D75737420626520616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x15A3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x160A PUSH1 0x2 SLOAD DUP4 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x1638 SWAP2 DUP4 AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x17D2 JUMPI JUMPDEST POP PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1640 PUSH2 0x1DEC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x178D JUMPI DUP4 PUSH1 0x1 DUP7 ADD SLOAD AND PUSH2 0x1748 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 AND PUSH1 0x3 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP3 AND DUP1 PUSH2 0x16D8 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 DUP5 PUSH1 0x2 DUP3 SWAP6 PUSH2 0x16AA SWAP8 SLOAD AND SWAP2 ADD SLOAD SWAP1 GAS CALL PUSH2 0x542 PUSH2 0x1E9A JUMP JUMPDEST CALLER SWAP1 PUSH32 0x58F64E02B3A6D2A3BD28B7700A0A0D6699545BCB55BF917AC0FF670F3A509EFB PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST DUP4 SLOAD PUSH1 0x2 SWAP1 SWAP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x172A JUMPI JUMPDEST POP POP PUSH2 0x16AA JUMP JUMPDEST DUP2 PUSH2 0x1740 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP2 DUP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C61796572203220616C7265616479206A6F696E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C206163746976652067616D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD SLOAD DUP4 AND CALLER EQ SWAP1 POP DUP6 PUSH2 0x1632 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x17FB PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x981AC5CAE2FB338FA3B83661B9DB1ADF2471E4DD1E089498A55476854339DD1B SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1882 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x188A PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x6387E6721C9B8E49669C1D962E31FE0EA2C1467B3106425BC787D42D5208D6D7 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1908 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1910 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1918 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x1966 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 PUSH2 0x548 SWAP5 DUP2 SWAP5 PUSH1 0x1 SLOAD AND GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19F7 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x1A05 JUMPI PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1A5B PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x1AD9 JUMPI DUP7 DUP7 PUSH2 0x1A99 DUP3 DUP9 SUB DUP4 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AC2 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1AB3 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1A83 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH2 0x1B86 PUSH1 0x3 DUP5 ADD SLOAD DUP3 PUSH1 0x4 DUP7 ADD SLOAD AND SWAP3 PUSH1 0x5 DUP7 ADD SLOAD SWAP5 PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x1B76 PUSH1 0x80 DUP9 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 DUP9 ADD SWAP2 PUSH1 0xA8 SHR AND PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1BB7 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1BE8 SWAP2 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C9D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F206E6F742073656E6420455448207769746820746F6B656E207761676572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x178 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x178 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1DD4 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1C22 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1DFD JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11D85B5948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x7A8 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x7A8 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7A8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1EC5 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EAB DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 PUSH2 0x1EB9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1D1A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ED1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1F1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F0F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F48 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA10309033B0B6B290383630BCB2B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x115512081C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x441 JUMPI DUP1 ISZERO PUSH2 0x206D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x203D JUMPI PUSH1 0x2 EQ PUSH2 0x2015 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1FFE DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x2AB735B737BBB7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2021 DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x5461626C652054656E6E6973 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x204A DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x526F636B2050617065722053636973736F7273 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x207A DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x50757368757020426174746C65 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xEF DUP6 0xC PUSH10 0xD3CDCFDA699DD2968E2A GAS 0x1F MUL DUP3 BYTE 0xB5 0xD3 0x2D DUP8 0x4F RETURNDATASIZE 0xB2 LOG3 SDIV SSTORE 0x4C RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER PUSH1 0x80 CALLVALUE PUSH3 0x34D JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x337 JUMPI DUP4 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 SWAP1 PUSH12 0x27B93134BA102BB4B73732B9 PUSH1 0xA1 SHL DUP3 DUP3 ADD MSTORE DUP4 MLOAD DUP5 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH3 0x337 JUMPI DUP6 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x27A92124AA16ABA4A7 PUSH1 0xB9 SHL DUP4 DUP3 ADD MSTORE DUP2 MLOAD SWAP4 DUP1 DUP6 GT PUSH3 0x337 JUMPI PUSH1 0x0 SWAP5 DUP1 PUSH3 0x82 DUP8 SLOAD PUSH3 0x352 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH3 0x307 JUMPI JUMPDEST POP DUP7 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x29F JUMPI DUP9 SWAP3 PUSH3 0x293 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST DUP2 MLOAD SWAP1 DUP2 GT PUSH3 0x27F JUMPI DUP1 PUSH1 0x1 SWAP3 PUSH3 0xD4 DUP5 SLOAD PUSH3 0x352 JUMP JUMPDEST DUP6 DUP2 GT PUSH3 0x244 JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI DUP8 SWAP3 PUSH3 0x1D4 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x1BC JUMPI PUSH1 0x6 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP6 DUP1 LOG3 PUSH3 0x15D PUSH1 0x8 SLOAD PUSH3 0x352 JUMP JUMPDEST SWAP2 DUP2 DUP4 GT PUSH3 0x19A JUMPI JUMPDEST PUSH32 0x68747470733A2F2F6F726269742E6170702F6170692F6E66742F000000000034 PUSH1 0x8 SSTORE DUP5 MLOAD PUSH2 0x1C8B SWAP1 DUP2 PUSH3 0x3A9 DUP3 CODECOPY RETURN JUMPDEST DUP4 PUSH1 0x8 PUSH3 0x1B2 SWAP6 MSTORE KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH3 0x167 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xF3 JUMP JUMPDEST DUP5 DUP9 MSTORE DUP7 DUP9 KECCAK256 DUP6 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP10 DUP3 DUP3 LT PUSH3 0x22D JUMPI POP POP DUP5 GT PUSH3 0x213 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x107 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x205 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP9 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x1F2 JUMP JUMPDEST PUSH3 0x26E SWAP1 DUP6 DUP10 MSTORE DUP8 DUP10 KECCAK256 DUP8 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP8 LT PUSH3 0x275 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE PUSH3 0xDD JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x262 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xA5 JUMP JUMPDEST DUP9 DUP1 MSTORE DUP8 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP10 DUP3 DUP3 LT PUSH3 0x2F0 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x2D6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0xBA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2C8 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x2AE JUMP JUMPDEST PUSH3 0x330 SWAP1 DUP10 DUP1 MSTORE DUP9 DUP11 KECCAK256 DUP9 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP8 LT PUSH3 0x275 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE PUSH3 0x8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x384 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x36E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x362 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x39B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x38F JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1303 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1260 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x111D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1106 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x10D8 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0xF5E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xF2E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xED5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xD70 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xCCB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xC3B34A40 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xD58A0E12 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A3 JUMPI PUSH4 0xF4025AAB EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x19A DUP2 DUP4 SLOAD AND SWAP2 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP3 PUSH2 0x149 PUSH1 0x2 DUP3 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH2 0x182 PUSH2 0x163 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD PUSH2 0x151C JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1BC PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x218 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x6 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x24A PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x2AD DUP2 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x2EE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x19A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x30A DUP5 PUSH2 0x1417 JUMP JUMPDEST DUP5 DUP3 SLOAD AND DUP5 MSTORE DUP5 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 DUP2 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0x38A PUSH2 0x32D PUSH1 0x2 DUP4 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 PUSH1 0x3 DUP5 ADD SLOAD SWAP6 PUSH1 0x60 DUP10 ADD SWAP7 DUP8 MSTORE PUSH2 0x35A PUSH1 0x5 PUSH1 0x4 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP13 ADD SWAP8 DUP9 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP6 PUSH1 0xA0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP3 DUP13 MSTORE MLOAD AND SWAP1 DUP11 ADD MSTORE MLOAD AND PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FB DUP3 PUSH2 0x1417 JUMP JUMPDEST DUP3 DUP6 SLOAD AND DUP3 MSTORE DUP2 PUSH1 0x1 SWAP6 DUP5 DUP8 DUP3 ADD SLOAD AND SWAP5 DUP7 DUP4 ADD SWAP6 DUP7 MSTORE PUSH2 0x487 PUSH2 0x480 PUSH2 0x477 PUSH2 0x427 PUSH1 0x2 DUP7 ADD PUSH2 0x151C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP8 ADD SWAP5 DUP6 MSTORE PUSH2 0x46F DUP2 PUSH2 0x467 PUSH2 0x45A PUSH1 0x5 PUSH1 0x3 DUP12 ADD SLOAD SWAP11 PUSH1 0x60 DUP14 ADD SWAP12 DUP13 MSTORE PUSH1 0x80 PUSH1 0x4 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP11 PUSH1 0xA0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x1965 JUMP JUMPDEST SWAP11 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP10 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 MLOAD SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD SWAP6 DUP8 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP8 PUSH1 0x0 SWAP2 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x4A1 DUP3 PUSH2 0x14E2 JUMP JUMPDEST SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x639 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5D8 JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x4D5 DUP5 PUSH1 0x36 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 PUSH2 0x5C4 SWAP14 SWAP11 SWAP9 SWAP7 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH8 0x3F77696E6E65723D PUSH1 0xC0 SHL DUP2 MSTORE PUSH2 0x4F7 DUP3 MLOAD DUP1 SWAP4 DUP14 PUSH1 0x8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH10 0x266F70706F6E656E743D PUSH1 0xB0 SHL PUSH1 0x8 DUP3 ADD MSTORE PUSH2 0x51E DUP3 MLOAD DUP1 SWAP4 DUP13 PUSH1 0x12 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH6 0x2667616D653D PUSH1 0xD0 SHL PUSH1 0x12 DUP3 ADD MSTORE PUSH2 0x541 DUP3 MLOAD DUP1 SWAP4 DUP12 PUSH1 0x18 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH7 0x2677616765723D PUSH1 0xC8 SHL PUSH1 0x18 DUP3 ADD MSTORE PUSH2 0x565 DUP3 MLOAD DUP1 SWAP4 DUP11 PUSH1 0x1F DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH11 0x2674696D657374616D703D PUSH1 0xA8 SHL PUSH1 0x1F DUP3 ADD MSTORE PUSH2 0x58D DUP3 MLOAD DUP1 SWAP4 DUP10 PUSH1 0x2A DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH12 0x2673637265656E73686F743D PUSH1 0xA0 SHL PUSH1 0x2A DUP3 ADD MSTORE PUSH2 0x5B5 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD SUB PUSH1 0x16 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x19A PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x61F JUMPI POP POP POP DUP9 ADD DUP3 ADD SWAP1 DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST DUP1 SLOAD SWAP12 DUP4 ADD DUP7 ADD SWAP12 SWAP1 SWAP12 MSTORE DUP14 SWAP11 DUP14 SWAP6 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x607 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP14 ADD MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP10 ADD DUP4 ADD SWAP2 POP DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x66F PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x697 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x6B7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0x6C0 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP3 PUSH2 0x6CD DUP5 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6DD DUP3 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP4 MSTORE SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x76A PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC16 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBA5 JUMPI PUSH1 0xA0 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xB9A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x7DD PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB3D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xACF JUMPI PUSH1 0x5 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xAC4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x824 DUP2 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP5 SWAP1 DUP3 PUSH2 0xA74 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0xA5B JUMPI DUP4 EXTCODESIZE PUSH2 0x925 JUMPI JUMPDEST POP SWAP2 DUP2 PUSH32 0xF65F8AF45D2C7B79A3F8A4CA6A7769347F5C993567035809652D932123642A00 PUSH2 0x907 PUSH1 0x20 SWAP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP3 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0x95F PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xA16 JUMPI JUMPDEST POP PUSH2 0x9E0 JUMPI DUP5 RETURNDATASIZE ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x98F DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x99D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP2 MLOAD SWAP2 DUP3 PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x9F5 JUMPI DUP2 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA53 JUMPI JUMPDEST DUP2 PUSH2 0xA32 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 DUP7 PUSH2 0x978 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x802 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB25 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x5 SWAP7 SWAP5 LT PUSH2 0xB0C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x818 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAFE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xB7D JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xB71 JUMPI POP POP PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB5B JUMP JUMPDEST POP DUP1 PUSH2 0xB5B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x790 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBFE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA0 SWAP8 SWAP7 SWAP5 LT PUSH2 0xBE5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x7A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xC56 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xC4A JUMPI POP POP PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC34 JUMP JUMPDEST POP DUP1 PUSH2 0xC34 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xC76 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x19E JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x19E JUMPI PUSH2 0xCB7 PUSH2 0xCC9 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP3 PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLER PUSH2 0x17AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xCE4 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xD57 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xD94 DUP3 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0xDCF JUMPI JUMPDEST PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0xE10 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xDBB SWAP2 POP DUP4 SWAP1 POP PUSH2 0xDAB JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xE91 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF6 PUSH2 0x13B6 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH2 0xF4C PUSH1 0x4 CALLDATALOAD PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x19E JUMPI PUSH2 0xF91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0xF9A PUSH2 0x15C2 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0xFAE PUSH1 0x8 SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1074 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFF3 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xFE8 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0xFCF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x105C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1043 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x10CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x10C2 JUMPI POP PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x10E9 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F7 DUP5 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x1117 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP2 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1154 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1160 DUP2 PUSH2 0x1774 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x120F JUMPI JUMPDEST DUP1 PUSH2 0x11E2 JUMPI JUMPDEST PUSH2 0x11CA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x116F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1169 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x123F DUP2 PUSH2 0x1774 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x1281 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12AA JUMPI PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x12EB JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x12D3 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x20 SWAP2 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x135D JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x134C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1345 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x133E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1381 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x13AA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB84 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1499 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x14A7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x19E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x19E JUMPI DUP2 PUSH1 0x20 PUSH2 0x14DF SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1512 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14FC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1530 DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x159F JUMPI POP PUSH1 0x1 EQ PUSH2 0x155C JUMPI JUMPDEST POP POP PUSH2 0x155A SWAP3 POP SUB DUP4 PUSH2 0x144F JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1587 JUMPI POP POP PUSH2 0x155A SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x156F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x155A SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x16DE JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x16AB JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x168A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1651 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1733 JUMPI JUMPDEST ISZERO PUSH2 0x16FA JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1625 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1717 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1758 JUMPI JUMPDEST DUP1 PUSH2 0x16EA JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x16EA JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x173E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1797 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x17C1 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x180E SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x18B9 JUMPI JUMPDEST POP PUSH2 0x1883 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x187A JUMPI RETURNDATASIZE PUSH2 0x183C DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP1 PUSH2 0x184A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1854 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x18A1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x18F6 JUMPI JUMPDEST PUSH2 0x18D1 DUP2 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x18F2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x18F2 JUMPI SWAP1 CODESIZE PUSH2 0x1822 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x190C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x1ABF JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x1AB0 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x1AA1 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x1A92 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x1A83 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x1A73 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1A69 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x19FE DUP8 PUSH2 0x1471 JUMP JUMPDEST SWAP7 PUSH2 0x1A0C PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x144F JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x1A1B PUSH1 0x1F NOT SWAP2 PUSH2 0x1471 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x1A33 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x1A64 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x198E JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1ADE JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP1 DUP3 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0xB84 JUMPI DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP4 DUP4 ADD MSTORE DUP1 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP7 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0xB84 JUMPI DUP2 MSTORE PUSH1 0x2A DUP6 MSTORE DUP3 DUP6 ADD SWAP1 CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 LT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x1B8E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC DUP2 ADD DUP1 DUP3 GT PUSH2 0x190C JUMPI DUP5 DUP2 LT ISZERO PUSH2 0x1ADE JUMPI DUP3 SWAP1 BYTE PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF DUP2 PUSH2 0x1BC0 DUP6 DUP6 SHR DUP4 AND DUP10 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP4 DUP6 DUP11 SHL SWAP5 PUSH1 0x2 SWAP1 DUP8 DUP8 DIV DUP3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1C40 JUMPI DUP7 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C40 JUMPI PUSH2 0x1BF5 PUSH2 0x1BFD SWAP5 SWAP4 SWAP3 DUP15 SWAP3 PUSH1 0x0 BYTE SWAP3 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 AND DUP8 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x3 SWAP3 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1C2B JUMPI POP SWAP1 PUSH2 0x1C20 PUSH2 0x1C26 SWAP4 SWAP3 PUSH1 0x0 BYTE SWAP2 DUP10 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 RETURN EXTCODECOPY 0xAD 0xE0 0xDD DUP8 0xD1 0xAF 0xD1 0xD2 LOG0 0x5C MOD EXTCODESIZE SWAP5 0x2E 0xD6 MULMOD CHAINID 0xCA SWAP8 0xCF SLOAD 0xD 0xAE KECCAK256 LOG4 0x4B PUSH9 0x1DB64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"732:15290:17:-:0;;;;;;;2061:21:10;732:15290:17;1857:1:10;732:15290:17;;3803:10;1273:26:0;1269:95;;-1:-1:-1;1857:1:10;732:15290:17;;-1:-1:-1;;;;;;732:15290:17;;;3803:10;732:15290;;;;;;;;;;-1:-1:-1;;;;;732:15290:17;3803:10;;732:15290;;3052:40:0;3803:10:17;;3052:40:0;2075:3:17;;732:15290;3803:10;732:15290;;3881:18;732:15290;;;;;;;-1:-1:-1;;732:15290:17;1857:1:10;732:15290:17;;;3987:20;;;;;-1:-1:-1;;;;;3987:20:17;;;;;;;;;;;;;;;;;;;;;;;732:15290;;;3975:32;732:15290;;;3975:32;732:15290;;;;;;;;;;3987:20;732:15290;;;;;;;;;;3987:20;-1:-1:-1;;;732:15290:17;;;;;;;;1269:95:0;732:15290:17;1322:31:0;;;;;;;;;732:15290:17;1322:31:0;732:15290:17;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7158,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_36771":{"entryPoint":7180,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":7484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_GameMode":{"entryPoint":7248,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_GameStatus":{"entryPoint":7261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":7983,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7806,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":7602,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":7793,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7761,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7780,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7948,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":7834,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":7450,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_36775":{"entryPoint":7393,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_43182":{"entryPoint":7422,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":7274,"id":84,"parameterSlots":0,"returnSlots":0},"fun_gameModeToString":{"entryPoint":8148,"id":7908,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":7660,"id":1690,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":7575,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_5f75":{"entryPoint":8084,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_785c":{"entryPoint":7508,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9b2f":{"entryPoint":7318,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b1fa":{"entryPoint":8020,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c11e":{"entryPoint":7695,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c7c2":{"entryPoint":7882,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":7202,"id":null,"parameterSlots":2,"returnSlots":2},"write_to_memory_enum_GameMode":{"entryPoint":7590,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630a5694c214611b9e578063117a5b9014611aed578063129daf8414611a3957806312e8e2c3146119db578063164e68de146118ee5780631bb412d6146118d05780632193ffe21461186957806322dcd13e1461184b57806342a44a9b146117e257806369958ab9146115e7578063715018a61461158a57806372a4db27146114ac57806372aeb81f1461143657806373f4d7ea1461140d57806377901b64146113ce5780637cd7c64114610e785780637da2a9d414610e1257806387af227814610cf25780638da5cb5b14610cc9578063a2f77bcc14610b21578063a4d290c214610af8578063c92398fb14610845578063e55e421114610457578063efaa55a014610206578063f2fde38b1461017d5763fcf666640361000e5734610178576020366003190112610178576001600160a01b0361015f611bf6565b1660005260076020526020604060002054604051908152f35b600080fd5b3461017857602036600319011261017857610196611bf6565b61019e611c6a565b6001600160a01b039081169081156101ed57600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b602080600319360112610178576004359061021f611dec565b61022c6002548310611e0f565b816000526003815260406000209060038201805460ff8160a81c166005811015610441576104075760018401805490916001600160a01b039182166103ce578186541633146103895716806102f1575061028d600260049501543414611d54565b336001600160601b0360a01b825416179055600160a81b60ff60a81b1982541617905533600052526102c3816040600020611db2565b33907f45c4f9cbafe186141862608c493f28b823fde4c2142bedc3f5169961a73fdd22600080a36001600055005b610337849160026000976103053415611c96565b01546040516323b872dd60e01b8152336004820152306024820152604481019190915296879283919082906064820190565b03925af193841561037d57600494610350575b5061028d565b61036f90843d8611610376575b6103678183611d1a565b810190611d3c565b508561034a565b503d61035d565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260048101869052601c60248201527f43616e6e6f7420706c617920616761696e737420796f757273656c66000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601160248201527011d85b5948185b1c9958591e48199d5b1b607a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052601260248201527147616d65206e6f7420617661696c61626c6560701b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b346101785760403660031901126101785760043560243560ff811680910361017857610481611c6a565b60029061049082548410611e0f565b610498611dec565b82600052602060038152604060002093600385019283549060ff8260a81c1660058110156104415760040361080c578581116107d25760ff60a81b198216600160a91b1785554260068801558061063b57505082546001600160a01b03939084169150816105575750505060008080859484600183808080809a6105489d5416968c01968754905af19761052a611e9a565b500154169054905af161053b611e9a565b508161054f575b50611f94565b6001600055005b905082610542565b8554948601805460405163a9059cbb60e01b8082529787166001600160a01b03166004820152602481019190915293969395939290919087908790816000816044810103925af194851561037d576001816000936105ea998b9961061e575b505416940154169154936040519687958694859384526004840160209093929193604081019460018060a01b031681520152565b03925af1801561037d57610600575b5050610548565b8161061692903d10610376576103678183611d1a565b5080806105f9565b610634908a3d8c11610376576103678183611d1a565b508b6105b6565b939591949093909291906001036107be5780546001600160a01b0316905b60048101968460018060a01b0392838516998a6001600160601b0360a01b82541617905501548060011b9581870414901517156107a857816106ab6127106106a360065489611e51565b048097611e64565b96166000526007845260406000206106c4868254611e71565b905554168061071c575091839161070e60008080807fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c38996040995af1610708611e9a565b50611eca565b8351928352820152a3610548565b60405163a9059cbb60e01b81526001600160a01b039290921660048301526024820185905290939192908390859060449082906000905af192831561037d577fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c389460409461078b575b5061070e565b6107a190823d8411610376576103678183611d1a565b5087610785565b634e487b7160e01b600052601160045260246000fd5b60018101546001600160a01b031690610659565b60405162461bcd60e51b815260048101859052601260248201527124b73b30b634b2103932b9b7b63aba34b7b760711b6044820152606490fd5b60405162461bcd60e51b815260048101859052601160248201527011d85b59481b9bdd08191a5cdc1d5d1959607a1b6044820152606490fd5b606036600319011261017857610859611c0c565b600360443510156101785761086c611dec565b60043515610abf576001600160a01b038116610a4f5761088f6004353414611d54565b60025461089b81611d97565b600255604051916108ab83611ce1565b3383526020830160008152604084019360043585526060810160018060a01b038416815260808201906108e060443583611da6565b600060a0840181815260c085018290524260e086015261010085018290526101208501829052878252600360208190526040909220855181546001600160a01b03199081166001600160a01b03928316178355975160018301805490991690821617909755985160028a015591518882015493519895169391908810156104415751916005831015610441576020976007946101209460ff60a81b9060a81b169269ffffffffffffffffffff60b01b16179060ff60a01b9060a01b16171760038501556004840160018060a01b0360c0830151166001600160601b0360a01b82541617905560e081015160058501556101008101516006850155015191015533600052600483526109f5826040600020611db2565b6040805160043581526001600160a01b0390921684830152610a1b908201604435611c50565b817fabd75ec9f1a7c8f5cf37dbf68608fa6e61d2986cf77cf390a28eca7b1d4b4dca60603393a36001600055604051908152f35b610a593415611c96565b6040516323b872dd60e01b81523360048083019190915230602483015235604482015260208160648160006001600160a01b0387165af1801561037d57610aa1575b5061088f565b610ab89060203d8111610376576103678183611d1a565b5081610a9b565b60405162461bcd60e51b815260206004820152601160248201527005761676572206d757374206265203e203607c1b6044820152606490fd5b34610178576000366003190112610178576009546040516001600160a01b039091168152602090f35b34610178576020366003190112610178576004356000610120604051610b4681611ce1565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152610b896002548210611e0f565b60005260036020526040600020604051610ba281611ce1565b81546001600160a01b039081168252600183015481166020830152600283015460408301526003830154908116606083015260ff90610bea60a082901c831660808501611da6565b60a81c166005811015610441576101409260079160a084015260018060a01b0360048201541660c0840152600581015460e0840152600681015461010084015201546101208201526101206040519160018060a01b03815116835260018060a01b0360208201511660208401526040810151604084015260018060a01b036060820151166060840152610c8560808201516080850190611c50565b610c9760a082015160a0850190611c5d565b60c0818101516001600160a01b03169084015260e0808201519084015261010080820151908401520151610120820152f35b34610178576000366003190112610178576001546040516001600160a01b039091168152602090f35b3461017857602036600319011261017857600435610d136002548210611e0f565b60008181526003602052604090208054610d4391336001600160a01b0392831614918215610e00575b5050611f54565b8060005260036020526003604060002001805460ff8160a81c1660058110156104415760018114908115610df5575b5015610db05760ff60a81b1916600160aa1b17905533907f8fd73c8c4472189916c71b5cf4047bc9088a7481f333c1063fa93e70f1a469f8600080a3005b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74206469737075746520746869732067616d6500000000000000006044820152606490fd5b600291501484610d72565b90915060013392015416148380610d3c565b3461017857602036600319011261017857610e2b611bf6565b610e33611c6a565b6001600160a01b03166000818152600560205260408120805460ff191690557f2d9125815ff94ed1f67bcaed3480c73af82b355e90de77479081cd2ed35f9a1c9080a2005b3461017857606036600319011261017857610e91611c0c565b33600052600560205260ff604060002054161561139057610eb760025460043510611e0f565b610ebf611dec565b600435600052600360205260406000209060038201549160ff8360a81c166005811015610441576001036113595780546001600160a01b038381169116148015611340575b156112fb5760ff60a81b198316600160a91b1760038201556004810180546001600160a01b0319166001600160a01b038416179055426006820155604435600782015560028082015491908215600184901b84900490911417156107a857610f82612710610f776006548560011b611e51565b04809360011b611e64565b9360018060a01b031660005260076020526040600020610fa3838254611e71565b905560038101546001600160a01b0316806112985750610fcd600080808088885af1610708611e9a565b610fe060ff600383015460a01c16611fd4565b60095482546001600160a01b03918216939291908116908616810361128f575060018201546001600160a01b0316916002905b0154600093600435939091847a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561127f575b506d04ee2d6d415b85acef810000000080821015611272575b50662386f26fc1000080821015611265575b506305f5e10080821015611258575b50612710811015611249575b606481101561123b575b600a80911015611231575b60018701958160216110c96110b38a611e7e565b996110c16040519b8c611d1a565b808b52611e7e565b60208a019a90601f1901368c378901015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908a821561110a575082906110da565b925050506111b360009261114a61115a602d60209a61119c9c6040519485926c6f726269742d77696e6e65722d60981b8f85015251809285850190611f0c565b810103600d810184520182611d1a565b60405163030ecd2960e61b81526001600160a01b03948516600482015293909516602484015260a06044840152919788968795869492909160a4860190611f2f565b916064850152600319848303016084850152611f2f565b03925af1801561037d57611206575b50604051928352602083015260018060a01b0316907fa3a193cd49fb44d3709b2d13235998e900d960268b8356d3c2233340fd215c38604060043592a36001600055005b602090813d831161122a575b61121c8183611d1a565b8101031261017857836111c2565b503d611212565b956001019561109f565b606460029104960195611094565b6127106004910496019561108a565b600891049601958a61107e565b601091049601958a61106f565b602091049601958a61105d565b604097506004350490508a611044565b60029092611013565b60405163a9059cbb60e01b81526001600160a01b03851660048201526024810186905290602090829060449082906000905af1801561037d576112dc575b50610fcd565b6112f49060203d602011610376576103678183611d1a565b50846112d6565b60405162461bcd60e51b815260206004820152601760248201527f57696e6e6572206d757374206265206120706c617965720000000000000000006044820152606490fd5b5060018101546001600160a01b03838116911614610f04565b60405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754e6f7420617574686f72697a6564207265666572656560501b6044820152606490fd5b34610178576020366003190112610178576001600160a01b036113ef611bf6565b166000526005602052602060ff604060002054166040519015158152f35b34610178576000366003190112610178576008546040516001600160a01b039091168152602090f35b3461017857600036600319011261017857600080600254905b81811061146157602083604051908152f35b8060005260ff6003806020526040600020015460a81c16600581101561044157600114611497575b61149290611d97565b61144f565b916114a461149291611d97565b929050611489565b34610178576020366003190112610178576004356114cd6002548210611e0f565b80600052600360205260ff60036040600020015460a81c1660058110156104415760010361154f5760405190602082019081524260408301523360601b606083015260548252608082019082821067ffffffffffffffff83111761153957602092826040525190208152f35b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601360248201527247616d65206d7573742062652061637469766560681b6044820152606490fd5b34610178576000366003190112610178576115a3611c6a565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017857602080600319360112610178576004359061160a6002548310611e0f565b6000828152600382526040902080546001600160a01b039161163891831633149081156117d2575b50611f54565b611640611dec565b82600052600382526040600020916003830180549060ff8260a81c1660058110156104415761178d57836001860154166117485760ff60a81b198216600360a81b1790558216806116d85750506000808084600282956116aa975416910154905af1610542611e9a565b33907f58f64e02b3a6d2a3bd28b7700a0a0d6699545bcb55bf917ac0ff670f3a509efb600080a36001600055005b835460029094015460405163a9059cbb60e01b8152939094166001600160a01b0316600484015260248301939093529182908290816000816044810103925af1801561037d5761172a575b50506116aa565b8161174092903d10610376576103678183611d1a565b508180611723565b60405162461bcd60e51b815260048101849052601760248201527f506c61796572203220616c7265616479206a6f696e65640000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101849052601960248201527f43616e6e6f742063616e63656c206163746976652067616d65000000000000006044820152606490fd5b6001015483163314905085611632565b34610178576020366003190112610178576117fb611bf6565b611803611c6a565b6001600160a01b03166000818152600560205260408120805460ff191660011790557f981ac5cae2fb338fa3b83661b9db1adf2471e4dd1e089498a55476854339dd1b9080a2005b34610178576000366003190112610178576020600654604051908152f35b3461017857602036600319011261017857611882611bf6565b61188a611c6a565b600880546001600160a01b0319166001600160a01b039290921691821790557f6387e6721c9b8e49669c1d962e31fe0ea2c1467b3106425bc787d42d5208d6d7600080a2005b34610178576000366003190112610178576020600254604051908152f35b346101785760208060031936011261017857611908611bf6565b611910611c6a565b611918611dec565b6001600160a01b039081166000818152600784526040902054929083156119a05760008181526007835260408120558061196657505060008080610548948194600154165af1610708611e9a565b60015460405163a9059cbb60e01b815293166001600160a01b031660048401526024830193909352918290829081600081604481016105ea565b60405162461bcd60e51b81526004810183905260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b34610178576020366003190112610178576004356119f7611c6a565b6103e88111611a0557600655005b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b3461017857602080600319360112610178576001600160a01b03611a5b611bf6565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b86828210611ad9578686611a9982880383611d1a565b604051928392818401908285525180915260408401929160005b828110611ac257505050500390f35b835185528695509381019392810192600101611ab3565b835485529093019260019283019201611a83565b34610178576020366003190112610178576004356000526003602052610140604060002060018060a01b0380825416918160018201541691600282015490611b86600384015482600486015416926005860154946007600688015497015497604051998a5260208a0152604089015281166060880152611b766080880160ff8360a01c16611c50565b60ff60a088019160a81c16611c5d565b60c085015260e0840152610100830152610120820152f35b3461017857604036600319011261017857611bb7611bf6565b6001600160a01b031660009081526004602052604090208054602435919082101561017857602091611be891611c22565b90546040519160031b1c8152f35b600435906001600160a01b038216820361017857565b602435906001600160a01b038216820361017857565b8054821015611c3a5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9060038210156104415752565b9060058210156104415752565b6001546001600160a01b03163303611c7e57565b60405163118cdaa760e01b8152336004820152602490fd5b15611c9d57565b606460405162461bcd60e51b815260206004820152602060248201527f446f206e6f742073656e6420455448207769746820746f6b656e2077616765726044820152fd5b610140810190811067ffffffffffffffff82111761153957604052565b6040810190811067ffffffffffffffff82111761153957604052565b90601f8019910116810190811067ffffffffffffffff82111761153957604052565b90816020910312610178575180151581036101785790565b15611d5b57565b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b60001981146107a85760010190565b60038210156104415752565b80546801000000000000000081101561153957611dd491600182018155611c22565b819291549060031b91821b91600019901b1916179055565b600260005414611dfd576002600055565b604051633ee5aeb560e01b8152600490fd5b15611e1657565b60405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b818102929181159184041417156107a857565b919082039182116107a857565b919082018092116107a857565b67ffffffffffffffff811161153957601f01601f191660200190565b3d15611ec5573d90611eab82611e7e565b91611eb96040519384611d1a565b82523d6000602084013e565b606090565b15611ed157565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60005b838110611f1f5750506000910152565b8181015183820152602001611f0f565b90602091611f4881518092818552858086019101611f0c565b601f01601f1916010190565b15611f5b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba10309033b0b6b290383630bcb2b960791b6044820152606490fd5b15611f9b57565b60405162461bcd60e51b8152602060048201526011602482015270115512081c99599d5b990819985a5b1959607a1b6044820152606490fd5b600381101561044157801561206d576001811461203d5760021461201557604051611ffe81611cfe565b60078152662ab735b737bbb760c91b602082015290565b60405161202181611cfe565b600c81526b5461626c652054656e6e697360a01b602082015290565b5060405161204a81611cfe565b6013815272526f636b2050617065722053636973736f727360681b602082015290565b5060405161207a81611cfe565b600d81526c50757368757020426174746c6560981b60208201529056fea2646970667358221220d3ef850c69d3cdcfda699dd2968e2a5a1f02821ab5d32d874f3db2a305554c3e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5694C2 EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x1AED JUMPI DUP1 PUSH4 0x129DAF84 EQ PUSH2 0x1A39 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x164E68DE EQ PUSH2 0x18EE JUMPI DUP1 PUSH4 0x1BB412D6 EQ PUSH2 0x18D0 JUMPI DUP1 PUSH4 0x2193FFE2 EQ PUSH2 0x1869 JUMPI DUP1 PUSH4 0x22DCD13E EQ PUSH2 0x184B JUMPI DUP1 PUSH4 0x42A44A9B EQ PUSH2 0x17E2 JUMPI DUP1 PUSH4 0x69958AB9 EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158A JUMPI DUP1 PUSH4 0x72A4DB27 EQ PUSH2 0x14AC JUMPI DUP1 PUSH4 0x72AEB81F EQ PUSH2 0x1436 JUMPI DUP1 PUSH4 0x73F4D7EA EQ PUSH2 0x140D JUMPI DUP1 PUSH4 0x77901B64 EQ PUSH2 0x13CE JUMPI DUP1 PUSH4 0x7CD7C641 EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x7DA2A9D4 EQ PUSH2 0xE12 JUMPI DUP1 PUSH4 0x87AF2278 EQ PUSH2 0xCF2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCC9 JUMPI DUP1 PUSH4 0xA2F77BCC EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xA4D290C2 EQ PUSH2 0xAF8 JUMPI DUP1 PUSH4 0xC92398FB EQ PUSH2 0x845 JUMPI DUP1 PUSH4 0xE55E4211 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xEFAA55A0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17D JUMPI PUSH4 0xFCF66664 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15F PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x196 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x21F PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x22C PUSH1 0x2 SLOAD DUP4 LT PUSH2 0x1E0F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x407 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x3CE JUMPI DUP2 DUP7 SLOAD AND CALLER EQ PUSH2 0x389 JUMPI AND DUP1 PUSH2 0x2F1 JUMPI POP PUSH2 0x28D PUSH1 0x2 PUSH1 0x4 SWAP6 ADD SLOAD CALLVALUE EQ PUSH2 0x1D54 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE MSTORE PUSH2 0x2C3 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DB2 JUMP JUMPDEST CALLER SWAP1 PUSH32 0x45C4F9CBAFE186141862608C493F28B823FDE4C2142BEDC3F5169961A73FDD22 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x337 DUP5 SWAP2 PUSH1 0x2 PUSH1 0x0 SWAP8 PUSH2 0x305 CALLVALUE ISZERO PUSH2 0x1C96 JUMP JUMPDEST ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP7 DUP8 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x37D JUMPI PUSH1 0x4 SWAP5 PUSH2 0x350 JUMPI JUMPDEST POP PUSH2 0x28D JUMP JUMPDEST PUSH2 0x36F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x376 JUMPI JUMPDEST PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D3C JUMP JUMPDEST POP DUP6 PUSH2 0x34A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420706C617920616761696E737420796F757273656C6600000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11D85B5948185B1C9958591E48199D5B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x47616D65206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x178 JUMPI PUSH2 0x481 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x490 DUP3 SLOAD DUP5 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x498 PUSH2 0x1DEC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x3 DUP6 ADD SWAP3 DUP4 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x4 SUB PUSH2 0x80C JUMPI DUP6 DUP2 GT PUSH2 0x7D2 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 AND PUSH1 0x1 PUSH1 0xA9 SHL OR DUP6 SSTORE TIMESTAMP PUSH1 0x6 DUP9 ADD SSTORE DUP1 PUSH2 0x63B JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND SWAP2 POP DUP2 PUSH2 0x557 JUMPI POP POP POP PUSH1 0x0 DUP1 DUP1 DUP6 SWAP5 DUP5 PUSH1 0x1 DUP4 DUP1 DUP1 DUP1 DUP1 SWAP11 PUSH2 0x548 SWAP14 SLOAD AND SWAP7 DUP13 ADD SWAP7 DUP8 SLOAD SWAP1 GAS CALL SWAP8 PUSH2 0x52A PUSH2 0x1E9A JUMP JUMPDEST POP ADD SLOAD AND SWAP1 SLOAD SWAP1 GAS CALL PUSH2 0x53B PUSH2 0x1E9A JUMP JUMPDEST POP DUP2 PUSH2 0x54F JUMPI JUMPDEST POP PUSH2 0x1F94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST SWAP1 POP DUP3 PUSH2 0x542 JUMP JUMPDEST DUP6 SLOAD SWAP5 DUP7 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x37D JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 SWAP4 PUSH2 0x5EA SWAP10 DUP12 SWAP10 PUSH2 0x61E JUMPI JUMPDEST POP SLOAD AND SWAP5 ADD SLOAD AND SWAP2 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x600 JUMPI JUMPDEST POP POP PUSH2 0x548 JUMP JUMPDEST DUP2 PUSH2 0x616 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x634 SWAP1 DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP12 PUSH2 0x5B6 JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SUB PUSH2 0x7BE JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 DUP2 ADD SWAP7 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP6 AND SWAP10 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ADD SLOAD DUP1 PUSH1 0x1 SHL SWAP6 DUP2 DUP8 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x7A8 JUMPI DUP2 PUSH2 0x6AB PUSH2 0x2710 PUSH2 0x6A3 PUSH1 0x6 SLOAD DUP10 PUSH2 0x1E51 JUMP JUMPDEST DIV DUP1 SWAP8 PUSH2 0x1E64 JUMP JUMPDEST SWAP7 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x6C4 DUP7 DUP3 SLOAD PUSH2 0x1E71 JUMP JUMPDEST SWAP1 SSTORE SLOAD AND DUP1 PUSH2 0x71C JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x70E PUSH1 0x0 DUP1 DUP1 DUP1 PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 SWAP10 PUSH1 0x40 SWAP10 GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST POP PUSH2 0x1ECA JUMP JUMPDEST DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG3 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x37D JUMPI PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 SWAP5 PUSH1 0x40 SWAP5 PUSH2 0x78B JUMPI JUMPDEST POP PUSH2 0x70E JUMP JUMPDEST PUSH2 0x7A1 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP8 PUSH2 0x785 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B2103932B9B7B63ABA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11D85B59481B9BDD08191A5CDC1D5D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x859 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x44 CALLDATALOAD LT ISZERO PUSH2 0x178 JUMPI PUSH2 0x86C PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0xABF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA4F JUMPI PUSH2 0x88F PUSH1 0x4 CALLDATALOAD CALLVALUE EQ PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x89B DUP2 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x8AB DUP4 PUSH2 0x1CE1 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x4 CALLDATALOAD DUP6 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 PUSH2 0x8E0 PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP6 ADD DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP10 AND SWAP1 DUP3 AND OR SWAP1 SWAP8 SSTORE SWAP9 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP2 MLOAD DUP9 DUP3 ADD SLOAD SWAP4 MLOAD SWAP9 SWAP6 AND SWAP4 SWAP2 SWAP1 DUP9 LT ISZERO PUSH2 0x441 JUMPI MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x20 SWAP8 PUSH1 0x7 SWAP5 PUSH2 0x120 SWAP5 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND OR OR PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x9F5 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP5 DUP4 ADD MSTORE PUSH2 0xA1B SWAP1 DUP3 ADD PUSH1 0x44 CALLDATALOAD PUSH2 0x1C50 JUMP JUMPDEST DUP2 PUSH32 0xABD75EC9F1A7C8F5CF37DBF68608FA6E61D2986CF77CF390A28ECA7B1D4B4DCA PUSH1 0x60 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xA59 CALLVALUE ISZERO PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0xAA1 JUMPI JUMPDEST POP PUSH2 0x88F JUMP JUMPDEST PUSH2 0xAB8 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP2 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5761676572206D757374206265203E203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0xB46 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xB89 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xBA2 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 PUSH2 0xBEA PUSH1 0xA0 DUP3 SWAP1 SHR DUP4 AND PUSH1 0x80 DUP6 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x140 SWAP3 PUSH1 0x7 SWAP2 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC85 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0xC97 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD13 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xD43 SWAP2 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND EQ SWAP2 DUP3 ISZERO PUSH2 0xE00 JUMPI JUMPDEST POP POP PUSH2 0x1F54 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xDF5 JUMPI JUMPDEST POP ISZERO PUSH2 0xDB0 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xAA SHL OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0x8FD73C8C4472189916C71B5CF4047BC9088A7481F333C1063FA93E70F1A469F8 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206469737075746520746869732067616D650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP5 PUSH2 0xD72 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 CALLER SWAP3 ADD SLOAD AND EQ DUP4 DUP1 PUSH2 0xD3C JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0xE2B PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0xE33 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x2D9125815FF94ED1F67BCAED3480C73AF82B355E90DE77479081CD2ED35F9A1C SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0xE91 PUSH2 0x1C0C JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1390 JUMPI PUSH2 0xEB7 PUSH1 0x2 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xEBF PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 SUB PUSH2 0x1359 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1340 JUMPI JUMPDEST ISZERO PUSH2 0x12FB JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP4 AND PUSH1 0x1 PUSH1 0xA9 SHL OR PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP1 DUP3 ISZERO PUSH1 0x1 DUP5 SWAP1 SHL DUP5 SWAP1 DIV SWAP1 SWAP2 EQ OR ISZERO PUSH2 0x7A8 JUMPI PUSH2 0xF82 PUSH2 0x2710 PUSH2 0xF77 PUSH1 0x6 SLOAD DUP6 PUSH1 0x1 SHL PUSH2 0x1E51 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH1 0x1 SHL PUSH2 0x1E64 JUMP JUMPDEST SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xFA3 DUP4 DUP3 SLOAD PUSH2 0x1E71 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1298 JUMPI POP PUSH2 0xFCD PUSH1 0x0 DUP1 DUP1 DUP1 DUP9 DUP9 GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST PUSH2 0xFE0 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP3 SWAP2 SWAP1 DUP2 AND SWAP1 DUP7 AND DUP2 SUB PUSH2 0x128F JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x2 SWAP1 JUMPDEST ADD SLOAD PUSH1 0x0 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP4 SWAP1 SWAP2 DUP5 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x127F JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP3 LT ISZERO PUSH2 0x1272 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP3 LT ISZERO PUSH2 0x1265 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP3 LT ISZERO PUSH2 0x1258 JUMPI JUMPDEST POP PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x1249 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x123B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP2 LT ISZERO PUSH2 0x1231 JUMPI JUMPDEST PUSH1 0x1 DUP8 ADD SWAP6 DUP2 PUSH1 0x21 PUSH2 0x10C9 PUSH2 0x10B3 DUP11 PUSH2 0x1E7E JUMP JUMPDEST SWAP10 PUSH2 0x10C1 PUSH1 0x40 MLOAD SWAP12 DUP13 PUSH2 0x1D1A JUMP JUMPDEST DUP1 DUP12 MSTORE PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP11 ADD SWAP11 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP13 CALLDATACOPY DUP10 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP11 DUP3 ISZERO PUSH2 0x110A JUMPI POP DUP3 SWAP1 PUSH2 0x10DA JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x11B3 PUSH1 0x0 SWAP3 PUSH2 0x114A PUSH2 0x115A PUSH1 0x2D PUSH1 0x20 SWAP11 PUSH2 0x119C SWAP13 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH13 0x6F726269742D77696E6E65722D PUSH1 0x98 SHL DUP16 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x1F0C JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30ECD29 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE SWAP2 SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP2 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x3 NOT DUP5 DUP4 SUB ADD PUSH1 0x84 DUP6 ADD MSTORE PUSH2 0x1F2F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x1206 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xA3A193CD49FB44D3709B2D13235998E900D960268B8356D3C2233340FD215C38 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x122A JUMPI JUMPDEST PUSH2 0x121C DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x178 JUMPI DUP4 PUSH2 0x11C2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1212 JUMP JUMPDEST SWAP6 PUSH1 0x1 ADD SWAP6 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP7 ADD SWAP6 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x4 SWAP2 DIV SWAP7 ADD SWAP6 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x8 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x10 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x20 SWAP2 DIV SWAP7 ADD SWAP6 DUP11 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x40 SWAP8 POP PUSH1 0x4 CALLDATALOAD DIV SWAP1 POP DUP11 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x12DC JUMPI JUMPDEST POP PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x12F4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP5 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57696E6E6572206D757374206265206120706C61796572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x47616D65206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F7420617574686F72697A65642072656665726565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13EF PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1461 JUMPI PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x3 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 EQ PUSH2 0x1497 JUMPI JUMPDEST PUSH2 0x1492 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST SWAP2 PUSH2 0x14A4 PUSH2 0x1492 SWAP2 PUSH2 0x1D97 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1489 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14CD PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x1E0F JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x1 SUB PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x54 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1539 JUMPI PUSH1 0x20 SWAP3 DUP3 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x47616D65206D75737420626520616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x15A3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x160A PUSH1 0x2 SLOAD DUP4 LT PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x1638 SWAP2 DUP4 AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x17D2 JUMPI JUMPDEST POP PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1640 PUSH2 0x1DEC JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA8 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH2 0x178D JUMPI DUP4 PUSH1 0x1 DUP7 ADD SLOAD AND PUSH2 0x1748 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP3 AND PUSH1 0x3 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP3 AND DUP1 PUSH2 0x16D8 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 DUP5 PUSH1 0x2 DUP3 SWAP6 PUSH2 0x16AA SWAP8 SLOAD AND SWAP2 ADD SLOAD SWAP1 GAS CALL PUSH2 0x542 PUSH2 0x1E9A JUMP JUMPDEST CALLER SWAP1 PUSH32 0x58F64E02B3A6D2A3BD28B7700A0A0D6699545BCB55BF917AC0FF670F3A509EFB PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST DUP4 SLOAD PUSH1 0x2 SWAP1 SWAP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x37D JUMPI PUSH2 0x172A JUMPI JUMPDEST POP POP PUSH2 0x16AA JUMP JUMPDEST DUP2 PUSH2 0x1740 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x376 JUMPI PUSH2 0x367 DUP2 DUP4 PUSH2 0x1D1A JUMP JUMPDEST POP DUP2 DUP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C61796572203220616C7265616479206A6F696E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C206163746976652067616D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD SLOAD DUP4 AND CALLER EQ SWAP1 POP DUP6 PUSH2 0x1632 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x17FB PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x981AC5CAE2FB338FA3B83661B9DB1ADF2471E4DD1E089498A55476854339DD1B SWAP1 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1882 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x188A PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x6387E6721C9B8E49669C1D962E31FE0EA2C1467B3106425BC787D42D5208D6D7 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1908 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1910 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1918 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x1966 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 PUSH2 0x548 SWAP5 DUP2 SWAP5 PUSH1 0x1 SLOAD AND GAS CALL PUSH2 0x708 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19F7 PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x1A05 JUMPI PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x178 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1A5B PUSH2 0x1BF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x1AD9 JUMPI DUP7 DUP7 PUSH2 0x1A99 DUP3 DUP9 SUB DUP4 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AC2 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1AB3 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1A83 JUMP JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH2 0x1B86 PUSH1 0x3 DUP5 ADD SLOAD DUP3 PUSH1 0x4 DUP7 ADD SLOAD AND SWAP3 PUSH1 0x5 DUP7 ADD SLOAD SWAP5 PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x1B76 PUSH1 0x80 DUP9 ADD PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 DUP9 ADD SWAP2 PUSH1 0xA8 SHR AND PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x178 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x178 JUMPI PUSH2 0x1BB7 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x178 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1BE8 SWAP2 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x178 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1C7E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C9D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F206E6F742073656E6420455448207769746820746F6B656E207761676572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x178 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x178 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x441 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1DD4 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1C22 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1DFD JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11D85B5948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x7A8 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x7A8 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x7A8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1EC5 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EAB DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 PUSH2 0x1EB9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1D1A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ED1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1F1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F0F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F48 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA10309033B0B6B290383630BCB2B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x115512081C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x441 JUMPI DUP1 ISZERO PUSH2 0x206D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x203D JUMPI PUSH1 0x2 EQ PUSH2 0x2015 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1FFE DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x2AB735B737BBB7 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2021 DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x5461626C652054656E6E6973 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x204A DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x526F636B2050617065722053636973736F7273 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x207A DUP2 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x50757368757020426174746C65 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xEF DUP6 0xC PUSH10 0xD3CDCFDA699DD2968E2A GAS 0x1F MUL DUP3 BYTE 0xB5 0xD3 0x2D DUP8 0x4F RETURNDATASIZE 0xB2 LOG3 SDIV SSTORE 0x4C RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"732:15290:17:-:0;;;;;;;;;-1:-1:-1;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;-1:-1:-1;;;;;732:15290:17;;:::i;:::-;;;;2122:50;732:15290;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;732:15290:17;;;;2627:22:0;;2623:91;;732:15290:17;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;3052:40:0;732:15290:17;3052:40:0;;732:15290:17;2623:91:0;732:15290:17;;-1:-1:-1;;;2672:31:0;;732:15290:17;;2672:31:0;;732:15290:17;;;2672:31:0;732:15290:17;;;;;;;;;;;;2466:103:10;;;:::i;:::-;3420:54:17;3437:13;732:15290;3428:22;;3420:54;:::i;:::-;732:15290;;;;;;;;;5748:11;732:15290;5748:11;;732:15290;;;;;;;;;;;;;;;;5822:12;;732:15290;;5822:12;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;5888:10;:26;732:15290;;;5996:29;;;6062:16;6041:62;3437:13;732:15290;6062:16;;732:15290;6049:9;:29;6041:62;:::i;:::-;5888:10;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;5888:10;732:15290;;;6425:36;732:15290;;;;6425:36;:::i;:::-;5888:10;6485:30;;732:15290;6485:30;;732:15290;;;;5992:307;6207:81;6142:9;;3437:13;732:15290;6142:9;6134:59;6142:9;:14;6134:59;:::i;:::-;6271:16;732:15290;;;-1:-1:-1;;;6207:81:17;;5888:10;732:15290;6207:81;;732:15290;6264:4;732:15290;;;;;;;;;;;;;;;;;;;;;;;;6207:81;;;;;;;;;;732:15290;6207:81;;;5992:307;;;;6207:81;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;732:15290;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3437:13:17;732:15290;3420:54;732:15290;;3428:22;;3420:54;:::i;:::-;2466:103:10;;:::i;:::-;732:15290:17;;;;;;;;;;10312:11;732:15290;10312:11;;732:15290;;;;;;;;;;;;;;;;10312:34;732:15290;;10386:15;;;732:15290;;-1:-1:-1;;;;732:15290:17;;-1:-1:-1;;;732:15290:17;;;10506:15;10487:16;;;732:15290;10544:15;;;-1:-1:-1;;732:15290:17;;-1:-1:-1;;;;;732:15290:17;;;;;-1:-1:-1;10614:29:17;732:15290;;;;;;;;;;;;;;;;;;10819:38;732:15290;;;10702:16;;;732:15290;;;10677:46;;;;;;:::i;:::-;;10755:12;732:15290;;;;10755:46;;;;;:::i;:::-;;10827:8;;;10610:447;10819:38;;:::i;:::-;732:15290;;;;10827:8;;;;;;10610:447;732:15290;;10943:16;;;732:15290;;;;-1:-1:-1;;;10896:64:17;;;732:15290;;;-1:-1:-1;;;;;732:15290:17;;10896:64;;732:15290;;;;;;;;;;;;;;10943:16;;;732:15290;;;;;-1:-1:-1;732:15290:17;;;;10896:64;;;;;;;;;732:15290;10896:64;732:15290;10896:64;10978;10896;;;;;10610:447;732:15290;;;11011:12;;732:15290;;;;;;;10978:64;;;;;;;;;732:15290;10978:64;;732:15290;;;;;;;;;;;;;;;;;;;;;10978:64;;;;;;;;;;;10610:447;;;;;10978:64;;;;;;-1:-1:-1;10978:64:17;;;;;;:::i;:::-;;;;;;10896;;;;;;;;;;;;;:::i;:::-;;;;;10540:1326;11135:45;;;;;;;;;;732:15290;11135:15;732:15290;;;;-1:-1:-1;;;;;732:15290:17;;11135:45;732:15290;11194:11;;732:15290;;;;;;;;;;;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;11260:16;732:15290;;;;;;;;;;;;;;;;11384:22;11346:5;11317:25;10487:16;732:15290;11317:25;;:::i;:::-;732:15290;11384:22;;;:::i;:::-;732:15290;;;;11433:15;732:15290;;;;;11433:47;732:15290;;;11433:47;:::i;:::-;732:15290;;;;11511:29;732:15290;;11579:32;;;;11629:39;732:15290;11579:32;;;11803:52;11579:32;732:15290;11579:32;;;;;:::i;:::-;;11629:39;:::i;:::-;732:15290;;;;;;;;11803:52;10540:1326;;11507:265;732:15290;;-1:-1:-1;;;11707:50:17;;-1:-1:-1;;;;;732:15290:17;;;;;11707:50;;732:15290;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11707:50:17;;;;;;;11803:52;11707:50;732:15290;11707:50;;;11507:265;;;;11707:50;;;;;;;;;;;;;:::i;:::-;;;;;732:15290;;;;;;;;;;;;11135:45;732:15290;11168:12;;732:15290;-1:-1:-1;;;;;732:15290:17;;11135:45;;732:15290;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;;;;;;;;2466:103:10;;:::i;:::-;732:15290:17;;4470:15;732:15290;;-1:-1:-1;;;;;732:15290:17;;;;4596:57;732:15290;;4604:9;:24;4596:57;:::i;:::-;4897:15;732:15290;4897:15;;;:::i;:::-;;732:15290;;;;;;;:::i;:::-;4966:10;732:15290;;;4938:366;;732:15290;;;;4938:366;;732:15290;;;;;;4938:366;;732:15290;;;;;;;;;4938:366;;;732:15290;4938:366;732:15290;;4938:366;;:::i;:::-;732:15290;;4938:366;;732:15290;;;4938:366;;;732:15290;;;5212:15;732:15290;4938:366;;732:15290;4938:366;;;732:15290;;;4938:366;;;732:15290;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;732:15290:17;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;;4897:15;732:15290;;;;;;;;;;;;;;;4938:366;;732:15290;;;;;;;;;;;;;;;;;4938:366;732:15290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4938:366;;;732:15290;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;4938:366;;732:15290;;;;;4938:366;;;732:15290;;;;;4938:366;732:15290;;;;4966:10;732:15290;;;;;5323:36;732:15290;;;;5323:36;:::i;:::-;732:15290;;;;;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;:::i;:::-;4966:10;5383:66;732:15290;4966:10;5383:66;;732:15290;;;;;;;;;4552:287;4684:59;4692:9;:14;4684:59;:::i;:::-;732:15290;;-1:-1:-1;;;4757:71:17;;4789:10;732:15290;4757:71;;;732:15290;;;;4809:4;732:15290;;;;;;;;;;;;;-1:-1:-1;;;;;;732:15290:17;;4757:71;;;;;;;;4552:287;;;;4757:71;;;732:15290;4757:71;;;;;;;;;:::i;:::-;;;;;732:15290;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;2306:31;732:15290;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:54;3437:13;732:15290;3428:22;;3420:54;:::i;:::-;732:15290;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;;3437:13;732:15290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;3420:54;3437:13;732:15290;3428:22;;3420:54;:::i;:::-;732:15290;;;;;;;;;;;;3552:151;;3598:10;-1:-1:-1;;;;;732:15290:17;;;3573:35;;:87;;;;732:15290;3552:151;;;:::i;:::-;732:15290;;;;;;;;;;9684:11;732:15290;;;;;;;;;;;;;;9684:32;;:71;;;;;732:15290;;;;;-1:-1:-1;;;;732:15290:17;-1:-1:-1;;;732:15290:17;;;3598:10;;9881:32;732:15290;;9881:32;732:15290;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;9684:71;3437:13;9720:35;;;9684:71;;;3573:87;3598:10;;;732:15290;3598:10;3625:21;;732:15290;;3625:35;3573:87;;;;732:15290;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;732:15290:17;;;;;13527:18;732:15290;;;;;;;-1:-1:-1;;732:15290:17;;;13577:23;;732:15290;13577:23;732:15290;;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;3308:10;732:15290;;3289:18;732:15290;;;;;;;;;;;3420:54;3437:13;732:15290;;;3428:22;3420:54;:::i;:::-;2466:103:10;;:::i;:::-;732:15290:17;;;;;;;;;;7002:11;732:15290;7002:11;;732:15290;;;;;;;3289:18;732:15290;;;;;;7002:32;732:15290;;;;-1:-1:-1;;;;;732:15290:17;;;;;7085:22;:48;;;;732:15290;;;;-1:-1:-1;;;;732:15290:17;;-1:-1:-1;;;732:15290:17;;7002:11;;732:15290;;7274:11;;732:15290;;-1:-1:-1;;;;;;732:15290:17;-1:-1:-1;;;;;732:15290:17;;;;;7323:15;7304:16;;;732:15290;;;7348:17;;;732:15290;3437:13;7457:16;;;732:15290;;7002:11;732:15290;;;;;;;;;;;;;;;;7573:22;7539:5;7510:25;7304:16;732:15290;;;;7510:25;:::i;:::-;732:15290;;;;;7573:22;:::i;:::-;732:15290;;;;;;;;;7348:17;732:15290;;;;;7649:47;732:15290;;;7649:47;:::i;:::-;732:15290;;;7002:11;;732:15290;-1:-1:-1;;;;;732:15290:17;7758:29;732:15290;;7822:32;7868:39;732:15290;7822:32;;;;;;;;;:::i;7868:39::-;8072:32;732:15290;;7002:11;;732:15290;;;;8072:32;:::i;:::-;8114:9;732:15290;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;8171:22;;;;-1:-1:-1;732:15290:17;8196:12;;732:15290;-1:-1:-1;;;;;732:15290:17;;3437:13;;8171:52;7457:16;732:15290;;;;;;;;;29291:8:14;29282:17;;;;29278:103;;8171:52:17;29407:8:14;;29398:17;;;;29394:103;;8171:52:17;29523:8:14;;29514:17;;;;29510:103;;8171:52:17;29639:7:14;;29630:16;;;;29626:100;;8171:52:17;29743:16:14;7539:5:17;29743:16:14;;;29739:100;;8171:52:17;29865:7:14;29856:16;;;29852:100;;8171:52:17;29978:7:14;29969:16;;;;29965:66;;8171:52:17;732:15290;;;;;1545:94:11;732:15290:17;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;732:15290:17;;;;1545:94:11;;;1652:247;-1:-1:-1;;732:15290:17;;-1:-1:-1;;;1706:111:11;;;;732:15290:17;1706:111:11;732:15290:17;1834:11:11;;;1867:10;1863:21;;1652:247;;;;;1863:21;1879:5;;;;732:15290:17;;1879:5:11;732:15290:17;8299:59;732:15290;;1879:5:11;732:15290:17;1879:5:11;732:15290:17;;8299:59;;;-1:-1:-1;;;8299:59:17;;;732:15290;;;;;;;;;:::i;:::-;;;8299:59;;;;;;;;;:::i;:::-;732:15290;;-1:-1:-1;;;8114:255:17;;-1:-1:-1;;;;;732:15290:17;;;;8114:255;;732:15290;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;:::i;:::-;;29865:7:14;732:15290:17;;;;;;;;;;;;;;:::i;:::-;8114:255;;;;;;;;;;1652:247:11;732:15290:17;;;;;;;;;;;;;;;;;8393:52;732:15290;;;8393:52;;732:15290;;;;8114:255;732:15290;8114:255;;;;;;;;;;;;:::i;:::-;;;732:15290;;;;8114:255;;;;;;;;29965:66:14;732:15290:17;;;29965:66:14;;;29852:100;29865:7;3437:13:17;732:15290;;;;29852:100:14;;;29739;7539:5:17;732:15290;;;;;29739:100:14;;;29626;29710:1;732:15290:17;;;;29626:100:14;;;;29510:103;29596:2;732:15290:17;;;;29510:103:14;;;;29394;732:15290:17;;;;;29394:103:14;;;;29278;732:15290:17;;-1:-1:-1;732:15290:17;;;;-1:-1:-1;29278:103:14;;;8171:52:17;3437:13;8171:52;;;;7754:245;732:15290;;-1:-1:-1;;;7938:50:17;;-1:-1:-1;;;;;732:15290:17;;;7938:50;;732:15290;;;;;;;;;;;;;;;;-1:-1:-1;;7938:50:17;;;;;;;;7754:245;;;;7938:50;;;732:15290;7938:50;732:15290;7938:50;;;;;;;:::i;:::-;;;;;732:15290;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;7085:48;-1:-1:-1;732:15290:17;7121:12;;732:15290;-1:-1:-1;;;;;732:15290:17;;;;;7111:22;7085:48;;732:15290;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;-1:-1:-1;;;;;732:15290:17;;:::i;:::-;;;;1926:50;732:15290;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;2217:34;732:15290;;;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;15244:13;732:15290;15220:150;15240:17;;;;;;732:15290;;;;;;;;15259:3;732:15290;;;;;;;;;;;15282:15;732:15290;;;;;;;;;;15301:17;15282:36;15278:82;;15259:3;;;;:::i;:::-;15225:13;;15278:82;15338:7;;15259:3;15338:7;;:::i;:::-;15278:82;;;;;732:15290;;;;;;-1:-1:-1;;732:15290:17;;;;;;3420:54;3437:13;732:15290;3428:22;;3420:54;:::i;:::-;732:15290;;;;;;;;;;;12327:11;732:15290;;;;;;;;;;;12327:32;732:15290;;;;12462:53;732:15290;12462:53;;732:15290;;;12487:15;732:15290;;;;12504:10;732:15290;;;;;;12462:53;;;732:15290;;;;;;;;;;;;;;;;;;;12452:64;;732:15290;;;;;;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;1500:62:0;;:::i;:::-;3004:6;732:15290:17;;-1:-1:-1;;;;;;732:15290:17;;;;;;;-1:-1:-1;;;;;732:15290:17;3052:40:0;732:15290:17;;3052:40:0;732:15290:17;;;;;;;;;;;;;;;;;3420:54;3437:13;732:15290;3428:22;;3420:54;:::i;:::-;732:15290;;;;;;;;;;;;-1:-1:-1;;;;;732:15290:17;3552:151;;732:15290;;3598:10;3573:35;;:87;;;;732:15290;3552:151;;:::i;:::-;2466:103:10;;:::i;:::-;732:15290:17;;;;;;;;;8803:11;732:15290;8803:11;;732:15290;;;;;;;;;;;;;;;;8884:12;732:15290;8884:12;;732:15290;;;;-1:-1:-1;;;;732:15290:17;;-1:-1:-1;;;732:15290:17;;;;;9041:29;;;732:15290;;;;;;3437:13;732:15290;;9165:37;732:15290;;;9130:16;;732:15290;9105:46;;;;;:::i;9165:37::-;3598:10;9331:33;;732:15290;9331:33;;732:15290;;;;9037:271;732:15290;;3437:13;9280:16;;;732:15290;;;-1:-1:-1;;;9233:64:17;;732:15290;;;;-1:-1:-1;;;;;732:15290:17;;9233:64;;732:15290;;;;;;;;;;;;;;-1:-1:-1;732:15290:17;;;;9233:64;;;;;;;;;;9037:271;;;;;9233:64;;;;;;-1:-1:-1;9233:64:17;;;;;;:::i;:::-;;;;;;732:15290;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;3573:87;732:15290;3625:21;732:15290;;;3598:10;3625:35;;-1:-1:-1;3573:87:17;;;732:15290;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;732:15290:17;;;;;13266:18;732:15290;;;;;;;-1:-1:-1;;732:15290:17;;;;;13315:26;;732:15290;13315:26;732:15290;;;;;;;-1:-1:-1;;732:15290:17;;;;;2043:35;732:15290;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;12924:28:17;732:15290;;-1:-1:-1;;;;;;732:15290:17;-1:-1:-1;;;;;732:15290:17;;;;;;;;;12967:27;-1:-1:-1;;12967:27:17;732:15290;;;;;;;-1:-1:-1;;732:15290:17;;;;;1628:28;732:15290;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2466:103:10;;:::i;:::-;-1:-1:-1;;;;;732:15290:17;;;;;;;14130:15;732:15290;;;;;;;;14170:10;;732:15290;;;;;;14130:15;732:15290;;;;;;14272:19;732:15290;;;;;;;14371:39;732:15290;;;;;;14326:31;;;;:::i;14268:223::-;732:15290;;;;-1:-1:-1;;;14441:39:17;;732:15290;;-1:-1:-1;;;;;732:15290:17;;14441:39;;732:15290;;;;;;;;;;;;;;-1:-1:-1;732:15290:17;;;;14441:39;732:15290;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;1500:62:0;;:::i;:::-;13819:4:17;13806:17;;732:15290;;13861:26;732:15290;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;732:15290:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;;1708:37;;732:15290;1708:37;;732:15290;;1708:37;;;;732:15290;1708:37;732:15290;;1708:37;;732:15290;1708:37;732:15290;1708:37;;732:15290;;1708:37;;;;732:15290;1708:37;;;;;732:15290;1708:37;;732:15290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;:::i;:::-;-1:-1:-1;;;;;732:15290:17;;;;;;;;;;;;;;;;;1808:48;;;;;732:15290;1808:48;;;;:::i;:::-;732:15290;;;;;;;;;;;;;;;-1:-1:-1;;;;;732:15290:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;732:15290:17;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;732:15290:17;;-1:-1:-1;732:15290:17;;;-1:-1:-1;732:15290:17;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;1796:162:0:-;732:15290:17;;-1:-1:-1;;;;;732:15290:17;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;732:15290:17;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;732:15290:17;;;1901:40:0;732:15290:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;-1:-1:-1;;732:15290:17;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;2575:307:10:-;1899:1;2702:7;732:15290:17;2702:18:10;2698:86;;1899:1;2702:7;732:15290:17;2575:307:10:o;2698:86::-;732:15290:17;;-1:-1:-1;;;2743:30:10;;;;;732:15290:17;;;;:::o;:::-;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;732:15290:17;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;732:15290:17;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;;;;-1:-1:-1;;732:15290:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;732:15290:17;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;732:15290:17;;;;;;;;;;;;-1:-1:-1;;;732:15290:17;;;;;;;15584:342;732:15290;;;;;;15681:34;;15677:62;;732:15290;15753:40;;15749:74;;15849:21;15837:33;15833:60;;732:15290;;;;;:::i;:::-;;;;-1:-1:-1;;;732:15290:17;;;;15584:342;:::o;15833:60::-;732:15290;;;;;:::i;:::-;;;;-1:-1:-1;;;732:15290:17;;;;15872:21;:::o;15749:74::-;732:15290;;;;;;:::i;:::-;;;;-1:-1:-1;;;732:15290:17;;;;15795:28;:::o;15677:62::-;732:15290;;;;;;:::i;:::-;;;;-1:-1:-1;;;732:15290:17;;;;15717:22;:::o"},"methodIdentifiers":{"accumulatedFees(address)":"fcf66664","authorizeReferee(address)":"42a44a9b","authorizedReferees(address)":"77901b64","cancelGame(uint256)":"69958ab9","completeGame(uint256,address,bytes32)":"7cd7c641","createGame(uint256,address,uint8)":"c92398fb","createYellowSession(uint256)":"72a4db27","disputeGame(uint256)":"87af2278","gameIdCounter()":"1bb412d6","games(uint256)":"117a5b90","getActiveGamesCount()":"72aeb81f","getGame(uint256)":"a2f77bcc","getPlayerGames(address)":"129daf84","joinGame(uint256)":"efaa55a0","owner()":"8da5cb5b","platformFeeBps()":"22dcd13e","playerGames(address,uint256)":"0a5694c2","renounceOwnership()":"715018a6","resolveDispute(uint256,uint8)":"e55e4211","revokeReferee(address)":"7da2a9d4","setPlatformFee(uint256)":"12e8e2c3","setYellowBridge(address)":"2193ffe2","transferOwnership(address)":"f2fde38b","winnerNFT()":"a4d290c2","withdrawFees(address)":"164e68de","yellowNetworkBridge()":"73f4d7ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winnings\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"}],\"name\":\"GameCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wagerToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GameEscrow.GameMode\",\"name\":\"gameMode\",\"type\":\"uint8\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputedBy\",\"type\":\"address\"}],\"name\":\"GameDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"RefereeAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"RefereeRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"YellowBridgeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accumulatedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"authorizeReferee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedReferees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"cancelGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"gameDataHash\",\"type\":\"bytes32\"}],\"name\":\"completeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wagerToken\",\"type\":\"address\"},{\"internalType\":\"enum GameEscrow.GameMode\",\"name\":\"gameMode\",\"type\":\"uint8\"}],\"name\":\"createGame\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"createYellowSession\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"sessionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"disputeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wagerToken\",\"type\":\"address\"},{\"internalType\":\"enum GameEscrow.GameMode\",\"name\":\"gameMode\",\"type\":\"uint8\"},{\"internalType\":\"enum GameEscrow.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"completedAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gameDataHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveGamesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGame\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wagerToken\",\"type\":\"address\"},{\"internalType\":\"enum GameEscrow.GameMode\",\"name\":\"gameMode\",\"type\":\"uint8\"},{\"internalType\":\"enum GameEscrow.GameStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"completedAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gameDataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct GameEscrow.Game\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerGames\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerGames\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"resolution\",\"type\":\"uint8\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"revokeReferee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"setYellowBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerNFT\",\"outputs\":[{\"internalType\":\"contract OrbitWinnerNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yellowNetworkBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Escrow contract for 1v1 skill-based games with Yellow Network integration\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeReferee(address)\":{\"params\":{\"referee\":\"Address to authorize\"}},\"cancelGame(uint256)\":{\"params\":{\"gameId\":\"ID of the game to cancel\"}},\"completeGame(uint256,address,bytes32)\":{\"params\":{\"gameDataHash\":\"Hash of game results for verification\",\"gameId\":\"ID of the game\",\"winner\":\"Address of the winner\"}},\"createGame(uint256,address,uint8)\":{\"params\":{\"gameMode\":\"Type of game to play\",\"wagerAmount\":\"Amount to wager\",\"wagerToken\":\"Token address (address(0) for native token)\"}},\"createYellowSession(uint256)\":{\"params\":{\"gameId\":\"ID of the game\"},\"returns\":{\"sessionId\":\"Yellow Network session identifier\"}},\"disputeGame(uint256)\":{\"params\":{\"gameId\":\"ID of the game to dispute\"}},\"getGame(uint256)\":{\"params\":{\"gameId\":\"ID of the game\"}},\"getPlayerGames(address)\":{\"params\":{\"player\":\"Address of the player\"}},\"joinGame(uint256)\":{\"params\":{\"gameId\":\"ID of the game to join\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolveDispute(uint256,uint8)\":{\"params\":{\"gameId\":\"ID of the game\",\"resolution\":\"0 = refund both, 1 = player1 wins, 2 = player2 wins\"}},\"revokeReferee(address)\":{\"params\":{\"referee\":\"Address to revoke\"}},\"setPlatformFee(uint256)\":{\"params\":{\"newFeeBps\":\"New fee in basis points (max 10%)\"}},\"setYellowBridge(address)\":{\"params\":{\"bridge\":\"Address of Yellow Network bridge contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFees(address)\":{\"params\":{\"token\":\"Token address (address(0) for native token)\"}}},\"title\":\"GameEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeReferee(address)\":{\"notice\":\"Authorize a referee address (for AI agents or oracles)\"},\"cancelGame(uint256)\":{\"notice\":\"Cancel a game before it starts (only if no player 2)\"},\"completeGame(uint256,address,bytes32)\":{\"notice\":\"Complete a game and declare winner (called by authorized referee)\"},\"createGame(uint256,address,uint8)\":{\"notice\":\"Create a new game with a wager\"},\"createYellowSession(uint256)\":{\"notice\":\"Create game session for Yellow Network off-chain processing\"},\"disputeGame(uint256)\":{\"notice\":\"Dispute a game result\"},\"getActiveGamesCount()\":{\"notice\":\"Get active games count\"},\"getGame(uint256)\":{\"notice\":\"Get game details\"},\"getPlayerGames(address)\":{\"notice\":\"Get all games for a player\"},\"joinGame(uint256)\":{\"notice\":\"Join an existing game\"},\"resolveDispute(uint256,uint8)\":{\"notice\":\"Resolve a disputed game (owner only)\"},\"revokeReferee(address)\":{\"notice\":\"Revoke referee authorization\"},\"setPlatformFee(uint256)\":{\"notice\":\"Update platform fee\"},\"setYellowBridge(address)\":{\"notice\":\"Set Yellow Network bridge address\"},\"withdrawFees(address)\":{\"notice\":\"Withdraw accumulated platform fees\"}},\"notice\":\"This contract holds wagers and distributes winnings after game completion  YELLOW NETWORK INTEGRATION: - Players deposit once into Yellow state channel - Game happens off-chain (instant, no gas) - Winner determined by referee agent - Settlement happens on-chain via this contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameEscrow.sol\":\"GameEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/GameEscrow.sol\":{\"keccak256\":\"0x767b78a5e8ff2c4df5f01d22d8baa8fee5c04d5d5c587fc2594336d5be001a72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c36c7d6cdd6ffb96f29f89e3b2759c1691cd47f7a095e70a8d244af5b107936\",\"dweb:/ipfs/QmQLemk3mZxXVBi2DvsKWh3hE8zAhnH2g5c3XwGa6NpMop\"]},\"contracts/OrbitWinnerNFT.sol\":{\"keccak256\":\"0x2d4e1d5998fc23b6f8ee94ed6615331c10f1030ec833236b6c4837007bd1434b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f753a4c77ee522c32f022794c49327295ba82c87f3755557a01533e40609a67f\",\"dweb:/ipfs/QmcbwTBnb2xnJ3KfzHoWydNrnc2MmU6NvaDsmy8Gdaanjd\"]}},\"version\":1}"}},"contracts/OrbitWinnerNFT.sol":{"OrbitWinnerNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"string","name":"gameMode","type":"string"},{"indexed":false,"internalType":"uint256","name":"wagerAmount","type":"uint256"}],"name":"WinnerNFTMinted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getWinnerData","outputs":[{"components":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"address","name":"opponent","type":"address"},{"internalType":"string","name":"gameMode","type":"string"},{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"gameScreenshot","type":"string"}],"internalType":"struct OrbitWinnerNFT.WinnerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"address","name":"opponent","type":"address"},{"internalType":"string","name":"gameMode","type":"string"},{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"string","name":"screenshotHash","type":"string"}],"name":"mintWinnerNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winnerData","outputs":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"address","name":"opponent","type":"address"},{"internalType":"string","name":"gameMode","type":"string"},{"internalType":"uint256","name":"wagerAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"gameScreenshot","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"clear_storage_range_bytes1":{"entryPoint":911,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":850,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200034d576040906001600160401b03908083018281118282101762000337578352600c81526020906b27b93134ba102bb4b73732b960a11b8282015283518481018181108582111762000337578552600981526827a92124aa16aba4a760b91b8382015281519380851162000337576000948062000082875462000352565b94601f9586811162000307575b5086908683116001146200029f57889262000293575b50508160011b916000199060031b1c19161785555b81519081116200027f5780600192620000d4845462000352565b85811162000244575b508590858311600114620001e0578792620001d4575b5050600019600383901b1c191690821b1790555b3315620001bc5760068054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36200015d60085462000352565b918183116200019a575b7f68747470733a2f2f6f726269742e6170702f6170692f6e66742f0000000000346008558451611c8b9081620003a98239f35b836008620001b2955220910160051c8101906200038f565b3880808062000167565b8351631e4fbdf760e01b815260048101849052602490fd5b015190503880620000f3565b8488528688208594509190601f198416895b898282106200022d575050841162000213575b505050811b01905562000107565b015160001960f88460031b161c1916905538808062000205565b8385015186558897909501949384019301620001f2565b6200026e908589528789208780860160051c8201928a871062000275575b0160051c01906200038f565b38620000dd565b9250819262000262565b634e487b7160e01b85526041600452602485fd5b015190503880620000a5565b8880528789209250601f198416895b89828210620002f0575050908460019594939210620002d6575b505050811b018555620000ba565b015160001960f88460031b161c19169055388080620002c8565b6001859682939686015181550195019301620002ae565b6200033090898052888a208880860160051c8201928b871062000275570160051c01906200038f565b386200008f565b634e487b7160e01b600052604160045260246000fd5b600080fd5b90600182811c9216801562000384575b60208310146200036e57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000362565b8181106200039b575050565b600081556001016200038f56fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146113035750806306fdde0314611260578063081812fc14611222578063095ea7b31461113b57806318160ddd1461111d57806323b872dd1461110657806342842e0e146110d857806355f804b314610f5e5780636352211e14610f2e57806370a0823114610ed5578063715018a614610e785780638da5cb5b14610e4f57806395d89b4114610d70578063a22cb46514610ccb578063b88d4fde14610c5d578063c3b34a4014610656578063c87b56dd146103a9578063d58a0e1214610287578063e985e9c514610231578063f2fde38b146101a35763f4025aab1461010657600080fd5b3461019e57602036600319011261019e576004356000526009602052604060002060018060a01b0361019a8183541691600184015416926101496002820161151c565b60038201549161018261016360056004840154930161151c565b926040519788978852602088015260c0604088015260c0870190611391565b926060860152608085015283820360a0850152611391565b0390f35b600080fd5b3461019e57602036600319011261019e576101bc6113b6565b6101c46115c2565b6001600160a01b0390811690811561021857600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461019e57604036600319011261019e5761024a6113b6565b6102526113cc565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b3461019e5760208060031936011261019e5760043590606060a06040516102ad81611417565b60008152600084820152826040820152600083820152600060808201520152816000526002815260018060a01b03916102ee83604060002054161515611922565b6000526009815261019a60406000206040519261030a84611417565b848254168452846001830154169181850192835261038a61032d6002830161151c565b60408701908152876003840154956060890196875261035a600560048701549660808c019788520161151c565b9560a08a019687526040519a8b9a828c525116908a0152511660408801525160c0606088015260e0870190611391565b925160808601525160a085015251838203601f190160c0850152611391565b3461019e5760208060031936011261019e5760043590816000526002815260018060a01b036103e081604060002054161515611922565b8260005260098252604060002092604051906103fb82611417565b82855416825281600195848782015416948683019586526104876104806104776104276002860161151c565b936040870194855261046f8161046761045a600560038b01549a60608d019b8c52608060048201549d019c8d520161151c565b9a60a08d019b8c52611965565b9a5116611af4565b995116611af4565b92519351611965565b9351611965565b93519587604051998a97600091600854906104a1826114e2565b9181811690811561063957506001146105d8575b505091816104d58460369b9a9896946105c49d9a9896519485920161136e565b01673f77696e6e65723d60c01b81526104f7825180938d60088501910161136e565b0169266f70706f6e656e743d60b01b600882015261051e825180938c60128501910161136e565b01652667616d653d60d01b6012820152610541825180938b60188501910161136e565b01662677616765723d60c81b6018820152610565825180938a601f8501910161136e565b016a2674696d657374616d703d60a81b601f82015261058d8251809389602a8501910161136e565b016b2673637265656e73686f743d60a01b602a8201526105b58251809388878501910161136e565b0103601681018552018361144f565b61019a604051928284938452830190611391565b9091925060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3906000915b83831061061f575050508801820190806104d56104b5565b80549b830186019b909b528d9a8d95909201918101610607565b60ff1916868d0152505080151502890183019150806104d56104b5565b3461019e5760a036600319011261019e5761066f6113b6565b6106776113cc565b60443567ffffffffffffffff811161019e576106979036906004016114c4565b60843567ffffffffffffffff811161019e576106b79036906004016114c4565b916106c06115c2565b600754926106cd846118fd565b600755604051906106dd82611417565b6001600160a01b03868116835292831660208084019182526040808501878152606435606087015242608087015260a0860194909452600088815260099092529020835181549086166001600160a01b03199182161782559151600182018054919096169216919091179093555180519067ffffffffffffffff8211610b845761076a60028501546114e2565b601f8111610c16575b50602090601f8311600114610ba55760a093929160009183610b9a575b50508160011b916000199060031b1c19161760028401555b6060810151600384015560808101516004840155015180519067ffffffffffffffff8211610b84576107dd60058401546114e2565b601f8111610b3d575b50602090601f8311600114610acf576005929160009183610ac4575b50508160011b916000199060031b1c1916179101555b60405161082481611433565b600081526001600160a01b03841615610aab576000838152600260205260409020546001600160a01b031680151590849082610a74575b6001600160a01b0387166000818152600360209081526040808320805460010190558583526002909152812080546001600160a01b031916831790559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4610a5b57833b610925575b5091817ff65f8af45d2c7b79a3f8a4ca6a7769347f5c993567035809652d932123642a00610907602095604051918291604083526040830190611391565b606435828901526001600160a01b03909516940390a3604051908152f35b6040516020818061095f630a85bd0160e11b9586835233600484015260006024840152886044840152608060648401526084830190611391565b038160006001600160a01b038a165af160009181610a16575b506109e057843d156109d8573d9061098f82611471565b9161099d604051938461144f565b82523d6000602084013e5b815191826109d157604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6060906109a8565b6001600160e01b031916036109f557816108c9565b604051633250574960e11b81526001600160a01b0384166004820152602490fd5b9091506020813d602011610a53575b81610a326020938361144f565b8101031261019e57516001600160e01b03198116810361019e579086610978565b3d9150610a25565b6040516339e3563760e11b815260006004820152602490fd5b600082815260046020526040902080546001600160a01b03191690558060005260036020526040600020600019815401905561085b565b604051633250574960e11b815260006004820152602490fd5b015190508780610802565b90601f198316916005850160005260206000209260005b818110610b2557509160019391856005969410610b0c575b505050811b01910155610818565b015160001960f88460031b161c19169055878080610afe565b92936020600181928786015181550195019301610ae6565b600584016000526020600020601f840160051c810160208510610b7d575b601f830160051c82018110610b715750506107e6565b60008155600101610b5b565b5080610b5b565b634e487b7160e01b600052604160045260246000fd5b015190508880610790565b90601f198316916002860160005260206000209260005b818110610bfe575091600193918560a097969410610be5575b505050811b0160028401556107a8565b015160001960f88460031b161c19169055888080610bd5565b92936020600181928786015181550195019301610bbc565b600285016000526020600020601f840160051c810160208510610c56575b601f830160051c82018110610c4a575050610773565b60008155600101610c34565b5080610c34565b3461019e57608036600319011261019e57610c766113b6565b610c7e6113cc565b906044356064359267ffffffffffffffff841161019e573660238501121561019e57610cb7610cc994369060248160040135910161148d565b92610cc38383836115ee565b336117af565b005b3461019e57604036600319011261019e57610ce46113b6565b6024359081151580920361019e576001600160a01b0316908115610d5757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b3461019e57600036600319011261019e5760405160006001805490610d94826114e2565b80855291818116908115610e285750600114610dcf575b61019a84610dbb8186038261144f565b604051918291602083526020830190611391565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610e10575050508101602001610dbb82610dab565b80546020858701810191909152909301928101610df8565b60ff191660208087019190915292151560051b85019092019250610dbb9150839050610dab565b3461019e57600036600319011261019e576006546040516001600160a01b039091168152602090f35b3461019e57600036600319011261019e57610e916115c2565b600680546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019e57602036600319011261019e576001600160a01b03610ef66113b6565b168015610f155760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b3461019e57602036600319011261019e576020610f4c600435611774565b6040516001600160a01b039091168152f35b3461019e5760208060031936011261019e5767ffffffffffffffff60043581811161019e57610f919036906004016114c4565b91610f9a6115c2565b8251918211610b8457610fae6008546114e2565b601f8111611074575b5080601f8311600114610ff357508192600092610fe8575b5050600019600383901b1c191660019190911b17600855005b015190508280610fcf565b90601f1983169360086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b86821061105c5750508360019510611043575b505050811b01600855005b015160001960f88460031b161c19169055828080611038565b80600185968294968601518155019501930190611025565b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c8101918385106110ce575b601f0160051c01905b8181106110c25750610fb7565b600081556001016110b5565b90915081906110ac565b3461019e57610cc96110e9366113e2565b90604051926110f784611433565b60008452610cc38383836115ee565b3461019e57610cc9611117366113e2565b916115ee565b3461019e57600036600319011261019e576020600754604051908152f35b3461019e57604036600319011261019e576111546113b6565b60243561116081611774565b3315158061120f575b806111e2575b6111ca576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561116f565b506001600160a01b038116331415611169565b3461019e57602036600319011261019e5760043561123f81611774565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461019e57600036600319011261019e5760405160008054611281816114e2565b80845290600190818116908115610e2857506001146112aa5761019a84610dbb8186038261144f565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106112eb575050508101602001610dbb82610dab565b805460208587018101919091529093019281016112d3565b3461019e57602036600319011261019e576004359063ffffffff60e01b821680920361019e576020916380ac58cd60e01b811490811561135d575b811561134c575b5015158152f35b6301ffc9a760e01b14905083611345565b635b5e139f60e01b8114915061133e565b60005b8381106113815750506000910152565b8181015183820152602001611371565b906020916113aa8151809281855285808601910161136e565b601f01601f1916010190565b600435906001600160a01b038216820361019e57565b602435906001600160a01b038216820361019e57565b606090600319011261019e576001600160a01b0390600435828116810361019e5791602435908116810361019e579060443590565b60c0810190811067ffffffffffffffff821117610b8457604052565b6020810190811067ffffffffffffffff821117610b8457604052565b90601f8019910116810190811067ffffffffffffffff821117610b8457604052565b67ffffffffffffffff8111610b8457601f01601f191660200190565b92919261149982611471565b916114a7604051938461144f565b82948184528183011161019e578281602093846000960137010152565b9080601f8301121561019e578160206114df9335910161148d565b90565b90600182811c92168015611512575b60208310146114fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114f1565b9060405191826000825492611530846114e2565b90818452600194858116908160001461159f575060011461155c575b505061155a9250038361144f565b565b9093915060005260209081600020936000915b81831061158757505061155a9350820101388061154c565b8554888401850152948501948794509183019161156f565b91505061155a94506020925060ff191682840152151560051b820101388061154c565b6006546001600160a01b031633036115d657565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039182169290918315610aab576000928284528260209560028752604096848888205416968791331515806116de575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846116ab575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361168a5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611651565b91939450915080611733575b156116fa57859291879138611625565b878688611717576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611758575b806116ea57508582526004815233858984205416146116ea565b5086825260058152878220338352815260ff888320541661173e565b6000818152600260205260409020546001600160a01b0316908115611797575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b6117c1575b5050505050565b604051630a85bd0160e11b8082526001600160a01b03938416600483015295831660248201526044810191909152608060648201529492169260209291859061180e906084830190611391565b039483816000978189895af18691816118b9575b50611883575050503d60001461187a573d61183c81611471565b9061184a604051928361144f565b81528093823d92013e5b8251928361187557604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250611854565b919450915063ffffffff60e01b16036118a1575038808080806117ba565b60249060405190633250574960e11b82526004820152fd5b9091508481813d83116118f6575b6118d1818361144f565b810103126118f257516001600160e01b0319811681036118f2579038611822565b8680fd5b503d6118c7565b600019811461190c5760010190565b634e487b7160e01b600052601160045260246000fd5b1561192957565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015611abf575b506d04ee2d6d415b85acef810000000080831015611ab0575b50662386f26fc1000080831015611aa1575b506305f5e10080831015611a92575b5061271080831015611a83575b506064821015611a73575b600a80921015611a69575b600190816021818601956119fe87611471565b96611a0c604051988961144f565b808852611a1b601f1991611471565b01366020890137860101905b611a33575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215611a6457919082611a27565b611a2c565b91600101916119eb565b91906064600291049101916119e0565b600491939204910191386119d5565b600891939204910191386119c8565b601091939204910191386119b9565b602091939204910191386119a7565b60409350810491503861198e565b908151811015611ade570160200190565b634e487b7160e01b600052603260045260246000fd5b6040805167ffffffffffffffff926001600160a01b0316919080820184811182821017610b84578252601081526020916f181899199a1a9b1b9c1cb0b131b232b360811b83830152805194606086019086821090821117610b84578152602a855282850190368237845115611ade5760309053835192600193841015611ade576078602186015360005b60148110611b8e57505050505090565b600c810180821161190c5784811015611ade5782901a60046001600160f81b0319600f81611bc085851c831689611acd565b511693858a1b94600290878704821488151715611c4057868201809211611c4057611bf5611bfd9493928e9260001a92611acd565b531687611acd565b5116906003928301809311611c2b575090611c20611c26939260001a9189611acd565b536118fd565b611b7e565b601190634e487b7160e01b6000525260246000fd5b601186634e487b7160e01b6000525260246000fdfea2646970667358221220e5f33cade0dd87d1afd1d2a05c063b942ed60946ca97cf540dae20a44b6801db64736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x34D JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x337 JUMPI DUP4 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 SWAP1 PUSH12 0x27B93134BA102BB4B73732B9 PUSH1 0xA1 SHL DUP3 DUP3 ADD MSTORE DUP4 MLOAD DUP5 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH3 0x337 JUMPI DUP6 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x27A92124AA16ABA4A7 PUSH1 0xB9 SHL DUP4 DUP3 ADD MSTORE DUP2 MLOAD SWAP4 DUP1 DUP6 GT PUSH3 0x337 JUMPI PUSH1 0x0 SWAP5 DUP1 PUSH3 0x82 DUP8 SLOAD PUSH3 0x352 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH3 0x307 JUMPI JUMPDEST POP DUP7 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x29F JUMPI DUP9 SWAP3 PUSH3 0x293 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST DUP2 MLOAD SWAP1 DUP2 GT PUSH3 0x27F JUMPI DUP1 PUSH1 0x1 SWAP3 PUSH3 0xD4 DUP5 SLOAD PUSH3 0x352 JUMP JUMPDEST DUP6 DUP2 GT PUSH3 0x244 JUMPI JUMPDEST POP DUP6 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x1E0 JUMPI DUP8 SWAP3 PUSH3 0x1D4 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x1BC JUMPI PUSH1 0x6 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP6 DUP1 LOG3 PUSH3 0x15D PUSH1 0x8 SLOAD PUSH3 0x352 JUMP JUMPDEST SWAP2 DUP2 DUP4 GT PUSH3 0x19A JUMPI JUMPDEST PUSH32 0x68747470733A2F2F6F726269742E6170702F6170692F6E66742F000000000034 PUSH1 0x8 SSTORE DUP5 MLOAD PUSH2 0x1C8B SWAP1 DUP2 PUSH3 0x3A9 DUP3 CODECOPY RETURN JUMPDEST DUP4 PUSH1 0x8 PUSH3 0x1B2 SWAP6 MSTORE KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH3 0x167 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xF3 JUMP JUMPDEST DUP5 DUP9 MSTORE DUP7 DUP9 KECCAK256 DUP6 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP10 DUP3 DUP3 LT PUSH3 0x22D JUMPI POP POP DUP5 GT PUSH3 0x213 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x107 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x205 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP9 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x1F2 JUMP JUMPDEST PUSH3 0x26E SWAP1 DUP6 DUP10 MSTORE DUP8 DUP10 KECCAK256 DUP8 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP8 LT PUSH3 0x275 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE PUSH3 0xDD JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x262 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xA5 JUMP JUMPDEST DUP9 DUP1 MSTORE DUP8 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP10 DUP3 DUP3 LT PUSH3 0x2F0 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x2D6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0xBA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2C8 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x2AE JUMP JUMPDEST PUSH3 0x330 SWAP1 DUP10 DUP1 MSTORE DUP9 DUP11 KECCAK256 DUP9 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP8 LT PUSH3 0x275 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x38F JUMP JUMPDEST CODESIZE PUSH3 0x8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x384 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x36E JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x362 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x39B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x38F JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1303 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1260 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x111D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1106 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x10D8 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0xF5E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xF2E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xED5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xD70 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xCCB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xC3B34A40 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xD58A0E12 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A3 JUMPI PUSH4 0xF4025AAB EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x19A DUP2 DUP4 SLOAD AND SWAP2 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP3 PUSH2 0x149 PUSH1 0x2 DUP3 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH2 0x182 PUSH2 0x163 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD PUSH2 0x151C JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1BC PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x218 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x6 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x24A PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x2AD DUP2 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x2EE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x19A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x30A DUP5 PUSH2 0x1417 JUMP JUMPDEST DUP5 DUP3 SLOAD AND DUP5 MSTORE DUP5 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 DUP2 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0x38A PUSH2 0x32D PUSH1 0x2 DUP4 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 PUSH1 0x3 DUP5 ADD SLOAD SWAP6 PUSH1 0x60 DUP10 ADD SWAP7 DUP8 MSTORE PUSH2 0x35A PUSH1 0x5 PUSH1 0x4 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP13 ADD SWAP8 DUP9 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP6 PUSH1 0xA0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP3 DUP13 MSTORE MLOAD AND SWAP1 DUP11 ADD MSTORE MLOAD AND PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FB DUP3 PUSH2 0x1417 JUMP JUMPDEST DUP3 DUP6 SLOAD AND DUP3 MSTORE DUP2 PUSH1 0x1 SWAP6 DUP5 DUP8 DUP3 ADD SLOAD AND SWAP5 DUP7 DUP4 ADD SWAP6 DUP7 MSTORE PUSH2 0x487 PUSH2 0x480 PUSH2 0x477 PUSH2 0x427 PUSH1 0x2 DUP7 ADD PUSH2 0x151C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP8 ADD SWAP5 DUP6 MSTORE PUSH2 0x46F DUP2 PUSH2 0x467 PUSH2 0x45A PUSH1 0x5 PUSH1 0x3 DUP12 ADD SLOAD SWAP11 PUSH1 0x60 DUP14 ADD SWAP12 DUP13 MSTORE PUSH1 0x80 PUSH1 0x4 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP11 PUSH1 0xA0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x1965 JUMP JUMPDEST SWAP11 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP10 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 MLOAD SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD SWAP6 DUP8 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP8 PUSH1 0x0 SWAP2 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x4A1 DUP3 PUSH2 0x14E2 JUMP JUMPDEST SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x639 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5D8 JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x4D5 DUP5 PUSH1 0x36 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 PUSH2 0x5C4 SWAP14 SWAP11 SWAP9 SWAP7 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH8 0x3F77696E6E65723D PUSH1 0xC0 SHL DUP2 MSTORE PUSH2 0x4F7 DUP3 MLOAD DUP1 SWAP4 DUP14 PUSH1 0x8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH10 0x266F70706F6E656E743D PUSH1 0xB0 SHL PUSH1 0x8 DUP3 ADD MSTORE PUSH2 0x51E DUP3 MLOAD DUP1 SWAP4 DUP13 PUSH1 0x12 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH6 0x2667616D653D PUSH1 0xD0 SHL PUSH1 0x12 DUP3 ADD MSTORE PUSH2 0x541 DUP3 MLOAD DUP1 SWAP4 DUP12 PUSH1 0x18 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH7 0x2677616765723D PUSH1 0xC8 SHL PUSH1 0x18 DUP3 ADD MSTORE PUSH2 0x565 DUP3 MLOAD DUP1 SWAP4 DUP11 PUSH1 0x1F DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH11 0x2674696D657374616D703D PUSH1 0xA8 SHL PUSH1 0x1F DUP3 ADD MSTORE PUSH2 0x58D DUP3 MLOAD DUP1 SWAP4 DUP10 PUSH1 0x2A DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH12 0x2673637265656E73686F743D PUSH1 0xA0 SHL PUSH1 0x2A DUP3 ADD MSTORE PUSH2 0x5B5 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD SUB PUSH1 0x16 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x19A PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x61F JUMPI POP POP POP DUP9 ADD DUP3 ADD SWAP1 DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST DUP1 SLOAD SWAP12 DUP4 ADD DUP7 ADD SWAP12 SWAP1 SWAP12 MSTORE DUP14 SWAP11 DUP14 SWAP6 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x607 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP14 ADD MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP10 ADD DUP4 ADD SWAP2 POP DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x66F PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x697 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x6B7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0x6C0 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP3 PUSH2 0x6CD DUP5 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6DD DUP3 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP4 MSTORE SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x76A PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC16 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBA5 JUMPI PUSH1 0xA0 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xB9A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x7DD PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB3D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xACF JUMPI PUSH1 0x5 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xAC4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x824 DUP2 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP5 SWAP1 DUP3 PUSH2 0xA74 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0xA5B JUMPI DUP4 EXTCODESIZE PUSH2 0x925 JUMPI JUMPDEST POP SWAP2 DUP2 PUSH32 0xF65F8AF45D2C7B79A3F8A4CA6A7769347F5C993567035809652D932123642A00 PUSH2 0x907 PUSH1 0x20 SWAP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP3 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0x95F PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xA16 JUMPI JUMPDEST POP PUSH2 0x9E0 JUMPI DUP5 RETURNDATASIZE ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x98F DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x99D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP2 MLOAD SWAP2 DUP3 PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x9F5 JUMPI DUP2 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA53 JUMPI JUMPDEST DUP2 PUSH2 0xA32 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 DUP7 PUSH2 0x978 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x802 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB25 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x5 SWAP7 SWAP5 LT PUSH2 0xB0C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x818 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAFE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xB7D JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xB71 JUMPI POP POP PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB5B JUMP JUMPDEST POP DUP1 PUSH2 0xB5B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x790 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBFE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA0 SWAP8 SWAP7 SWAP5 LT PUSH2 0xBE5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x7A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xC56 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xC4A JUMPI POP POP PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC34 JUMP JUMPDEST POP DUP1 PUSH2 0xC34 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xC76 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x19E JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x19E JUMPI PUSH2 0xCB7 PUSH2 0xCC9 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP3 PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLER PUSH2 0x17AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xCE4 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xD57 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xD94 DUP3 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0xDCF JUMPI JUMPDEST PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0xE10 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xDBB SWAP2 POP DUP4 SWAP1 POP PUSH2 0xDAB JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xE91 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF6 PUSH2 0x13B6 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH2 0xF4C PUSH1 0x4 CALLDATALOAD PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x19E JUMPI PUSH2 0xF91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0xF9A PUSH2 0x15C2 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0xFAE PUSH1 0x8 SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1074 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFF3 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xFE8 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0xFCF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x105C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1043 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x10CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x10C2 JUMPI POP PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x10E9 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F7 DUP5 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x1117 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP2 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1154 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1160 DUP2 PUSH2 0x1774 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x120F JUMPI JUMPDEST DUP1 PUSH2 0x11E2 JUMPI JUMPDEST PUSH2 0x11CA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x116F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1169 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x123F DUP2 PUSH2 0x1774 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x1281 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12AA JUMPI PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x12EB JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x12D3 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x20 SWAP2 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x135D JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x134C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1345 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x133E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1381 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x13AA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB84 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1499 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x14A7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x19E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x19E JUMPI DUP2 PUSH1 0x20 PUSH2 0x14DF SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1512 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14FC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1530 DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x159F JUMPI POP PUSH1 0x1 EQ PUSH2 0x155C JUMPI JUMPDEST POP POP PUSH2 0x155A SWAP3 POP SUB DUP4 PUSH2 0x144F JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1587 JUMPI POP POP PUSH2 0x155A SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x156F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x155A SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x16DE JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x16AB JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x168A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1651 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1733 JUMPI JUMPDEST ISZERO PUSH2 0x16FA JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1625 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1717 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1758 JUMPI JUMPDEST DUP1 PUSH2 0x16EA JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x16EA JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x173E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1797 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x17C1 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x180E SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x18B9 JUMPI JUMPDEST POP PUSH2 0x1883 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x187A JUMPI RETURNDATASIZE PUSH2 0x183C DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP1 PUSH2 0x184A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1854 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x18A1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x18F6 JUMPI JUMPDEST PUSH2 0x18D1 DUP2 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x18F2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x18F2 JUMPI SWAP1 CODESIZE PUSH2 0x1822 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x190C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x1ABF JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x1AB0 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x1AA1 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x1A92 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x1A83 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x1A73 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1A69 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x19FE DUP8 PUSH2 0x1471 JUMP JUMPDEST SWAP7 PUSH2 0x1A0C PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x144F JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x1A1B PUSH1 0x1F NOT SWAP2 PUSH2 0x1471 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x1A33 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x1A64 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x198E JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1ADE JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP1 DUP3 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0xB84 JUMPI DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP4 DUP4 ADD MSTORE DUP1 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP7 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0xB84 JUMPI DUP2 MSTORE PUSH1 0x2A DUP6 MSTORE DUP3 DUP6 ADD SWAP1 CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 LT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x1B8E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC DUP2 ADD DUP1 DUP3 GT PUSH2 0x190C JUMPI DUP5 DUP2 LT ISZERO PUSH2 0x1ADE JUMPI DUP3 SWAP1 BYTE PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF DUP2 PUSH2 0x1BC0 DUP6 DUP6 SHR DUP4 AND DUP10 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP4 DUP6 DUP11 SHL SWAP5 PUSH1 0x2 SWAP1 DUP8 DUP8 DIV DUP3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1C40 JUMPI DUP7 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C40 JUMPI PUSH2 0x1BF5 PUSH2 0x1BFD SWAP5 SWAP4 SWAP3 DUP15 SWAP3 PUSH1 0x0 BYTE SWAP3 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 AND DUP8 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x3 SWAP3 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1C2B JUMPI POP SWAP1 PUSH2 0x1C20 PUSH2 0x1C26 SWAP4 SWAP3 PUSH1 0x0 BYTE SWAP2 DUP10 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 RETURN EXTCODECOPY 0xAD 0xE0 0xDD DUP8 0xD1 0xAF 0xD1 0xD2 LOG0 0x5C MOD EXTCODESIZE SWAP5 0x2E 0xD6 MULMOD CHAINID 0xCA SWAP8 0xCF SLOAD 0xD 0xAE KECCAK256 LOG4 0x4B PUSH9 0x1DB64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"360:3883:18:-:0;;;;;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;360:3883:18;;;;;;;;;;;;;;1012:10;1273:26:0;1269:95;;3004:6;360:3883:18;;1012:10;-1:-1:-1;;;;;;360:3883:18;;;;;;;-1:-1:-1;;;;;360:3883:18;3052:40:0;;;;360:3883:18;1034:44;360:3883;;:::i;:::-;;;;;;;;;1034:44;360:3883;;;;;;;;;;;;1034:44;360:3883;;;;;;;;;;;;:::i;:::-;;;;;;;1269:95:0;360:3883:18;;-1:-1:-1;;;1322:31:0;;;;;360:3883:18;;;;;1322:31:0;360:3883:18;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;-1:-1:-1;;360:3883:18;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;360:3883:18;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5068,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_16049":{"entryPoint":5046,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":5090,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_string":{"entryPoint":5261,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":5316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5009,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":5233,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4974,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5346,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5199,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16062":{"entryPoint":5143,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26743":{"entryPoint":5171,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addressToString":{"entryPoint":6900,"id":8235,"parameterSlots":1,"returnSlots":1},"fun_approve":{"entryPoint":null,"id":1252,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":6063,"id":1558,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":5570,"id":84,"parameterSlots":0,"returnSlots":0},"fun_requireOwned":{"entryPoint":6004,"id":1318,"parameterSlots":1,"returnSlots":1},"fun_toString":{"entryPoint":6501,"id":1824,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":5614,"id":679,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":6397,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":6861,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_547b":{"entryPoint":6434,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146113035750806306fdde0314611260578063081812fc14611222578063095ea7b31461113b57806318160ddd1461111d57806323b872dd1461110657806342842e0e146110d857806355f804b314610f5e5780636352211e14610f2e57806370a0823114610ed5578063715018a614610e785780638da5cb5b14610e4f57806395d89b4114610d70578063a22cb46514610ccb578063b88d4fde14610c5d578063c3b34a4014610656578063c87b56dd146103a9578063d58a0e1214610287578063e985e9c514610231578063f2fde38b146101a35763f4025aab1461010657600080fd5b3461019e57602036600319011261019e576004356000526009602052604060002060018060a01b0361019a8183541691600184015416926101496002820161151c565b60038201549161018261016360056004840154930161151c565b926040519788978852602088015260c0604088015260c0870190611391565b926060860152608085015283820360a0850152611391565b0390f35b600080fd5b3461019e57602036600319011261019e576101bc6113b6565b6101c46115c2565b6001600160a01b0390811690811561021857600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461019e57604036600319011261019e5761024a6113b6565b6102526113cc565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b3461019e5760208060031936011261019e5760043590606060a06040516102ad81611417565b60008152600084820152826040820152600083820152600060808201520152816000526002815260018060a01b03916102ee83604060002054161515611922565b6000526009815261019a60406000206040519261030a84611417565b848254168452846001830154169181850192835261038a61032d6002830161151c565b60408701908152876003840154956060890196875261035a600560048701549660808c019788520161151c565b9560a08a019687526040519a8b9a828c525116908a0152511660408801525160c0606088015260e0870190611391565b925160808601525160a085015251838203601f190160c0850152611391565b3461019e5760208060031936011261019e5760043590816000526002815260018060a01b036103e081604060002054161515611922565b8260005260098252604060002092604051906103fb82611417565b82855416825281600195848782015416948683019586526104876104806104776104276002860161151c565b936040870194855261046f8161046761045a600560038b01549a60608d019b8c52608060048201549d019c8d520161151c565b9a60a08d019b8c52611965565b9a5116611af4565b995116611af4565b92519351611965565b9351611965565b93519587604051998a97600091600854906104a1826114e2565b9181811690811561063957506001146105d8575b505091816104d58460369b9a9896946105c49d9a9896519485920161136e565b01673f77696e6e65723d60c01b81526104f7825180938d60088501910161136e565b0169266f70706f6e656e743d60b01b600882015261051e825180938c60128501910161136e565b01652667616d653d60d01b6012820152610541825180938b60188501910161136e565b01662677616765723d60c81b6018820152610565825180938a601f8501910161136e565b016a2674696d657374616d703d60a81b601f82015261058d8251809389602a8501910161136e565b016b2673637265656e73686f743d60a01b602a8201526105b58251809388878501910161136e565b0103601681018552018361144f565b61019a604051928284938452830190611391565b9091925060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3906000915b83831061061f575050508801820190806104d56104b5565b80549b830186019b909b528d9a8d95909201918101610607565b60ff1916868d0152505080151502890183019150806104d56104b5565b3461019e5760a036600319011261019e5761066f6113b6565b6106776113cc565b60443567ffffffffffffffff811161019e576106979036906004016114c4565b60843567ffffffffffffffff811161019e576106b79036906004016114c4565b916106c06115c2565b600754926106cd846118fd565b600755604051906106dd82611417565b6001600160a01b03868116835292831660208084019182526040808501878152606435606087015242608087015260a0860194909452600088815260099092529020835181549086166001600160a01b03199182161782559151600182018054919096169216919091179093555180519067ffffffffffffffff8211610b845761076a60028501546114e2565b601f8111610c16575b50602090601f8311600114610ba55760a093929160009183610b9a575b50508160011b916000199060031b1c19161760028401555b6060810151600384015560808101516004840155015180519067ffffffffffffffff8211610b84576107dd60058401546114e2565b601f8111610b3d575b50602090601f8311600114610acf576005929160009183610ac4575b50508160011b916000199060031b1c1916179101555b60405161082481611433565b600081526001600160a01b03841615610aab576000838152600260205260409020546001600160a01b031680151590849082610a74575b6001600160a01b0387166000818152600360209081526040808320805460010190558583526002909152812080546001600160a01b031916831790559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4610a5b57833b610925575b5091817ff65f8af45d2c7b79a3f8a4ca6a7769347f5c993567035809652d932123642a00610907602095604051918291604083526040830190611391565b606435828901526001600160a01b03909516940390a3604051908152f35b6040516020818061095f630a85bd0160e11b9586835233600484015260006024840152886044840152608060648401526084830190611391565b038160006001600160a01b038a165af160009181610a16575b506109e057843d156109d8573d9061098f82611471565b9161099d604051938461144f565b82523d6000602084013e5b815191826109d157604051633250574960e11b81526001600160a01b0383166004820152602490fd5b6020915001fd5b6060906109a8565b6001600160e01b031916036109f557816108c9565b604051633250574960e11b81526001600160a01b0384166004820152602490fd5b9091506020813d602011610a53575b81610a326020938361144f565b8101031261019e57516001600160e01b03198116810361019e579086610978565b3d9150610a25565b6040516339e3563760e11b815260006004820152602490fd5b600082815260046020526040902080546001600160a01b03191690558060005260036020526040600020600019815401905561085b565b604051633250574960e11b815260006004820152602490fd5b015190508780610802565b90601f198316916005850160005260206000209260005b818110610b2557509160019391856005969410610b0c575b505050811b01910155610818565b015160001960f88460031b161c19169055878080610afe565b92936020600181928786015181550195019301610ae6565b600584016000526020600020601f840160051c810160208510610b7d575b601f830160051c82018110610b715750506107e6565b60008155600101610b5b565b5080610b5b565b634e487b7160e01b600052604160045260246000fd5b015190508880610790565b90601f198316916002860160005260206000209260005b818110610bfe575091600193918560a097969410610be5575b505050811b0160028401556107a8565b015160001960f88460031b161c19169055888080610bd5565b92936020600181928786015181550195019301610bbc565b600285016000526020600020601f840160051c810160208510610c56575b601f830160051c82018110610c4a575050610773565b60008155600101610c34565b5080610c34565b3461019e57608036600319011261019e57610c766113b6565b610c7e6113cc565b906044356064359267ffffffffffffffff841161019e573660238501121561019e57610cb7610cc994369060248160040135910161148d565b92610cc38383836115ee565b336117af565b005b3461019e57604036600319011261019e57610ce46113b6565b6024359081151580920361019e576001600160a01b0316908115610d5757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b3461019e57600036600319011261019e5760405160006001805490610d94826114e2565b80855291818116908115610e285750600114610dcf575b61019a84610dbb8186038261144f565b604051918291602083526020830190611391565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610e10575050508101602001610dbb82610dab565b80546020858701810191909152909301928101610df8565b60ff191660208087019190915292151560051b85019092019250610dbb9150839050610dab565b3461019e57600036600319011261019e576006546040516001600160a01b039091168152602090f35b3461019e57600036600319011261019e57610e916115c2565b600680546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019e57602036600319011261019e576001600160a01b03610ef66113b6565b168015610f155760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b3461019e57602036600319011261019e576020610f4c600435611774565b6040516001600160a01b039091168152f35b3461019e5760208060031936011261019e5767ffffffffffffffff60043581811161019e57610f919036906004016114c4565b91610f9a6115c2565b8251918211610b8457610fae6008546114e2565b601f8111611074575b5080601f8311600114610ff357508192600092610fe8575b5050600019600383901b1c191660019190911b17600855005b015190508280610fcf565b90601f1983169360086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3926000905b86821061105c5750508360019510611043575b505050811b01600855005b015160001960f88460031b161c19169055828080611038565b80600185968294968601518155019501930190611025565b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c8101918385106110ce575b601f0160051c01905b8181106110c25750610fb7565b600081556001016110b5565b90915081906110ac565b3461019e57610cc96110e9366113e2565b90604051926110f784611433565b60008452610cc38383836115ee565b3461019e57610cc9611117366113e2565b916115ee565b3461019e57600036600319011261019e576020600754604051908152f35b3461019e57604036600319011261019e576111546113b6565b60243561116081611774565b3315158061120f575b806111e2575b6111ca576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561116f565b506001600160a01b038116331415611169565b3461019e57602036600319011261019e5760043561123f81611774565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461019e57600036600319011261019e5760405160008054611281816114e2565b80845290600190818116908115610e2857506001146112aa5761019a84610dbb8186038261144f565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106112eb575050508101602001610dbb82610dab565b805460208587018101919091529093019281016112d3565b3461019e57602036600319011261019e576004359063ffffffff60e01b821680920361019e576020916380ac58cd60e01b811490811561135d575b811561134c575b5015158152f35b6301ffc9a760e01b14905083611345565b635b5e139f60e01b8114915061133e565b60005b8381106113815750506000910152565b8181015183820152602001611371565b906020916113aa8151809281855285808601910161136e565b601f01601f1916010190565b600435906001600160a01b038216820361019e57565b602435906001600160a01b038216820361019e57565b606090600319011261019e576001600160a01b0390600435828116810361019e5791602435908116810361019e579060443590565b60c0810190811067ffffffffffffffff821117610b8457604052565b6020810190811067ffffffffffffffff821117610b8457604052565b90601f8019910116810190811067ffffffffffffffff821117610b8457604052565b67ffffffffffffffff8111610b8457601f01601f191660200190565b92919261149982611471565b916114a7604051938461144f565b82948184528183011161019e578281602093846000960137010152565b9080601f8301121561019e578160206114df9335910161148d565b90565b90600182811c92168015611512575b60208310146114fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114f1565b9060405191826000825492611530846114e2565b90818452600194858116908160001461159f575060011461155c575b505061155a9250038361144f565b565b9093915060005260209081600020936000915b81831061158757505061155a9350820101388061154c565b8554888401850152948501948794509183019161156f565b91505061155a94506020925060ff191682840152151560051b820101388061154c565b6006546001600160a01b031633036115d657565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039182169290918315610aab576000928284528260209560028752604096848888205416968791331515806116de575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846116ab575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361168a5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611651565b91939450915080611733575b156116fa57859291879138611625565b878688611717576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611758575b806116ea57508582526004815233858984205416146116ea565b5086825260058152878220338352815260ff888320541661173e565b6000818152600260205260409020546001600160a01b0316908115611797575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b6117c1575b5050505050565b604051630a85bd0160e11b8082526001600160a01b03938416600483015295831660248201526044810191909152608060648201529492169260209291859061180e906084830190611391565b039483816000978189895af18691816118b9575b50611883575050503d60001461187a573d61183c81611471565b9061184a604051928361144f565b81528093823d92013e5b8251928361187557604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250611854565b919450915063ffffffff60e01b16036118a1575038808080806117ba565b60249060405190633250574960e11b82526004820152fd5b9091508481813d83116118f6575b6118d1818361144f565b810103126118f257516001600160e01b0319811681036118f2579038611822565b8680fd5b503d6118c7565b600019811461190c5760010190565b634e487b7160e01b600052601160045260246000fd5b1561192957565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015611abf575b506d04ee2d6d415b85acef810000000080831015611ab0575b50662386f26fc1000080831015611aa1575b506305f5e10080831015611a92575b5061271080831015611a83575b506064821015611a73575b600a80921015611a69575b600190816021818601956119fe87611471565b96611a0c604051988961144f565b808852611a1b601f1991611471565b01366020890137860101905b611a33575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215611a6457919082611a27565b611a2c565b91600101916119eb565b91906064600291049101916119e0565b600491939204910191386119d5565b600891939204910191386119c8565b601091939204910191386119b9565b602091939204910191386119a7565b60409350810491503861198e565b908151811015611ade570160200190565b634e487b7160e01b600052603260045260246000fd5b6040805167ffffffffffffffff926001600160a01b0316919080820184811182821017610b84578252601081526020916f181899199a1a9b1b9c1cb0b131b232b360811b83830152805194606086019086821090821117610b84578152602a855282850190368237845115611ade5760309053835192600193841015611ade576078602186015360005b60148110611b8e57505050505090565b600c810180821161190c5784811015611ade5782901a60046001600160f81b0319600f81611bc085851c831689611acd565b511693858a1b94600290878704821488151715611c4057868201809211611c4057611bf5611bfd9493928e9260001a92611acd565b531687611acd565b5116906003928301809311611c2b575090611c20611c26939260001a9189611acd565b536118fd565b611b7e565b601190634e487b7160e01b6000525260246000fd5b601186634e487b7160e01b6000525260246000fdfea2646970667358221220e5f33cade0dd87d1afd1d2a05c063b942ed60946ca97cf540dae20a44b6801db64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1303 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1260 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x111D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1106 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x10D8 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0xF5E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xF2E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xED5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xD70 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xCCB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xC3B34A40 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xD58A0E12 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A3 JUMPI PUSH4 0xF4025AAB EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x19A DUP2 DUP4 SLOAD AND SWAP2 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP3 PUSH2 0x149 PUSH1 0x2 DUP3 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH2 0x182 PUSH2 0x163 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD PUSH2 0x151C JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1BC PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x218 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x6 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x24A PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x2AD DUP2 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x2EE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x19A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x30A DUP5 PUSH2 0x1417 JUMP JUMPDEST DUP5 DUP3 SLOAD AND DUP5 MSTORE DUP5 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 DUP2 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0x38A PUSH2 0x32D PUSH1 0x2 DUP4 ADD PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 PUSH1 0x3 DUP5 ADD SLOAD SWAP6 PUSH1 0x60 DUP10 ADD SWAP7 DUP8 MSTORE PUSH2 0x35A PUSH1 0x5 PUSH1 0x4 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP13 ADD SWAP8 DUP9 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP6 PUSH1 0xA0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP3 DUP13 MSTORE MLOAD AND SWAP1 DUP11 ADD MSTORE MLOAD AND PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x1391 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1922 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FB DUP3 PUSH2 0x1417 JUMP JUMPDEST DUP3 DUP6 SLOAD AND DUP3 MSTORE DUP2 PUSH1 0x1 SWAP6 DUP5 DUP8 DUP3 ADD SLOAD AND SWAP5 DUP7 DUP4 ADD SWAP6 DUP7 MSTORE PUSH2 0x487 PUSH2 0x480 PUSH2 0x477 PUSH2 0x427 PUSH1 0x2 DUP7 ADD PUSH2 0x151C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP8 ADD SWAP5 DUP6 MSTORE PUSH2 0x46F DUP2 PUSH2 0x467 PUSH2 0x45A PUSH1 0x5 PUSH1 0x3 DUP12 ADD SLOAD SWAP11 PUSH1 0x60 DUP14 ADD SWAP12 DUP13 MSTORE PUSH1 0x80 PUSH1 0x4 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD PUSH2 0x151C JUMP JUMPDEST SWAP11 PUSH1 0xA0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x1965 JUMP JUMPDEST SWAP11 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP10 MLOAD AND PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 MLOAD SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x1965 JUMP JUMPDEST SWAP4 MLOAD SWAP6 DUP8 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP8 PUSH1 0x0 SWAP2 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x4A1 DUP3 PUSH2 0x14E2 JUMP JUMPDEST SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x639 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5D8 JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x4D5 DUP5 PUSH1 0x36 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 PUSH2 0x5C4 SWAP14 SWAP11 SWAP9 SWAP7 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH8 0x3F77696E6E65723D PUSH1 0xC0 SHL DUP2 MSTORE PUSH2 0x4F7 DUP3 MLOAD DUP1 SWAP4 DUP14 PUSH1 0x8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH10 0x266F70706F6E656E743D PUSH1 0xB0 SHL PUSH1 0x8 DUP3 ADD MSTORE PUSH2 0x51E DUP3 MLOAD DUP1 SWAP4 DUP13 PUSH1 0x12 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH6 0x2667616D653D PUSH1 0xD0 SHL PUSH1 0x12 DUP3 ADD MSTORE PUSH2 0x541 DUP3 MLOAD DUP1 SWAP4 DUP12 PUSH1 0x18 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH7 0x2677616765723D PUSH1 0xC8 SHL PUSH1 0x18 DUP3 ADD MSTORE PUSH2 0x565 DUP3 MLOAD DUP1 SWAP4 DUP11 PUSH1 0x1F DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH11 0x2674696D657374616D703D PUSH1 0xA8 SHL PUSH1 0x1F DUP3 ADD MSTORE PUSH2 0x58D DUP3 MLOAD DUP1 SWAP4 DUP10 PUSH1 0x2A DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD PUSH12 0x2673637265656E73686F743D PUSH1 0xA0 SHL PUSH1 0x2A DUP3 ADD MSTORE PUSH2 0x5B5 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST ADD SUB PUSH1 0x16 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x19A PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x61F JUMPI POP POP POP DUP9 ADD DUP3 ADD SWAP1 DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST DUP1 SLOAD SWAP12 DUP4 ADD DUP7 ADD SWAP12 SWAP1 SWAP12 MSTORE DUP14 SWAP11 DUP14 SWAP6 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x607 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP14 ADD MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP10 ADD DUP4 ADD SWAP2 POP DUP1 PUSH2 0x4D5 PUSH2 0x4B5 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x66F PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x697 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19E JUMPI PUSH2 0x6B7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0x6C0 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP3 PUSH2 0x6CD DUP5 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6DD DUP3 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP4 MSTORE SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x76A PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC16 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBA5 JUMPI PUSH1 0xA0 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xB9A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0x7DD PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB3D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xACF JUMPI PUSH1 0x5 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xAC4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x824 DUP2 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP5 SWAP1 DUP3 PUSH2 0xA74 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0xA5B JUMPI DUP4 EXTCODESIZE PUSH2 0x925 JUMPI JUMPDEST POP SWAP2 DUP2 PUSH32 0xF65F8AF45D2C7B79A3F8A4CA6A7769347F5C993567035809652D932123642A00 PUSH2 0x907 PUSH1 0x20 SWAP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP3 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0x95F PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xA16 JUMPI JUMPDEST POP PUSH2 0x9E0 JUMPI DUP5 RETURNDATASIZE ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x98F DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x99D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP2 MLOAD SWAP2 DUP3 PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x9F5 JUMPI DUP2 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA53 JUMPI JUMPDEST DUP2 PUSH2 0xA32 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 DUP7 PUSH2 0x978 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x802 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB25 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x5 SWAP7 SWAP5 LT PUSH2 0xB0C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x818 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xAFE JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xB7D JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xB71 JUMPI POP POP PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB5B JUMP JUMPDEST POP DUP1 PUSH2 0xB5B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x790 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBFE JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA0 SWAP8 SWAP7 SWAP5 LT PUSH2 0xBE5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x7A8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xC56 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xC4A JUMPI POP POP PUSH2 0x773 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC34 JUMP JUMPDEST POP DUP1 PUSH2 0xC34 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xC76 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xC7E PUSH2 0x13CC JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x19E JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x19E JUMPI PUSH2 0xCB7 PUSH2 0xCC9 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP3 PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLER PUSH2 0x17AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xCE4 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xD57 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xD94 DUP3 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0xDCF JUMPI JUMPDEST PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0xE10 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xDBB SWAP2 POP DUP4 SWAP1 POP PUSH2 0xDAB JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0xE91 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEF6 PUSH2 0x13B6 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH2 0xF4C PUSH1 0x4 CALLDATALOAD PUSH2 0x1774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x19E JUMPI PUSH2 0xF91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C4 JUMP JUMPDEST SWAP2 PUSH2 0xF9A PUSH2 0x15C2 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 GT PUSH2 0xB84 JUMPI PUSH2 0xFAE PUSH1 0x8 SLOAD PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1074 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFF3 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xFE8 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0xFCF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x105C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1043 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x10CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x10C2 JUMPI POP PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x10E9 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F7 DUP5 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH2 0xCC9 PUSH2 0x1117 CALLDATASIZE PUSH2 0x13E2 JUMP JUMPDEST SWAP2 PUSH2 0x15EE JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH2 0x1154 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1160 DUP2 PUSH2 0x1774 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x120F JUMPI JUMPDEST DUP1 PUSH2 0x11E2 JUMPI JUMPDEST PUSH2 0x11CA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x116F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1169 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x123F DUP2 PUSH2 0x1774 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x1281 DUP2 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12AA JUMPI PUSH2 0x19A DUP5 PUSH2 0xDBB DUP2 DUP7 SUB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x12EB JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xDBB DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x12D3 JUMP JUMPDEST CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x19E JUMPI PUSH1 0x20 SWAP2 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x135D JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x134C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1345 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x133E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1381 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x13AA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x19E JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x19E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB84 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB84 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1499 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 PUSH2 0x14A7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x144F JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x19E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x19E JUMPI DUP2 PUSH1 0x20 PUSH2 0x14DF SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x148D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1512 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14FC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1530 DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x159F JUMPI POP PUSH1 0x1 EQ PUSH2 0x155C JUMPI JUMPDEST POP POP PUSH2 0x155A SWAP3 POP SUB DUP4 PUSH2 0x144F JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1587 JUMPI POP POP PUSH2 0x155A SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x156F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x155A SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x16DE JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x16AB JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x168A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1651 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1733 JUMPI JUMPDEST ISZERO PUSH2 0x16FA JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1625 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1717 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1758 JUMPI JUMPDEST DUP1 PUSH2 0x16EA JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x16EA JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x173E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1797 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x17C1 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x180E SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1391 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x18B9 JUMPI JUMPDEST POP PUSH2 0x1883 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x187A JUMPI RETURNDATASIZE PUSH2 0x183C DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP1 PUSH2 0x184A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1854 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x18A1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x18F6 JUMPI JUMPDEST PUSH2 0x18D1 DUP2 DUP4 PUSH2 0x144F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x18F2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x18F2 JUMPI SWAP1 CODESIZE PUSH2 0x1822 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x190C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1929 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x1ABF JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x1AB0 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x1AA1 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x1A92 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x1A83 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x1A73 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1A69 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x19FE DUP8 PUSH2 0x1471 JUMP JUMPDEST SWAP7 PUSH2 0x1A0C PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x144F JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x1A1B PUSH1 0x1F NOT SWAP2 PUSH2 0x1471 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x1A33 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x1A64 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x198E JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1ADE JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP1 DUP3 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0xB84 JUMPI DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP4 DUP4 ADD MSTORE DUP1 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP7 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0xB84 JUMPI DUP2 MSTORE PUSH1 0x2A DUP6 MSTORE DUP3 DUP6 ADD SWAP1 CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 LT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT PUSH2 0x1B8E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC DUP2 ADD DUP1 DUP3 GT PUSH2 0x190C JUMPI DUP5 DUP2 LT ISZERO PUSH2 0x1ADE JUMPI DUP3 SWAP1 BYTE PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF DUP2 PUSH2 0x1BC0 DUP6 DUP6 SHR DUP4 AND DUP10 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP4 DUP6 DUP11 SHL SWAP5 PUSH1 0x2 SWAP1 DUP8 DUP8 DIV DUP3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1C40 JUMPI DUP7 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C40 JUMPI PUSH2 0x1BF5 PUSH2 0x1BFD SWAP5 SWAP4 SWAP3 DUP15 SWAP3 PUSH1 0x0 BYTE SWAP3 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 AND DUP8 PUSH2 0x1ACD JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x3 SWAP3 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1C2B JUMPI POP SWAP1 PUSH2 0x1C20 PUSH2 0x1C26 SWAP4 SWAP3 PUSH1 0x0 BYTE SWAP2 DUP10 PUSH2 0x1ACD JUMP JUMPDEST MSTORE8 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 RETURN EXTCODECOPY 0xAD 0xE0 0xDD DUP8 0xD1 0xAF 0xD1 0xD2 LOG0 0x5C MOD EXTCODESIZE SWAP5 0x2E 0xD6 MULMOD CHAINID 0xCA SWAP8 0xCF SLOAD 0xD 0xAE KECCAK256 LOG4 0x4B PUSH9 0x1DB64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"360:3883:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;;;738:48;360:3883;;;;;;;;;;;;;;;738:48;360:3883;738:48;;360:3883;;738:48;;;;;;:::i;:::-;360:3883;738:48;;360:3883;738:48;360:3883;738:48;;360:3883;738:48;;360:3883;738:48;;;:::i;:::-;360:3883;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;360:3883:18;;;;2627:22:0;;2623:91;;3004:6;360:3883:18;;;;;;;;3004:6:0;360:3883:18;;3052:40:0;360:3883:18;3052:40:0;;360:3883:18;2623:91:0;360:3883:18;;-1:-1:-1;;;2672:31:0;;360:3883:18;;2672:31:0;;360:3883:18;;;2672:31:0;360:3883:18;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3776:18:3;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:3;360:3883:18;;;;;;;;2315:64;360:3883;;;;;;2323:31;;2315:64;:::i;:::-;360:3883;;2396:10;360:3883;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5470:7:3;360:3883:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5470:7:3;360:3883:18;;;;;;;2645:64;360:3883;;;;;;2653:31;;2645:64;:::i;:::-;360:3883;;;2753:10;360:3883;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3112:25;3056:27;2963:31;360:3883;5470:7:3;360:3883:18;;;:::i;:::-;;;;;;;;2906:29;360:3883;2862:18;360:3883;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2862:18;:::i;:::-;360:3883;;;2906:29;:::i;:::-;360:3883;;;2963:31;:::i;:::-;3018:13;;360:3883;;3056:27;:::i;:::-;360:3883;;3112:25;:::i;:::-;3167:19;;360:3883;;;;;;;;;2835:13;360:3883;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2805:391;360:3883;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;360:3883:18;;;;;;;;2835:13;360:3883;;;;;:::i;:::-;;-1:-1:-1;;;2835:13:18;360:3883;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;:::i;:::-;;2805:391;;;;;;;;;:::i;:::-;360:3883;;;;;;;;;;;;;:::i;:::-;;;;;2835:13;360:3883;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;2805:391;;;360:3883;-1:-1:-1;;360:3883:18;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;1632:17:18;360:3883;1632:17;;;;:::i;:::-;;360:3883;;;;;;;:::i;:::-;-1:-1:-1;;;;;360:3883:18;;;;;;;;;1690:236;;;360:3883;;;;1690:236;;;360:3883;;;;;;1690:236;;360:3883;1856:15;360:3883;1690:236;;360:3883;;1690:236;;360:3883;;;;-1:-1:-1;360:3883:18;;;1668:10;360:3883;;;;;;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:236;;360:3883;;;;;;1690:236;;360:3883;;;;;1690:236;360:3883;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;360:3883:18;;9691:16:3;9687:87;;360:3883:18;;;;;;;;;;;-1:-1:-1;;;;;360:3883:18;8830:18:3;;;;360:3883:18;;8830:18:3;8826:256;;360:3883:18;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;;9246:27:3;;;360:3883:18;9246:27:3;9849:96;;1173:14:7;;1169:744;;360:3883:18;;;;1995:55;360:3883;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;360:3883:18;;;;1995:55;;;360:3883;;;;;;1169:744:7;360:3883:18;;;;;;;;;1211:67:7;;;;735:10:8;360:3883:18;1211:67:7;;360:3883:18;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:7;360:3883:18;;-1:-1:-1;;;;;360:3883:18;;1211:67:7;;360:3883:18;;1211:67:7;;;1169:744;-1:-1:-1;1207:696:7;;1518:385;360:3883:18;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1568:18:7;;;360:3883:18;;-1:-1:-1;;;1672:39:7;;-1:-1:-1;;;;;360:3883:18;;;1672:39:7;;360:3883:18;;;1672:39:7;1564:325;360:3883:18;1758:113:7;;;;360:3883:18;;;;;1207:696:7;-1:-1:-1;;;;;;360:3883:18;1325:51:7;1321:182;;1207:696;1169:744;;1321:182;360:3883:18;;-1:-1:-1;;;1445:39:7;;-1:-1:-1;;;;;360:3883:18;;;1445:39:7;;360:3883:18;;;1445:39:7;1211:67;;;;360:3883:18;1211:67:7;;360:3883:18;1211:67:7;;;;;;360:3883:18;1211:67:7;;;:::i;:::-;;;360:3883:18;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;1211:67:7;;;;;;;-1:-1:-1;1211:67:7;;9849:96:3;360:3883:18;;-1:-1:-1;;;9903:31:3;;360:3883:18;;9903:31:3;;360:3883:18;;;9903:31:3;8826:256;360:3883:18;;;;15066:15:3;360:3883:18;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;8826:256:3;;9687:87;360:3883:18;;-1:-1:-1;;;9730:33:3;;360:3883:18;;9730:33:3;;360:3883:18;;;9730:33:3;360:3883:18;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4851:4:3;360:3883:18;;;;;;;;;;;:::i;:::-;4766:7:3;;;;;;:::i;:::-;735:10:8;4851:4:3;:::i;:::-;360:3883:18;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;360:3883:18;;15418:22:3;;15414:91;;735:10:8;360:3883:18;;15514:18:3;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:3;360:3883:18;735:10:8;15575:41:3;;360:3883:18;15414:91:3;360:3883:18;;-1:-1:-1;;;15463:31:3;;360:3883:18;15463:31:3;;360:3883:18;;;;;15463:31:3;360:3883:18;;;;;;-1:-1:-1;;360:3883:18;;;;;;;2473:7:3;360:3883:18;;;;;;:::i;:::-;;;;;;;;;2473:7:3;;;;360:3883:18;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;360:3883:18;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;-1:-1:-1;360:3883:18;;-1:-1:-1;360:3883:18;;;;;;;;-1:-1:-1;;360:3883:18;;;;1710:6:0;360:3883:18;;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;1500:62:0;;:::i;:::-;3004:6;360:3883:18;;-1:-1:-1;;;;;;360:3883:18;;;;;;;-1:-1:-1;;;;;360:3883:18;3052:40:0;360:3883:18;;3052:40:0;360:3883:18;;;;;;;-1:-1:-1;;360:3883:18;;;;-1:-1:-1;;;;;360:3883:18;;:::i;:::-;;1947:19:3;;1943:87;;360:3883:18;;;;;;;;;;;;;;;;1943:87:3;360:3883:18;;-1:-1:-1;;;1989:30:3;;360:3883:18;;1989:30:3;;360:3883:18;;;1989:30:3;360:3883:18;;;;;;-1:-1:-1;;360:3883:18;;;;;2192:22:3;360:3883:18;;2192:22:3;:::i;:::-;360:3883:18;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;360:3883:18;;;;;;;;3377:26;360:3883;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;360:3883:18;;;;;;;;;;;;;3377:26;360:3883;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;3377:26;360:3883;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;3377:26;360:3883;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:26;360:3883;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;4851:4:3;360:3883:18;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:3;;;;;:::i;360:3883:18:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;360:3883:18;;;;;4219:15;360:3883;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;:::i;:::-;;;14663:22:3;;;:::i;:::-;735:10:8;14813:18:3;;:35;;;360:3883:18;14813:69:3;;;360:3883:18;14809:142:3;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;15003:28:3;360:3883:18;;15003:28:3;360:3883:18;;;;;;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;;14809:142:3;360:3883:18;;-1:-1:-1;;;14909:27:3;;735:10:8;360:3883:18;14909:27:3;;360:3883:18;;;14909:27:3;14813:69;360:3883:18;;;;;;;;;;3776:18:3;360:3883:18;;;;;735:10:8;360:3883:18;;;;;;;;;;14852:30:3;14813:69;;:35;-1:-1:-1;;;;;;360:3883:18;;735:10:8;14835:13:3;;14813:35;;360:3883:18;;;;;;-1:-1:-1;;360:3883:18;;;;;;3385:22:3;;;:::i;:::-;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;360:3883:18;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:3883:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1664:40:3;;;:104;;;;360:3883:18;1664:156:3;;;;360:3883:18;;;;;;;1664:156:3;-1:-1:-1;;;829:40:12;;-1:-1:-1;1664:156:3;;;:104;-1:-1:-1;;;1720:48:3;;;-1:-1:-1;1664:104:3;;360:3883:18;;;;;;;;-1:-1:-1;;360:3883:18;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;360:3883:18;;;;:::o;:::-;;;;-1:-1:-1;;;;;360:3883:18;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;360:3883:18;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;360:3883:18;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;360:3883:18;;;;-1:-1:-1;360:3883:18;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;360:3883:18;-1:-1:-1;;;;;360:3883:18;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;360:3883:18;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;360:3883:18;;;1901:40:0;3852:578:3;-1:-1:-1;;;;;360:3883:18;;;;3852:578:3;;3946:16;;3942:87;;-1:-1:-1;360:3883:18;;;;;;;5470:7:3;360:3883:18;;;;;;;;;;735:10:8;;;;8704:18:3;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;360:3883:18;;;9156:9:3;360:3883:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;9246:27:3;360:3883:18;4319:21:3;;;;4315:109;;3852:578;;;;:::o;4315:109::-;360:3883:18;;;;4363:50:3;;;;;;;;;360:3883:18;;;;;;;;;4363:50:3;8826:256;360:3883:18;;;;15066:15:3;360:3883:18;;;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;9037:9:3;360:3883:18;;;;;;;-1:-1:-1;;360:3883:18;;;8826:256:3;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;360:3883:18;;;;;6967:31:3;;;;;;;;;360:3883:18;6967:31:3;6917:186;360:3883:18;;;7044:44:3;;;;;;735:10:8;7044:44:3;;;360:3883:18;;;;;7044:44:3;6185:127;735:10:8;;6223:16:3;;:52;;;;6185:127;6223:88;6185:127;6223:88;360:3883:18;;;;5705:15:3;360:3883:18;;735:10:8;360:3883:18;;;;;;6279:32:3;6185:127;;6223:52;360:3883:18;;;;3776:18:3;360:3883:18;;;;;735:10:8;360:3883:18;;;;;;;;;;6223:52:3;;15858:241;-1:-1:-1;360:3883:18;;;5470:7:3;360:3883:18;;;;;;-1:-1:-1;;;;;360:3883:18;;15987:19:3;;15983:88;;16080:12;15858:241;:::o;15983:88::-;360:3883:18;;;;6967:31:3;;;;16029;;;;;360:3883:18;16029:31:3;993:926:7;;;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;360:3883:18;;-1:-1:-1;;;1211:67:7;;;-1:-1:-1;;;;;360:3883:18;;;1211:67:7;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;;;1211:67:7;;360:3883:18;;;;;;;;;;:::i;:::-;1211:67:7;1190:1;;;;1211:67;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:7;;1518:385;;;360:3883:18;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:7;;;360:3883:18;;-1:-1:-1;;;1672:39:7;;1211:67;1672:39;;360:3883:18;;;;;1672:39:7;1564:325;1758:113;;-1:-1:-1;1758:113:7;360:3883:18;;;-1:-1:-1;360:3883:18;;1207:696:7;360:3883:18;;;;;;;;;1325:51:7;1321:182;;1207:696;1169:744;;;;;;;1321:182;360:3883:18;;;;9730:33:3;;;;1445:39:7;;1211:67;1445:39;;360:3883:18;1445:39:7;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;360:3883:18;;;;;-1:-1:-1;;;;;;360:3883:18;;;;;;1211:67:7;;;;360:3883:18;;;;1211:67:7;;;;;360:3883:18;-1:-1:-1;;360:3883:18;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;1308:634:11;1430:17;-1:-1:-1;29291:8:14;;29282:17;;;;29278:103;;1308:634:11;29407:8:14;;29398:17;;;;29394:103;;1308:634:11;29523:8:14;;29514:17;;;;29510:103;;1308:634:11;29639:7:14;;29630:16;;;;29626:100;;1308:634:11;29752:7:14;;29743:16;;;;29739:100;;1308:634:11;29856:16:14;29865:7;29856:16;;;29852:100;;1308:634:11;29978:7:14;29969:16;;;;29965:66;;1308:634:11;1450:1;360:3883:18;;1545:94:11;360:3883:18;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;1545:94:11;;;1652:247;1450:1;;;1652:247;1912:13;;;;1308:634;:::o;1652:247::-;-1:-1:-1;;360:3883:18;;;;-1:-1:-1;;;1706:111:11;;;;360:3883:18;1706:111:11;360:3883:18;1867:10:11;;;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:14;360:3883:18;30015:1:14;360:3883:18;29965:66:14;;;29852:100;360:3883:18;;29865:7:14;29936:1;360:3883:18;;;;29852:100:14;;;29739;29823:1;360:3883:18;;;;;;29739:100:14;;;;29626;29710:1;360:3883:18;;;;;;29626:100:14;;;;29510:103;29596:2;360:3883:18;;;;;;29510:103:14;;;;29394;29480:2;360:3883:18;;;;;;29394:103:14;;;;29278;29364:2;;-1:-1:-1;360:3883:18;;;-1:-1:-1;29278:103:14;;;360:3883:18;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3552:494;360:3883;;;;;-1:-1:-1;;;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;360:3883:18;;;;;;;;;;;;;;;;;;;;;;3777:2;360:3883;;;;;;;;;;;;;;3790:12;;;360:3883;;;;;;;;;;3812:12;360:3883;;;3812:12;-1:-1:-1;3854:6:18;3858:2;3854:6;;;;4021:18;;;;;3552:494;:::o;3862:3::-;3923:2;360:3883;;;;;;;3913:13;;;;;;;;;360:3883;-1:-1:-1;;;;;;3995:4:18;360:3883;3898:35;360:3883;;;;;3898:35;;:::i;:::-;360:3883;;;;;;3885:1;;360:3883;;;;;;;;;;;;;;;;;;;;3881:52;3964:37;3881:52;;;;;-1:-1:-1;3881:52:18;;;:::i;:::-;;360:3883;3964:37;;:::i;:::-;360:3883;;3951:1;;360:3883;;;;;;;;3947:54;;;3862:3;3947:54;;-1:-1:-1;3947:54:18;;;;:::i;:::-;;3862:3;:::i;:::-;3839:13;;360:3883;;;;;;-1:-1:-1;360:3883:18;;;-1:-1:-1;360:3883:18;;;;;;;-1:-1:-1;360:3883:18;;;-1:-1:-1;360:3883:18"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getWinnerData(uint256)":"d58a0e12","isApprovedForAll(address,address)":"e985e9c5","mintWinnerNFT(address,address,string,uint256,string)":"c3b34a40","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","winnerData(uint256)":"f4025aab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameMode\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"}],\"name\":\"WinnerNFTMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getWinnerData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"gameMode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"gameScreenshot\",\"type\":\"string\"}],\"internalType\":\"struct OrbitWinnerNFT.WinnerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"gameMode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"screenshotHash\",\"type\":\"string\"}],\"name\":\"mintWinnerNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winnerData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"gameMode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"gameScreenshot\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"NFT contract for minting winner certificates\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getWinnerData(uint256)\":{\"params\":{\"tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"WinnerData struct\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mintWinnerNFT(address,address,string,uint256,string)\":{\"params\":{\"gameMode\":\"Type of game won\",\"opponent\":\"Address of the opponent\",\"screenshotHash\":\"IPFS hash or URL of winning screenshot\",\"wagerAmount\":\"Amount wagered\",\"winner\":\"Address of the winner\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"setBaseURI(string)\":{\"params\":{\"newBaseURI\":\"New base URI\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"Token metadata URI\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"Total number of NFTs minted\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OrbitWinnerNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getWinnerData(uint256)\":{\"notice\":\"Get winner data for a token\"},\"mintWinnerNFT(address,address,string,uint256,string)\":{\"notice\":\"Mint NFT to game winner\"},\"setBaseURI(string)\":{\"notice\":\"Set base token URI\"},\"tokenURI(uint256)\":{\"notice\":\"Get token URI for metadata\"},\"totalSupply()\":{\"notice\":\"Get total supply\"}},\"notice\":\"Mints NFTs to game winners with metadata\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrbitWinnerNFT.sol\":\"OrbitWinnerNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/OrbitWinnerNFT.sol\":{\"keccak256\":\"0x2d4e1d5998fc23b6f8ee94ed6615331c10f1030ec833236b6c4837007bd1434b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f753a4c77ee522c32f022794c49327295ba82c87f3755557a01533e40609a67f\",\"dweb:/ipfs/QmcbwTBnb2xnJ3KfzHoWydNrnc2MmU6NvaDsmy8Gdaanjd\"]}},\"version\":1}"}}}}}